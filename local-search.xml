<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>高清壁纸网站</title>
    <link href="/2021/12/05/%E9%AB%98%E6%B8%85%E5%A3%81%E7%BA%B8%E7%BD%91%E7%AB%99/"/>
    <url>/2021/12/05/%E9%AB%98%E6%B8%85%E5%A3%81%E7%BA%B8%E7%BD%91%E7%AB%99/</url>
    
    <content type="html"><![CDATA[<h1 id="高清壁纸网站"><a href="#高清壁纸网站" class="headerlink" title="高清壁纸网站"></a>高清壁纸网站</h1><ul><li>1: <a href="https://wallpaperhub.app/">https://wallpaperhub.app/</a></li><li>2: <a href="https://wallhaven.cc/">https://wallhaven.cc/</a></li><li>3: <a href="https://unsplash.com/">https://unsplash.com/</a></li></ul>]]></content>
    
    
    
    <tags>
      
      <tag>杂七杂八</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>CTF-misc-常见编码</title>
    <link href="/2021/12/05/CTF-misc-%E5%B8%B8%E8%A7%81%E7%BC%96%E7%A0%81/"/>
    <url>/2021/12/05/CTF-misc-%E5%B8%B8%E8%A7%81%E7%BC%96%E7%A0%81/</url>
    
    <content type="html"><![CDATA[<h1 id="常见CTF编码及加解密"><a href="#常见CTF编码及加解密" class="headerlink" title="常见CTF编码及加解密"></a>常见CTF编码及加解密</h1><h2 id="ASCLL"><a href="#ASCLL" class="headerlink" title="ASCLL"></a>ASCLL</h2><h3 id="简述："><a href="#简述：" class="headerlink" title="简述："></a>简述：</h3><p>ASCII 码是对英语字符与二进制位之间的关系，做了统一规定。</p><p>基本的 ASCII 字符集共有 128 个字符，其中有 96 个可打印字符，包括常用的字母、数字、标点符号等，</p><p>​ 如：空格SPACE 是32（二进制：00100000）；</p><p>​ 数字0 是48(二进制：00110000)；</p><p>​ 大写字母A 是65（二进制：01000001）。</p><p>另外还有 32 个控制字符（不能打印出来）。</p><p>这128个符号，只占用了一个字节的后面7位，最前面的一位统一规定为0。</p><h3 id="特征："><a href="#特征：" class="headerlink" title="特征："></a>特征：</h3><ul><li><p>0-9, 49-57</p></li><li><p>A-Z, 65-90</p></li><li><p>a-z, 97-122</p></li></ul><h3 id="举例："><a href="#举例：" class="headerlink" title="举例："></a>举例：</h3><figure class="highlight bash"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs bash">明文：hello,world.<br>十六进制：0x680x650x6c0x6c0x6f0xff0c0x770x6f0x720x6c0x640x2e<br>十进制：1041011081081112551211911111410810046<br>二进制：011010000110010101101100011011000110111100101100011101110110111101110010011011000110010000101110<br></code></pre></div></td></tr></table></figure><h3 id="解码链接"><a href="#解码链接" class="headerlink" title="解码链接"></a>解码链接</h3><p>1: <a href="https://www.107000.com/T-Ascii">https://www.107000.com/T-Ascii</a><br>2: <a href="http://www.ab126.com/goju/1711.html">http://www.ab126.com/goju/1711.html</a></p>]]></content>
    
    
    <categories>
      
      <category>CTF-Misc</category>
      
    </categories>
    
    
    <tags>
      
      <tag>编码查询</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>CTF-misc简介</title>
    <link href="/2021/12/05/CTF-misc%E7%AE%80%E4%BB%8B/"/>
    <url>/2021/12/05/CTF-misc%E7%AE%80%E4%BB%8B/</url>
    
    <content type="html"><![CDATA[<h2 id="Misc-简介"><a href="#Misc-简介" class="headerlink" title="Misc 简介"></a>Misc 简介</h2><p>Misc 是英文 Miscellaneous 的前四个字母，杂项、混合体、大杂烩的意思。</p><p>Misc 在国外的比赛中其实又被具体划分为各个小块，有</p><ul><li>Recon</li><li>Forensic</li><li>Stego</li><li>Misc</li><li>……<br>在国内的比赛中，被统一划分入 Misc 领域，有时 Crypto（尤其是古典密码）也被划入其中。</li></ul><p>在 Misc 这一章节中，将从以下几个方面介绍这一块的知识：</p><ul><li>Recon（信息搜集）</li></ul><p>主要介绍一些获取信息的渠道和一些利用百度、谷歌等搜索引擎的技巧</p><ul><li>Encode（编码转换）</li></ul><p>主要介绍在 CTF 比赛中一些常见的编码形式以及转换的技巧和常见方式</p><ul><li>Forensic &amp;&amp; Stego（数字取证 &amp;&amp; 隐写分析）</li></ul><p>隐写取证是 Misc 中最为重要的一块，包括文件分析、隐写、内存镜像分析和流量抓包分析等等，涉及巧妙的编码、隐藏数据、层层嵌套的文件中的文件，灵活利用搜索引擎获取所需要的信息等等。</p><p>CTF 中 Misc 与现实中的取证不同，现实中的取证很少会涉及巧妙的编码加密，数据隐藏，被分散嵌套在各处的文件字符串，或是其他脑洞类的 Challenge。很多时候是去精心恢复一个残损的文件，挖掘损坏硬盘中的蛛丝马迹, 或者从内存镜像中抽取有用的信息。</p><p>现实的取证需要从业者能够找出间接的恶意行为证据：攻击者攻击系统的痕迹，或是内部威胁行为的痕迹。实际工作中计算机取证大部分是从日志、内存、文件系统中找出犯罪线索，并找出与文件或文件系统中数据的关系。而流量取证比起内容数据的分析，更注重元数据的分析，也就是当前不同端点间常用 TLS 加密的网络会话。</p><p>Misc 是切入 CTF 竞赛领域、培养兴趣的最佳入口。Misc 考察基本知识，对安全技能的各个层面都有不同程度的涉及，可以在很大程度上启发思维。</p>]]></content>
    
    
    <categories>
      
      <category>CTF-Misc</category>
      
    </categories>
    
    
    <tags>
      
      <tag>简介</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Hexo d 错误</title>
    <link href="/2021/12/05/hexo-d/"/>
    <url>/2021/12/05/hexo-d/</url>
    
    <content type="html"><![CDATA[<h2 id="解决方式一："><a href="#解决方式一：" class="headerlink" title="解决方式一："></a>解决方式一：</h2><figure class="highlight bash"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs bash"><span class="hljs-comment">#删除git提交内容文件夹</span><br>rm -rf .deploy_git/<br><br><span class="hljs-comment">#执行</span><br>git config --global core.autocrlf <span class="hljs-literal">false</span><br><br><span class="hljs-comment">#最后</span><br>hexo clean &amp;&amp; hexo g &amp;&amp; hexo d<br></code></pre></div></td></tr></table></figure><h2 id="解决方式二：有可能是你的git-repo配置地址不正确-可以将http方式变更为ssh方式"><a href="#解决方式二：有可能是你的git-repo配置地址不正确-可以将http方式变更为ssh方式" class="headerlink" title="解决方式二：有可能是你的git repo配置地址不正确,可以将http方式变更为ssh方式"></a>解决方式二：有可能是你的git repo配置地址不正确,可以将http方式变更为ssh方式</h2><figure class="highlight bash"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs bash"><span class="hljs-comment">#进入站点根目录</span><br><span class="hljs-built_in">cd</span> /usr/<span class="hljs-built_in">local</span>/src/hexo/hanyubolg/<br><br><span class="hljs-comment">#删除git提交内容文件夹</span><br>vim _config.yml<br><br><span class="hljs-comment">#修改</span><br>deploy:<br><br><span class="hljs-built_in">type</span>: git<br><br>repo: https://github.com/yourname/yourname.github.io.git -&gt; git@github.com:a956551943/weixiaohui.github.io.git<br><br>branch: master<br><br><span class="hljs-comment">#最后</span><br>hexo clean &amp;&amp; hexo g &amp;&amp; hexo d<br><br></code></pre></div></td></tr></table></figure><h2 id="解决方式三：不建议"><a href="#解决方式三：不建议" class="headerlink" title="解决方式三：不建议"></a>解决方式三：不建议</h2><figure class="highlight bash"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs bash"><span class="hljs-comment">#进入站点根目录</span><br><span class="hljs-built_in">cd</span> /usr/<span class="hljs-built_in">local</span>/src/hexo/hanyubolg/<br><br><span class="hljs-comment">#进入depoly文件夹</span><br><span class="hljs-built_in">cd</span> .deploy_git/<br><br><span class="hljs-comment">#强制推送</span><br>git push -f<br></code></pre></div></td></tr></table></figure>]]></content>
    
    
    
    <tags>
      
      <tag>常见错误</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>CTF比赛简介</title>
    <link href="/2021/12/02/CTF%E6%AF%94%E8%B5%9B%E7%AE%80%E4%BB%8B/"/>
    <url>/2021/12/02/CTF%E6%AF%94%E8%B5%9B%E7%AE%80%E4%BB%8B/</url>
    
    <content type="html"><![CDATA[<h1 id="AwD-攻防模式"><a href="#AwD-攻防模式" class="headerlink" title="AwD-攻防模式"></a>AwD-攻防模式</h1><p>Attack with Defense(AwD)全称攻防模式，在攻防模式CTF赛制中，参赛队伍连接到同一个网络空间。主办方会预先为每个参赛队分配要防守的主机，该主机称之为GameBox，每个队伍之间的GameBox配置及漏洞是完全一致的，选手需要防护自己的GameBox不被攻击的同时挖掘漏洞并攻击对手服务来得分。在AwD中主办方会运行一个名为Checker的程序定时检测选手的GameBox的运行状态。若检测到状态不对则判定该GameBox宕机，按照规则扣除一定分数。攻防模式CTF赛制可以实时通过得分反映出比赛情况，最终也以得分直接分出胜负，是一种竞争激烈，具有很强观赏性和高度透明性的网络安全赛制。在这种赛制中，不仅仅是比参赛队员的智力和技术，也比体力（因为比赛一般都会持续24至48小时左右），同时也比团队之间的分工配合与合作。</p><p>AwD通常仅包含Web及Pwn两种类型的题目。每个队伍可能会分到多个GameBox，随着比赛的进行，最早的GameBox可能会下线，同时会上线新的GameBox。</p><h1 id="AWP-攻防增强"><a href="#AWP-攻防增强" class="headerlink" title="AWP-攻防增强"></a>AWP-攻防增强</h1><p>Attack Defense Plus(ADP)全称攻防增强模式，在该模式下中，参赛队伍连接到同一个网络空间。主办方会在平台上放置题目，选手需要登录到平台获得题目信息</p><p>攻击模式下，平台会给出题目的访问链接，选手按照解题模式做题提交flag即可完成攻击，当完成攻击后， 每轮计算分数时均会计算该题目的攻击得分。</p><p>防御模式下，选手需要自行挖掘题目的漏洞，并制作漏洞补丁包上传至平台，之后点击验证。验证时平台会新建一个完全干净的题目环境，使用预置的Exploit进行攻击，若攻击成功当验证通过之后（即已经完成修补），每轮计算分数均会认为该题目已防御。</p><p>也就是说，对于每个题目，仅需要攻击成功一次，防御成功一次，该题就可以认为已完成，后续无需进行关注。</p><p>ADP通常仅包含Web及Pwn两种类型的题目。随着比赛的进行，最早的题目可能会下线，后续也有可能会上线新的题目。</p><p>ADP相较于AwD来说，选手无须编写批量攻击脚本，也无需关注题目的环境是否被攻击，是否服务异常等等，要做的只是攻击一次，防御一次，选手可以有更多的时间聚焦于还未完成的题目。从主办方的角度来说，大大减轻了比赛的硬件成本和运维成本。</p><h1 id="RHG-自动化-AI自动化"><a href="#RHG-自动化-AI自动化" class="headerlink" title="RHG-自动化[ AI自动化]"></a>RHG-自动化[ AI自动化]</h1><p>Robo Hacking Game(RHG)该利用人工智能或是AI或是自动化攻击程序来全自动的挖掘并利用漏洞，考验选手对于漏洞理解以及工程化能力。比赛开始前(一般为1-4周左右)主办方会给出测试环境以及相关接口文档。选手需要编写自动化程序来请求接口获取题目相关信息，该类程序通常称之为bot，在程序中全自动访问并挖掘目标漏洞，完成利用漏洞攻击并获取flag的过程。获取到的flag也由程序自动化提交。RHG因为是由bot全自动进行工作，所以比赛开始即可视为结束。剩下的一切全看参赛选手编写的自动化bot的工作情况。</p><p>比赛过程中不允许选手对bot进行任何的操作(包括debug/patch等等)。选手仅能看到自己的bot完成了哪些题。目前的得分情况等等。</p><h1 id="RW-真实世界"><a href="#RW-真实世界" class="headerlink" title="RW-真实世界"></a>RW-真实世界</h1><p>Real World(RW) 首次于2018年长亭科技主办的RealWorldCTF中出现，该赛制着重考察选手在面对真实的环境下的漏洞挖掘与利用能力。通常RW模式出题也会围绕着能够应用于真实渗透攻击当中的漏洞，一般来说RW常见题型为VM/Docker逃逸、针对浏览器的攻击、针对IoT/Car等设备的攻击，Web类攻击等等 在RW赛制中会有一个Show Time，当选手认为自己已经可以完成题目时，选手可以在比赛平台上提交展示申请，由工作人员根据申请先后顺序进行展示排期。选手展示之前需要上台并连接相关网络，同时现场大屏会切换至目标的正常页面。选手确认连接并测试OK之后开始计时。一般情况下上台攻击的时间为5分钟，选手一旦完成攻击现场大屏幕会实时看到攻击的效果，此时裁判会根据效果是否符合题目要求来判定该题是否完成。如5在攻击时间内依然未能看到展示效果则认为本次攻击失败。现如今为了防止选手恶意排期。通常会有一个队伍总展示次数(例如在2019年数字经济云安全公测大赛中每个队伍只允许上台展示30次)，选手也需要尽可能保证上台之后攻击的成功率</p><p>举个例子。题目要求需要攻击位于比赛网络中的某个网站并将首页替换为包含队伍名称的页面。题目给出该网站的一些信息(源代码/数据库等等)，选手经过本地挖掘漏洞之后，提交展示申请，排期到了之后进行上台展示。注意，因为RW模式是以展示效果来作为题目是否完成的准则，所以在RW模式中并不存在Flag。</p><h1 id="KoH-抢占山头"><a href="#KoH-抢占山头" class="headerlink" title="KoH-抢占山头"></a>KoH-抢占山头</h1><p>King of Hill(KoH)是近些年新衍生的一种赛制。该赛制有点类似于AwD，但是又和AwD有些不一样。选手面对的是一个黑盒的目标，需要先挖掘漏洞并利用漏洞控制目标。将自己的队伍标识(队伍名称或是Token之类)写入到指定文件。随后在该主机上进行加固等操作防止其他队伍攻击，主办方会定期去检查标识文件，根据文件中的队伍标识来判定本回合分数给予哪个队伍。可以看出KoH也是一种对抗极为激烈的赛制，同时考察选手的渗透能力及防御加固能力。</p><h1 id="Mix"><a href="#Mix" class="headerlink" title="Mix"></a>Mix</h1><p>混合模式结合了以上多种模式，现如今单一的赛制已经无法满足比赛及选手的参赛需求，所以大部分比赛会同时以多个模式进行比赛。例如参赛队伍通过解题(Jeopardy)可以获取一些初始分数，然后通过攻防对抗(AwD)进行得分增减的零和游戏，最终以得分高低分出胜负。</p>]]></content>
    
    
    <categories>
      
      <category>CTF</category>
      
    </categories>
    
    
    <tags>
      
      <tag>简介</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Hello World</title>
    <link href="/2021/11/29/hello-world/"/>
    <url>/2021/11/29/hello-world/</url>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs bash">$ hexo new <span class="hljs-string">&quot;My New Post&quot;</span><br></code></pre></div></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs bash">$ hexo server<br></code></pre></div></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs bash">$ hexo generate<br></code></pre></div></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs bash">$ hexo deploy<br></code></pre></div></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
    
  </entry>
  
  
  
  
</search>
