<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>Android实验2</title>
    <link href="/2022/04/21/Android%E5%AE%9E%E9%AA%8C1/"/>
    <url>/2022/04/21/Android%E5%AE%9E%E9%AA%8C1/</url>
    
    <content type="html"><![CDATA[<h1 id="实验-2-Android-用户界面"><a href="#实验-2-Android-用户界面" class="headerlink" title="实验 2 Android 用户界面"></a>实验 2 Android 用户界面</h1><h2 id="2-1-实现如下的程序功能-2-学时"><a href="#2-1-实现如下的程序功能-2-学时" class="headerlink" title="2.1 实现如下的程序功能(2 学时)"></a>2.1 实现如下的程序功能(2 学时)</h2><h2 id="要求："><a href="#要求：" class="headerlink" title="要求："></a>要求：</h2><p>1、基于线性布局与相对布局，分别实现图 1 所示的用户界面。<br><img src="/img/android2-1-1.png"><br>2、点击“提交”按钮，对用户输入进行检查，“姓名”为必填项，未填姓名会<br>显示提示信息。<br><img src="/img/android2-1-2.png"><br>3、点击“提交”按钮，若姓名输入不为空，将显示用户输入的姓名、性别、专<br>业、兴趣爱好信息，显示方式采用 Toast 显示。如图 3 所示。<br><img src="/img/android2-1-3.png"></p><h2 id="activity-main-xml文件"><a href="#activity-main-xml文件" class="headerlink" title="activity_main.xml文件"></a>activity_main.xml文件</h2><figure class="highlight xml"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs xml"><span class="hljs-meta">&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">LinearLayout</span> <span class="hljs-attr">xmlns:android</span>=<span class="hljs-string">&quot;http://schemas.android.com/apk/res/android&quot;</span></span><br><span class="hljs-tag">    <span class="hljs-attr">xmlns:app</span>=<span class="hljs-string">&quot;http://schemas.android.com/apk/res-auto&quot;</span></span><br><span class="hljs-tag">    <span class="hljs-attr">xmlns:tools</span>=<span class="hljs-string">&quot;http://schemas.android.com/tools&quot;</span></span><br><span class="hljs-tag">    <span class="hljs-attr">android:layout_width</span>=<span class="hljs-string">&quot;match_parent&quot;</span></span><br><span class="hljs-tag">    <span class="hljs-attr">android:orientation</span>=<span class="hljs-string">&quot;vertical&quot;</span></span><br><span class="hljs-tag">    <span class="hljs-attr">android:layout_height</span>=<span class="hljs-string">&quot;match_parent&quot;</span></span><br><span class="hljs-tag">    <span class="hljs-attr">tools:context</span>=<span class="hljs-string">&quot;.MainActivity&quot;</span>&gt;</span><br>   <span class="hljs-tag">&lt;<span class="hljs-name">LinearLayout</span></span><br><span class="hljs-tag">       <span class="hljs-attr">android:orientation</span>=<span class="hljs-string">&quot;horizontal&quot;</span></span><br><span class="hljs-tag">       <span class="hljs-attr">android:layout_width</span>=<span class="hljs-string">&quot;match_parent&quot;</span></span><br><span class="hljs-tag">       <span class="hljs-attr">android:layout_height</span>=<span class="hljs-string">&quot;wrap_content&quot;</span>&gt;</span><br>       <span class="hljs-tag">&lt;<span class="hljs-name">TextView</span></span><br><span class="hljs-tag">           <span class="hljs-attr">android:layout_width</span>=<span class="hljs-string">&quot;wrap_content&quot;</span></span><br><span class="hljs-tag">           <span class="hljs-attr">android:text</span>=<span class="hljs-string">&quot;姓名&quot;</span></span><br><span class="hljs-tag">           <span class="hljs-attr">android:textColor</span>=<span class="hljs-string">&quot;@color/black&quot;</span></span><br><span class="hljs-tag">           <span class="hljs-attr">android:textSize</span>=<span class="hljs-string">&quot;30sp&quot;</span></span><br><span class="hljs-tag">           <span class="hljs-attr">android:layout_height</span>=<span class="hljs-string">&quot;wrap_content&quot;</span>&gt;</span><br><br>       <span class="hljs-tag">&lt;/<span class="hljs-name">TextView</span>&gt;</span><br>       <span class="hljs-tag">&lt;<span class="hljs-name">EditText</span></span><br><span class="hljs-tag">           <span class="hljs-attr">android:id</span>=<span class="hljs-string">&quot;@+id/name&quot;</span></span><br><span class="hljs-tag">           <span class="hljs-attr">android:layout_width</span>=<span class="hljs-string">&quot;300dp&quot;</span></span><br><span class="hljs-tag">           <span class="hljs-attr">android:textSize</span>=<span class="hljs-string">&quot;25sp&quot;</span></span><br><span class="hljs-tag">           <span class="hljs-attr">android:layout_height</span>=<span class="hljs-string">&quot;wrap_content&quot;</span>&gt;</span><br>       <span class="hljs-tag">&lt;/<span class="hljs-name">EditText</span>&gt;</span><br>   <span class="hljs-tag">&lt;/<span class="hljs-name">LinearLayout</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">LinearLayout</span></span><br><span class="hljs-tag">        <span class="hljs-attr">android:layout_marginTop</span>=<span class="hljs-string">&quot;10dp&quot;</span></span><br><span class="hljs-tag">        <span class="hljs-attr">android:layout_width</span>=<span class="hljs-string">&quot;match_parent&quot;</span></span><br><span class="hljs-tag">        <span class="hljs-attr">android:orientation</span>=<span class="hljs-string">&quot;horizontal&quot;</span></span><br><span class="hljs-tag">        <span class="hljs-attr">android:layout_height</span>=<span class="hljs-string">&quot;wrap_content&quot;</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">TextView</span></span><br><span class="hljs-tag">            <span class="hljs-attr">android:layout_width</span>=<span class="hljs-string">&quot;wrap_content&quot;</span></span><br><span class="hljs-tag">            <span class="hljs-attr">android:text</span>=<span class="hljs-string">&quot;性别&quot;</span></span><br><span class="hljs-tag">            <span class="hljs-attr">android:textColor</span>=<span class="hljs-string">&quot;@color/black&quot;</span></span><br><span class="hljs-tag">            <span class="hljs-attr">android:textSize</span>=<span class="hljs-string">&quot;30sp&quot;</span></span><br><span class="hljs-tag">            <span class="hljs-attr">android:layout_height</span>=<span class="hljs-string">&quot;wrap_content&quot;</span>&gt;</span><br><br>        <span class="hljs-tag">&lt;/<span class="hljs-name">TextView</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">CheckBox</span></span><br><span class="hljs-tag">            <span class="hljs-attr">android:id</span>=<span class="hljs-string">&quot;@+id/man&quot;</span></span><br><span class="hljs-tag">            <span class="hljs-attr">style</span>=<span class="hljs-string">&quot;@style/Widget.AppCompat.CompoundButton.RadioButton&quot;</span></span><br><span class="hljs-tag">            <span class="hljs-attr">android:layout_width</span>=<span class="hljs-string">&quot;wrap_content&quot;</span></span><br><span class="hljs-tag">            <span class="hljs-attr">android:text</span>=<span class="hljs-string">&quot;男&quot;</span></span><br><span class="hljs-tag">            <span class="hljs-attr">android:shadowRadius</span>=<span class="hljs-string">&quot;100&quot;</span></span><br><span class="hljs-tag">            <span class="hljs-attr">android:textSize</span>=<span class="hljs-string">&quot;30sp&quot;</span></span><br><span class="hljs-tag">            <span class="hljs-attr">android:layout_marginLeft</span>=<span class="hljs-string">&quot;30dp&quot;</span></span><br><span class="hljs-tag">            <span class="hljs-attr">android:layout_height</span>=<span class="hljs-string">&quot;wrap_content&quot;</span>&gt;</span><br><br>        <span class="hljs-tag">&lt;/<span class="hljs-name">CheckBox</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">CheckBox</span></span><br><span class="hljs-tag">            <span class="hljs-attr">style</span>=<span class="hljs-string">&quot;@style/Widget.AppCompat.CompoundButton.RadioButton&quot;</span></span><br><span class="hljs-tag">            <span class="hljs-attr">android:id</span>=<span class="hljs-string">&quot;@+id/woman&quot;</span></span><br><span class="hljs-tag">            <span class="hljs-attr">android:layout_width</span>=<span class="hljs-string">&quot;wrap_content&quot;</span></span><br><span class="hljs-tag">            <span class="hljs-attr">android:text</span>=<span class="hljs-string">&quot;女&quot;</span></span><br><span class="hljs-tag">            <span class="hljs-attr">android:textSize</span>=<span class="hljs-string">&quot;30sp&quot;</span></span><br><span class="hljs-tag">            <span class="hljs-attr">android:layout_marginLeft</span>=<span class="hljs-string">&quot;30dp&quot;</span></span><br><span class="hljs-tag">            <span class="hljs-attr">android:layout_height</span>=<span class="hljs-string">&quot;wrap_content&quot;</span>&gt;</span><br><br>        <span class="hljs-tag">&lt;/<span class="hljs-name">CheckBox</span>&gt;</span><br><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">LinearLayout</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">LinearLayout</span></span><br><span class="hljs-tag">        <span class="hljs-attr">android:layout_marginTop</span>=<span class="hljs-string">&quot;10dp&quot;</span></span><br><span class="hljs-tag">        <span class="hljs-attr">android:orientation</span>=<span class="hljs-string">&quot;horizontal&quot;</span></span><br><span class="hljs-tag">        <span class="hljs-attr">android:layout_width</span>=<span class="hljs-string">&quot;match_parent&quot;</span></span><br><span class="hljs-tag">        <span class="hljs-attr">android:layout_height</span>=<span class="hljs-string">&quot;wrap_content&quot;</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">TextView</span></span><br><span class="hljs-tag">            <span class="hljs-attr">android:layout_width</span>=<span class="hljs-string">&quot;wrap_content&quot;</span></span><br><span class="hljs-tag">            <span class="hljs-attr">android:text</span>=<span class="hljs-string">&quot;专业&quot;</span></span><br><span class="hljs-tag">            <span class="hljs-attr">android:textColor</span>=<span class="hljs-string">&quot;@color/black&quot;</span></span><br><span class="hljs-tag">            <span class="hljs-attr">android:textSize</span>=<span class="hljs-string">&quot;30sp&quot;</span></span><br><span class="hljs-tag">            <span class="hljs-attr">android:layout_height</span>=<span class="hljs-string">&quot;wrap_content&quot;</span>&gt;</span><br><br>        <span class="hljs-tag">&lt;/<span class="hljs-name">TextView</span>&gt;</span><br><br>        <span class="hljs-tag">&lt;<span class="hljs-name">Spinner</span></span><br><span class="hljs-tag">            <span class="hljs-attr">android:theme</span>=<span class="hljs-string">&quot;@style/life_spinner_style&quot;</span></span><br><span class="hljs-tag">            <span class="hljs-attr">android:id</span>=<span class="hljs-string">&quot;@+id/zhuanye&quot;</span></span><br><span class="hljs-tag">            <span class="hljs-attr">android:entries</span>=<span class="hljs-string">&quot;@array/ctype&quot;</span></span><br><span class="hljs-tag">            <span class="hljs-attr">android:layout_width</span>=<span class="hljs-string">&quot;wrap_content&quot;</span></span><br><span class="hljs-tag">            <span class="hljs-attr">android:layout_height</span>=<span class="hljs-string">&quot;37dp&quot;</span></span><br><span class="hljs-tag">            &gt;</span><br>        <span class="hljs-tag">&lt;/<span class="hljs-name">Spinner</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">LinearLayout</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">LinearLayout</span></span><br><span class="hljs-tag">        <span class="hljs-attr">android:orientation</span>=<span class="hljs-string">&quot;vertical&quot;</span></span><br><span class="hljs-tag">        <span class="hljs-attr">android:layout_marginTop</span>=<span class="hljs-string">&quot;20dp&quot;</span></span><br><span class="hljs-tag">        <span class="hljs-attr">android:layout_width</span>=<span class="hljs-string">&quot;match_parent&quot;</span></span><br><span class="hljs-tag">        <span class="hljs-attr">android:layout_height</span>=<span class="hljs-string">&quot;wrap_content&quot;</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">TextView</span></span><br><span class="hljs-tag">            <span class="hljs-attr">android:layout_width</span>=<span class="hljs-string">&quot;wrap_content&quot;</span></span><br><span class="hljs-tag">            <span class="hljs-attr">android:text</span>=<span class="hljs-string">&quot;兴趣爱好&quot;</span></span><br><span class="hljs-tag">            <span class="hljs-attr">android:textColor</span>=<span class="hljs-string">&quot;@color/black&quot;</span></span><br><span class="hljs-tag">            <span class="hljs-attr">android:textSize</span>=<span class="hljs-string">&quot;35sp&quot;</span></span><br><span class="hljs-tag">            <span class="hljs-attr">android:layout_height</span>=<span class="hljs-string">&quot;wrap_content&quot;</span>&gt;</span><br><br>        <span class="hljs-tag">&lt;/<span class="hljs-name">TextView</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">LinearLayout</span></span><br><span class="hljs-tag">            <span class="hljs-attr">android:layout_width</span>=<span class="hljs-string">&quot;match_parent&quot;</span></span><br><span class="hljs-tag">            <span class="hljs-attr">android:orientation</span>=<span class="hljs-string">&quot;horizontal&quot;</span></span><br><span class="hljs-tag">            <span class="hljs-attr">android:layout_height</span>=<span class="hljs-string">&quot;wrap_content&quot;</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">CheckBox</span></span><br><span class="hljs-tag">                <span class="hljs-attr">android:id</span>=<span class="hljs-string">&quot;@+id/music&quot;</span></span><br><span class="hljs-tag">                <span class="hljs-attr">android:layout_width</span>=<span class="hljs-string">&quot;wrap_content&quot;</span></span><br><span class="hljs-tag">                <span class="hljs-attr">android:text</span>=<span class="hljs-string">&quot;音乐&quot;</span></span><br><span class="hljs-tag">                <span class="hljs-attr">android:textSize</span>=<span class="hljs-string">&quot;30sp&quot;</span></span><br><span class="hljs-tag">                <span class="hljs-attr">android:layout_marginLeft</span>=<span class="hljs-string">&quot;30dp&quot;</span></span><br><span class="hljs-tag">                <span class="hljs-attr">android:layout_height</span>=<span class="hljs-string">&quot;wrap_content&quot;</span>&gt;</span><br><br>            <span class="hljs-tag">&lt;/<span class="hljs-name">CheckBox</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">CheckBox</span></span><br><span class="hljs-tag">                <span class="hljs-attr">android:id</span>=<span class="hljs-string">&quot;@+id/sport&quot;</span></span><br><span class="hljs-tag">                <span class="hljs-attr">android:layout_width</span>=<span class="hljs-string">&quot;wrap_content&quot;</span></span><br><span class="hljs-tag">                <span class="hljs-attr">android:text</span>=<span class="hljs-string">&quot;运动&quot;</span></span><br><span class="hljs-tag">                <span class="hljs-attr">android:textSize</span>=<span class="hljs-string">&quot;30sp&quot;</span></span><br><span class="hljs-tag">                <span class="hljs-attr">android:layout_marginLeft</span>=<span class="hljs-string">&quot;30dp&quot;</span></span><br><span class="hljs-tag">                <span class="hljs-attr">android:layout_height</span>=<span class="hljs-string">&quot;wrap_content&quot;</span>&gt;</span><br><br>            <span class="hljs-tag">&lt;/<span class="hljs-name">CheckBox</span>&gt;</span><br>        <span class="hljs-tag">&lt;/<span class="hljs-name">LinearLayout</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">LinearLayout</span></span><br><span class="hljs-tag">            <span class="hljs-attr">android:layout_width</span>=<span class="hljs-string">&quot;match_parent&quot;</span></span><br><span class="hljs-tag">            <span class="hljs-attr">android:orientation</span>=<span class="hljs-string">&quot;horizontal&quot;</span></span><br><span class="hljs-tag">            <span class="hljs-attr">android:layout_height</span>=<span class="hljs-string">&quot;wrap_content&quot;</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">CheckBox</span></span><br><span class="hljs-tag">                <span class="hljs-attr">android:id</span>=<span class="hljs-string">&quot;@+id/swimming&quot;</span></span><br><span class="hljs-tag">                <span class="hljs-attr">android:layout_width</span>=<span class="hljs-string">&quot;wrap_content&quot;</span></span><br><span class="hljs-tag">                <span class="hljs-attr">android:text</span>=<span class="hljs-string">&quot;游泳&quot;</span></span><br><span class="hljs-tag">                <span class="hljs-attr">android:textSize</span>=<span class="hljs-string">&quot;30sp&quot;</span></span><br><span class="hljs-tag">                <span class="hljs-attr">android:layout_marginLeft</span>=<span class="hljs-string">&quot;30dp&quot;</span></span><br><span class="hljs-tag">                <span class="hljs-attr">android:layout_height</span>=<span class="hljs-string">&quot;wrap_content&quot;</span>&gt;</span><br><br>            <span class="hljs-tag">&lt;/<span class="hljs-name">CheckBox</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">CheckBox</span></span><br><span class="hljs-tag">                <span class="hljs-attr">android:id</span>=<span class="hljs-string">&quot;@+id/read&quot;</span></span><br><span class="hljs-tag">                <span class="hljs-attr">android:layout_width</span>=<span class="hljs-string">&quot;wrap_content&quot;</span></span><br><span class="hljs-tag">                <span class="hljs-attr">android:text</span>=<span class="hljs-string">&quot;阅读&quot;</span></span><br><span class="hljs-tag">                <span class="hljs-attr">android:textSize</span>=<span class="hljs-string">&quot;30sp&quot;</span></span><br><span class="hljs-tag">                <span class="hljs-attr">android:layout_marginLeft</span>=<span class="hljs-string">&quot;30dp&quot;</span></span><br><span class="hljs-tag">                <span class="hljs-attr">android:layout_height</span>=<span class="hljs-string">&quot;wrap_content&quot;</span>&gt;</span><br><br>            <span class="hljs-tag">&lt;/<span class="hljs-name">CheckBox</span>&gt;</span><br>        <span class="hljs-tag">&lt;/<span class="hljs-name">LinearLayout</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">LinearLayout</span></span><br><span class="hljs-tag">            <span class="hljs-attr">android:layout_marginTop</span>=<span class="hljs-string">&quot;10dp&quot;</span></span><br><span class="hljs-tag">            <span class="hljs-attr">android:layout_width</span>=<span class="hljs-string">&quot;match_parent&quot;</span></span><br><span class="hljs-tag">            <span class="hljs-attr">android:layout_height</span>=<span class="hljs-string">&quot;wrap_content&quot;</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">Button</span></span><br><span class="hljs-tag">                <span class="hljs-attr">android:id</span>=<span class="hljs-string">&quot;@+id/tijiao&quot;</span></span><br><span class="hljs-tag">                <span class="hljs-attr">android:layout_width</span>=<span class="hljs-string">&quot;wrap_content&quot;</span></span><br><span class="hljs-tag">                <span class="hljs-attr">android:text</span>=<span class="hljs-string">&quot;提交&quot;</span></span><br><span class="hljs-tag">                <span class="hljs-attr">android:layout_marginLeft</span>=<span class="hljs-string">&quot;30dp&quot;</span></span><br><span class="hljs-tag">                <span class="hljs-attr">android:layout_height</span>=<span class="hljs-string">&quot;wrap_content&quot;</span>&gt;</span><br><br>            <span class="hljs-tag">&lt;/<span class="hljs-name">Button</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">Button</span></span><br><span class="hljs-tag">                <span class="hljs-attr">android:id</span>=<span class="hljs-string">&quot;@+id/quxiao&quot;</span></span><br><span class="hljs-tag">                <span class="hljs-attr">android:layout_width</span>=<span class="hljs-string">&quot;wrap_content&quot;</span></span><br><span class="hljs-tag">                <span class="hljs-attr">android:text</span>=<span class="hljs-string">&quot;取消&quot;</span></span><br><span class="hljs-tag">                <span class="hljs-attr">android:layout_marginLeft</span>=<span class="hljs-string">&quot;30dp&quot;</span></span><br><span class="hljs-tag">                <span class="hljs-attr">android:layout_height</span>=<span class="hljs-string">&quot;wrap_content&quot;</span>&gt;</span><br><br>            <span class="hljs-tag">&lt;/<span class="hljs-name">Button</span>&gt;</span><br>        <span class="hljs-tag">&lt;/<span class="hljs-name">LinearLayout</span>&gt;</span><br><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">LinearLayout</span>&gt;</span><br><br><span class="hljs-tag">&lt;/<span class="hljs-name">LinearLayout</span>&gt;</span><br></code></pre></div></td></tr></table></figure><h2 id="创建array-xml文件"><a href="#创建array-xml文件" class="headerlink" title="创建array.xml文件"></a>创建array.xml文件</h2><figure class="highlight xml"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs xml"><span class="hljs-meta">&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">resources</span>&gt;</span><br><br>    <span class="hljs-tag">&lt;<span class="hljs-name">string-array</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;ctype&quot;</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">item</span>&gt;</span>计算机科学与技术<span class="hljs-tag">&lt;/<span class="hljs-name">item</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">item</span>&gt;</span>数据科学与大数据技术<span class="hljs-tag">&lt;/<span class="hljs-name">item</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">item</span>&gt;</span>信息安全<span class="hljs-tag">&lt;/<span class="hljs-name">item</span>&gt;</span><br><br><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">string-array</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">style</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;life_spinner_style&quot;</span>  <span class="hljs-attr">parent</span>=<span class="hljs-string">&quot;@android:style/Widget.TextView.SpinnerItem&quot;</span>&gt;</span><span class="xml"></span><br><span class="xml">        <span class="hljs-tag">&lt;<span class="hljs-name">item</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;android:textSize&quot;</span>&gt;</span>25sp<span class="hljs-tag">&lt;/<span class="hljs-name">item</span>&gt;</span></span><br><span class="xml">    </span><span class="hljs-tag">&lt;/<span class="hljs-name">style</span>&gt;</span><br><br><span class="hljs-tag">&lt;/<span class="hljs-name">resources</span>&gt;</span><br></code></pre></div></td></tr></table></figure><h2 id="MainActivity-java文件"><a href="#MainActivity-java文件" class="headerlink" title="MainActivity.java文件"></a>MainActivity.java文件</h2><figure class="highlight gradle"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs gradle"><span class="hljs-keyword">package</span> com.example.lab1;<br><br><span class="hljs-keyword">import</span> androidx.appcompat.app.AppCompatActivity;<br><br><span class="hljs-keyword">import</span> android.os.Bundle;<br><span class="hljs-keyword">import</span> android.view.View;<br><span class="hljs-keyword">import</span> android.widget.Button;<br><span class="hljs-keyword">import</span> android.widget.CheckBox;<br><span class="hljs-keyword">import</span> android.widget.EditText;<br><span class="hljs-keyword">import</span> android.widget.Spinner;<br><span class="hljs-keyword">import</span> android.widget.Toast;<br><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> MainActivity <span class="hljs-keyword">extends</span> AppCompatActivity &#123;<br>    <span class="hljs-keyword">private</span> EditText name;<br>    <span class="hljs-keyword">private</span> Spinner zhuanye;<br>    <span class="hljs-keyword">private</span> Button tijiao;<br>    <span class="hljs-keyword">private</span> CheckBox man,woman,music,sport,swimming,<span class="hljs-keyword">read</span>;<br>    String output;<br>    @Override<br>    <span class="hljs-keyword">protected</span> <span class="hljs-keyword">void</span> onCreate(Bundle savedInstanceState) &#123;<br>        <span class="hljs-keyword">super</span>.onCreate(savedInstanceState);<br>        setContentView(R.layout.activity_main);<br>        tijiao=findViewById(R.id.tijiao);<span class="hljs-comment">//提交按钮</span><br>        name=findViewById(R.id.name);<span class="hljs-comment">//姓名输入的内容</span><br>        zhuanye=findViewById(R.id.zhuanye);<span class="hljs-comment">//专业列表</span><br>        man=findViewById(R.id.man);<br>        woman=findViewById(R.id.woman);<br>        swimming=findViewById(R.id.swimming);<br>        <span class="hljs-keyword">read</span>=findViewById(R.id.<span class="hljs-keyword">read</span>);<br>        sport=findViewById(R.id.sport);<br>        music=findViewById(R.id.music);<br>        tijiao.setOnClickListener(<span class="hljs-keyword">new</span> View.OnClickListener() &#123;<br><br>            @Override<br>            <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> onClick(View view) &#123;<br>                output=<span class="hljs-string">&quot;你好，&quot;</span>+name.<span class="hljs-keyword">getText</span>().toString()+<span class="hljs-string">&quot;!\n&quot;</span>;<br>                <span class="hljs-keyword">if</span>(man.isChecked())output+=<span class="hljs-string">&quot;你的性别是:&quot;</span>+man.<span class="hljs-keyword">getText</span>().toString()+<span class="hljs-string">&quot;!\n&quot;</span>;<br>                <span class="hljs-keyword">if</span>(woman.isChecked())output+=<span class="hljs-string">&quot;你的性别是:&quot;</span>+woman.<span class="hljs-keyword">getText</span>().toString()+<span class="hljs-string">&quot;!\n&quot;</span>;<br>                output+=<span class="hljs-string">&quot;你的专业是:&quot;</span>+zhuanye.getSelectedItem().toString()+<span class="hljs-string">&quot;!\n&quot;</span>;<br>                output+=<span class="hljs-string">&quot;你的个人爱好有:&quot;</span>;<br>                <span class="hljs-keyword">int</span> a=<span class="hljs-number">0</span>;<span class="hljs-comment">//a的意义，判断是否之前选择过运动，若选择过运动，选其他运动时，则先加’，‘；</span><br>                <span class="hljs-keyword">if</span>(music.isChecked())<br>                &#123;<br>                    a++;<br>                    output+=music.<span class="hljs-keyword">getText</span>().toString();<br>                &#125;<br>                <span class="hljs-keyword">if</span>(sport.isChecked())<br>                &#123;<br>                    a++;<br>                    <span class="hljs-keyword">if</span>(a!=<span class="hljs-number">0</span>)output+=<span class="hljs-string">&quot;,&quot;</span>;<br>                    output+=sport.<span class="hljs-keyword">getText</span>().toString();<br><br>                &#125;<br>                <span class="hljs-keyword">if</span>(swimming.isChecked())<br>                &#123;<br>                    a++;<br>                    <span class="hljs-keyword">if</span>(a!=<span class="hljs-number">0</span>)output+=<span class="hljs-string">&quot;,&quot;</span>;<br>                    output+=swimming.<span class="hljs-keyword">getText</span>().toString();<br>                &#125;<br>                <span class="hljs-keyword">if</span>(<span class="hljs-keyword">read</span>.isChecked())<br>                &#123;<br>                    a++;<br>                    <span class="hljs-keyword">if</span>(a!=<span class="hljs-number">0</span>)output+=<span class="hljs-string">&quot;,&quot;</span>;<br>                    output+=<span class="hljs-keyword">read</span>.<span class="hljs-keyword">getText</span>().toString();<br>                &#125;<br>                <span class="hljs-keyword">if</span>(a!=<span class="hljs-number">0</span>)output+=<span class="hljs-string">&quot;!&quot;</span>;<br><br><br>                <span class="hljs-keyword">if</span>(name.<span class="hljs-keyword">getText</span>().toString().isEmpty()) &#123;<br>                    Toast.makeText(MainActivity.<span class="hljs-keyword">this</span>, <span class="hljs-string">&quot;请输入您的姓名&quot;</span>, Toast.LENGTH_SHORT).show();<br><br>                &#125;<br>                <span class="hljs-keyword">else</span>&#123;<br>                    Toast.makeText(MainActivity.<span class="hljs-keyword">this</span>,output,Toast.LENGTH_SHORT).show();<br><br><br>                &#125;<br><br><br>            &#125;<br>        &#125;);<br><br>    &#125;<br>&#125;<br></code></pre></div></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>Android</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Android 开发</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>第十二届蓝桥杯省赛B组</title>
    <link href="/2022/03/06/%E7%AC%AC%E5%8D%81%E4%BA%8C%E5%B1%8A%E8%93%9D%E6%A1%A5%E6%9D%AF%E7%9C%81%E8%B5%9BB%E7%BB%84/"/>
    <url>/2022/03/06/%E7%AC%AC%E5%8D%81%E4%BA%8C%E5%B1%8A%E8%93%9D%E6%A1%A5%E6%9D%AF%E7%9C%81%E8%B5%9BB%E7%BB%84/</url>
    
    <content type="html"><![CDATA[<h1 id="时间显示【第十二届】【省赛】【B组】"><a href="#时间显示【第十二届】【省赛】【B组】" class="headerlink" title="时间显示【第十二届】【省赛】【B组】"></a>时间显示【第十二届】【省赛】【B组】</h1><h2 id="问题描述"><a href="#问题描述" class="headerlink" title="问题描述"></a>问题描述</h2><p> <strong>小蓝要和朋友合作开发一个时间的网站。在服务器上，朋友已经获取了当前的时间，用一个整数表示，值从1970年1月1日00：00：00到当前时刻经过的毫秒数。</strong><br><strong>现在，给小蓝要在客户端显示出这个时间，小蓝不用显示出年月日，只需要显示出时分秒即可，毫秒也不用显示，直接舍去即可。</strong><br><strong>给定一个用整数表示的时间，请将这个时间对应的时分秒输出。</strong></p><h2 id="输入格式"><a href="#输入格式" class="headerlink" title="输入格式"></a>输入格式</h2><p><strong>输入一行包含一个整数，表示时间</strong></p><h2 id="输出格式"><a href="#输出格式" class="headerlink" title="输出格式"></a>输出格式</h2><p><strong>输出一行，包括一个整数，表示A+B的值。</strong></p><h2 id="题解"><a href="#题解" class="headerlink" title="题解"></a>题解</h2><p>  <strong>输出时分秒表示的当前时间，格式形如HH:MM:SS，其中HH表示时，值为0到23，MM表示分，值为0到59，SS表示秒，值为0到59.时、分、秒不足两位时补前导0.</strong></p><figure class="highlight java"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs java"><span class="hljs-keyword">import</span> java.util.*;<br><span class="hljs-keyword">import</span> java.io.*;<br><br><span class="hljs-keyword">public</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Main</span> </span>&#123;<br><span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title">main</span><span class="hljs-params">(String[] args)</span> </span>&#123;<br>Scanner sc=<span class="hljs-keyword">new</span> Scanner(System.in);<br><span class="hljs-keyword">long</span> n=sc.nextLong();<br><span class="hljs-keyword">long</span> a,b,c;<br>n=n/<span class="hljs-number">1000</span>;<br>a=n%<span class="hljs-number">60</span>;<br>n=n/<span class="hljs-number">60</span>;<br>b=n%<span class="hljs-number">60</span>;<br>n=n/<span class="hljs-number">60</span>;<br>c=n%<span class="hljs-number">24</span>;<br>System.out.printf(<span class="hljs-string">&quot;%02d:%02d:%02d&quot;</span>,c,b,a);<br><br><br>&#125;<br>&#125;<br></code></pre></div></td></tr></table></figure><h1 id="砝码称重【第十二届】【省赛】【B组】"><a href="#砝码称重【第十二届】【省赛】【B组】" class="headerlink" title="砝码称重【第十二届】【省赛】【B组】"></a>砝码称重【第十二届】【省赛】【B组】</h1><h2 id="问题描述-1"><a href="#问题描述-1" class="headerlink" title="问题描述"></a>问题描述</h2><p> <strong>你有一架天平和 N 个砝码，这 N 个砝码重量依次是 W1, W2, · · · , WN。</strong><br><strong>请你计算一共可以称出多少种不同的重量？</strong><br><strong>注意砝码可以放在天平两边</strong><br><strong>现在，给小蓝要在客户端显示出这个时间，小蓝不用显示出年月日，只需要显示出时分秒即可，毫秒也不用显示，直接舍去即可。</strong><br><strong>给定一个用整数表示的时间，请将这个时间对应的时分秒输出。</strong></p><h2 id="输入格式-1"><a href="#输入格式-1" class="headerlink" title="输入格式"></a>输入格式</h2><p><strong>输入的第一行包含一个整数 N。</strong><br><strong>第二行包含 N 个整数：W1, W2, W3, · · · , WN。</strong></p><h2 id="输出格式-1"><a href="#输出格式-1" class="headerlink" title="输出格式"></a>输出格式</h2><p><strong>输出一个整数代表答案。</strong></p><h2 id="提示"><a href="#提示" class="headerlink" title="提示"></a>提示</h2><p>【样例说明】<br>能称出的 10 种重量是：1、2、3、4、5、6、7、9、10、11。<br>1 = 1；<br>2 = 6 4 (天平一边放 6，另一边放 4)；<br>3 = 4 1；<br>4 = 4；<br>5 = 6 1；<br>6 = 6；<br>7 = 1 + 6；<br>9 = 4 + 6 1；<br>10 = 4 + 6；<br>11 = 1 + 4 + 6。<br>【评测用例规模与约定】<br>对于 50% 的评测用例，1 ≤ N ≤ 15。<br>对于所有评测用例，1 ≤ N ≤ 100，N 个砝码总重不超过 100000。</p><h2 id="题解-1"><a href="#题解-1" class="headerlink" title="题解"></a>题解</h2><p>  <strong>分析该题为动态规划问题，设a[i][j]来判断在放第i个砝码时天平的重量是否为j，共分为三种情况，当放入的砝码刚好等于j,当放入的砝码与i-1项在不同的天平，当放入的砝码与第i-1项在同一个天平时，最后判断</strong></p><figure class="highlight java"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs java"><span class="hljs-keyword">import</span> java.util.*;<br><span class="hljs-keyword">import</span> java.io.*;<br><br><span class="hljs-keyword">public</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Main</span> </span>&#123;<br><br><span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title">main</span><span class="hljs-params">(String[] args)</span> </span>&#123;<br><span class="hljs-keyword">boolean</span> [][] a=<span class="hljs-keyword">new</span> <span class="hljs-keyword">boolean</span> [<span class="hljs-number">105</span>][(<span class="hljs-keyword">int</span>) (<span class="hljs-number">2e5</span>+<span class="hljs-number">5</span>)];<br><span class="hljs-keyword">int</span> w[]=<span class="hljs-keyword">new</span> <span class="hljs-keyword">int</span> [<span class="hljs-number">105</span>];<br>Scanner sc=<span class="hljs-keyword">new</span> Scanner(System.in);<br><span class="hljs-keyword">int</span> n=sc.nextInt();<br><span class="hljs-keyword">int</span> sum=<span class="hljs-number">0</span>;<br><span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> i=<span class="hljs-number">1</span>;i&lt;=n;i++) &#123;<br>w[i]=sc.nextInt();<br>sum+=w[i];<br>&#125;<br><br><span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> i=<span class="hljs-number">1</span>;i&lt;=n;i++) &#123;<br><span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> j=<span class="hljs-number">1</span>;j&lt;=sum;j++) &#123;<br>a[i][j]=a[i-<span class="hljs-number">1</span>][j];<br><span class="hljs-keyword">if</span>(!a[i][j]) &#123;<br><span class="hljs-keyword">if</span>(j==w[i])a[i][j]=<span class="hljs-keyword">true</span>;<br><span class="hljs-keyword">if</span>(a[i-<span class="hljs-number">1</span>][j+w[i]])a[i][j]=<span class="hljs-keyword">true</span>;<br><span class="hljs-keyword">if</span>(a[i-<span class="hljs-number">1</span>][Math.abs(j-w[i] ) ])a[i][j]=<span class="hljs-keyword">true</span>;<br>&#125;<br>&#125;<br><br>&#125;<br><span class="hljs-keyword">long</span> ans=<span class="hljs-number">0</span>;<br><span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> i=<span class="hljs-number">1</span>;i&lt;=sum;i++) &#123;<br><span class="hljs-keyword">if</span>(a[n][i])ans++;<br>&#125;<br>System.out.println(ans);<br>&#125;<br><br>&#125;<br></code></pre></div></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>蓝桥杯</category>
      
    </categories>
    
    
    <tags>
      
      <tag>蓝桥杯java组</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>伪加密</title>
    <link href="/2022/02/28/%E4%BC%AA%E5%8A%A0%E5%AF%86/"/>
    <url>/2022/02/28/%E4%BC%AA%E5%8A%A0%E5%AF%86/</url>
    
    <content type="html"><![CDATA[<h1 id="伪加密"><a href="#伪加密" class="headerlink" title="伪加密"></a>伪加密</h1><h2 id="原理"><a href="#原理" class="headerlink" title="原理"></a>原理</h2><p><strong>zip伪加密是在文件头的加密标志位做修改，进而再打开文件时识被别为加密压缩包。</strong></p><h2 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h2><p><strong>一个 ZIP 文件由三个部分组成：<br>压缩源文件数据区+压缩源文件目录区+压缩源文件目录结束标志。</strong></p><h3 id="压缩源文件数据区："><a href="#压缩源文件数据区：" class="headerlink" title="压缩源文件数据区："></a>压缩源文件数据区：</h3><p><strong>50 4B 03 04：这是头文件标记（0x04034b50）<br>14 00：解压文件所需 pkware 版本<br>00 00：全局方式位标记（有无加密）<br>08 00：压缩方式<br>5A 7E：最后修改文件时间<br>F7 46：最后修改文件日期<br>16 B5 80 14：CRC-32校验（1480B516）<br>19 00 00 00：压缩后尺寸（25）<br>17 00 00 00：未压缩尺寸（23）<br>07 00：文件名长度<br>00 00：扩展记录长度</strong></p><h3 id="压缩源文件目录区："><a href="#压缩源文件目录区：" class="headerlink" title="压缩源文件目录区："></a>压缩源文件目录区：</h3><p><strong>50 4B 01 02：目录中文件文件头标记(0x02014b50)<br>3F 00：压缩使用的 pkware 版本<br>14 00：解压文件所需 pkware 版本<br>00 00：全局方式位标记（有无加密，这个更改这里进行伪加密，改为09 00打开就会提示有密码了）<br>08 00：压缩方式<br>5A 7E：最后修改文件时间<br>F7 46：最后修改文件日期<br>16 B5 80 14：CRC-32校验（1480B516）<br>19 00 00 00：压缩后尺寸（25）<br>17 00 00 00：未压缩尺寸（23）<br>07 00：文件名长度<br>24 00：扩展字段长度<br>00 00：文件注释长度<br>00 00：磁盘开始号<br>00 00：内部文件属性<br>20 00 00 00：外部文件属性<br>00 00 00 00：局部头部偏移量</strong></p><h3 id="压缩源文件目录结束标志："><a href="#压缩源文件目录结束标志：" class="headerlink" title="压缩源文件目录结束标志："></a>压缩源文件目录结束标志：</h3><p><strong>50 4B 05 06：目录结束标记<br>00 00：当前磁盘编号<br>00 00：目录区开始磁盘编号<br>01 00：本磁盘上纪录总数<br>01 00：目录区中纪录总数<br>59 00 00 00：目录区尺寸大小<br>3E 00 00 00：目录区对第一张磁盘的偏移量<br>00 00：ZIP 文件注释长度</strong></p><h2 id="识别真假加密"><a href="#识别真假加密" class="headerlink" title="识别真假加密"></a>识别真假加密</h2><h3 id="无加密"><a href="#无加密" class="headerlink" title="无加密"></a>无加密</h3><p><strong>压缩源文件数据区的全局加密应当为00 00<br>且压缩源文件目录区的全局方式位标记应当为00 00</strong></p><h3 id="假加密"><a href="#假加密" class="headerlink" title="假加密"></a>假加密</h3><p><strong>压缩源文件数据区的全局加密应当为00 00<br>且压缩源文件目录区的全局方式位标记应当为09 00</strong></p><h3 id="真加密"><a href="#真加密" class="headerlink" title="真加密"></a>真加密</h3><p><strong>压缩源文件数据区的全局加密应当为09 00<br>且压缩源文件目录区的全局方式位标记应当为09 00</strong></p>]]></content>
    
    
    <categories>
      
      <category>CTF-Misc</category>
      
    </categories>
    
    
    <tags>
      
      <tag>知识点</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>BUUCTF练习</title>
    <link href="/2022/02/27/BUUCTF%E7%BB%83%E4%B9%A0/"/>
    <url>/2022/02/27/BUUCTF%E7%BB%83%E4%B9%A0/</url>
    
    <content type="html"><![CDATA[<h2 id="金三胖"><a href="#金三胖" class="headerlink" title="金三胖"></a>金三胖</h2><h3 id="题解："><a href="#题解：" class="headerlink" title="题解："></a>题解：</h3><p><strong>看到动图，想到stegsolve，用Frame Browser逐帖分析，得到flag。</strong></p><figure class="highlight apache"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs apache"><span class="hljs-attribute">flag</span>&#123;he<span class="hljs-number">11</span>o hongke&#125;<br></code></pre></div></td></tr></table></figure><h2 id="二维码"><a href="#二维码" class="headerlink" title="二维码"></a>二维码</h2><h3 id="题解：-1"><a href="#题解：-1" class="headerlink" title="题解："></a>题解：</h3><p><strong>用二维码解码器解码得到 secret is here，提交上去，<br>发现flag错误，看来这不是flag，根据流程，先参看图片属性，<br>并没有什么内容，再用010edit，也没有什么信息，用stegsolve，<br>也没发现，最后用VMware，binwalk分离，得到一个ZIP压缩包，<br>打开发现4num，密码应该是4位数的数字，用暴力破解，得到密码为：7639 ，打开得到flag。</strong></p><figure class="highlight dust"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs dust"><span class="xml">CTF</span><span class="hljs-template-variable">&#123;vjpw_wnoei&#125;</span><br></code></pre></div></td></tr></table></figure><h2 id="你竟然赶我走"><a href="#你竟然赶我走" class="headerlink" title="你竟然赶我走"></a>你竟然赶我走</h2><h3 id="题解：-2"><a href="#题解：-2" class="headerlink" title="题解："></a>题解：</h3><p><strong>打开查看属性，没什么有用的信息，用notepad++打开，搜索flag，得到flag。</strong></p><figure class="highlight apache"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs apache"><span class="hljs-attribute">flag</span>&#123;stego_is_s<span class="hljs-number">0</span>_bor<span class="hljs-number">1</span>ing&#125;<br></code></pre></div></td></tr></table></figure><h2 id="N种方法解决"><a href="#N种方法解决" class="headerlink" title="N种方法解决"></a>N种方法解决</h2><h3 id="题解"><a href="#题解" class="headerlink" title="题解"></a>题解</h3><p>** 下载发现是exe的文件，无法打开，用010editor打开，发现是一串base64的编码组成的图片，用图片base64解码得到一张图片，扫描二维码得到flag。**<br><img src="/img/%E4%BA%8C%E7%BB%B4%E7%A0%81.png"></p><figure class="highlight apache"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs apache"><span class="hljs-attribute">KEY</span>&#123;dca<span class="hljs-number">57</span>f<span class="hljs-number">966</span>e<span class="hljs-number">4</span>e<span class="hljs-number">4</span>e<span class="hljs-number">31</span>fd<span class="hljs-number">5</span>b<span class="hljs-number">15417</span>da<span class="hljs-number">63269</span>&#125;<br></code></pre></div></td></tr></table></figure><h2 id="大白"><a href="#大白" class="headerlink" title="大白"></a>大白</h2><h3 id="题解：-3"><a href="#题解：-3" class="headerlink" title="题解："></a>题解：</h3><p><strong>由提示可知，需要修改图片的高度，用010editor打开，在网上查询宽度和高度的位置，这两个位置调大一点。</strong><br><img src="/img/%E5%A4%A7%E7%99%BD.png"><br>得到flag<br><img src="/img/dabai.png"></p><figure class="highlight apache"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs apache"><span class="hljs-attribute">flag</span>&#123;He<span class="hljs-number">1</span>|<span class="hljs-number">0</span>_d<span class="hljs-number">4</span>_ba<span class="hljs-number">1</span>&#125;<br></code></pre></div></td></tr></table></figure><h2 id="基础破解"><a href="#基础破解" class="headerlink" title="基础破解"></a>基础破解</h2><h3 id="题解：-4"><a href="#题解：-4" class="headerlink" title="题解："></a>题解：</h3><p><strong>由提示可知，这是个4位数字组成的密码，用ARCHPR直接破解，得到密码<br>2563 ，解压文件得到一个base64的编码，解码得到flag。</strong></p><figure class="highlight gcode"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs gcode">打开文件得到的base<span class="hljs-number">64</span><br>ZmxhZ<span class="hljs-number">3</span>s<span class="hljs-number">3</span>MD<span class="hljs-name">M1</span><span class="hljs-symbol">NDMwMGE1</span>MTAwYmE<span class="hljs-number">3</span>ODA<span class="hljs-number">2</span>ODgw<span class="hljs-symbol">NTY2</span>MWI<span class="hljs-number">5</span><span class="hljs-name">M2</span>E<span class="hljs-number">1</span>Y<span class="hljs-number">30</span>=<br>解码得：<br>flag&#123;<span class="hljs-number">70354300</span>a<span class="hljs-number">5100</span>ba<span class="hljs-number">78068805661</span>b<span class="hljs-number">93</span>a<span class="hljs-number">5</span>c&#125;<br><br></code></pre></div></td></tr></table></figure><h2 id="乌镇峰会种图"><a href="#乌镇峰会种图" class="headerlink" title="乌镇峰会种图"></a>乌镇峰会种图</h2><h3 id="题解：-5"><a href="#题解：-5" class="headerlink" title="题解："></a>题解：</h3><p><strong>下载文件得到一个图片，用notepad++打开，搜索flag，得到flag在最后一行。</strong></p><figure class="highlight apache"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs apache"><span class="hljs-attribute">flag</span>&#123;<span class="hljs-number">97314</span>e<span class="hljs-number">7864</span>a<span class="hljs-number">8</span>f<span class="hljs-number">62627</span>b<span class="hljs-number">26</span>f<span class="hljs-number">3</span>f<span class="hljs-number">998</span>c<span class="hljs-number">37</span>f<span class="hljs-number">1</span>&#125;<br></code></pre></div></td></tr></table></figure><h2 id="文件中的秘密"><a href="#文件中的秘密" class="headerlink" title="文件中的秘密"></a>文件中的秘密</h2><h3 id="题解：-6"><a href="#题解：-6" class="headerlink" title="题解："></a>题解：</h3><p><strong>下载得到一张图片，查看图片信息，在备注中得到flag。</strong></p><figure class="highlight apache"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs apache"><span class="hljs-attribute">flag</span>&#123;<span class="hljs-number">870</span>c<span class="hljs-number">5</span>a<span class="hljs-number">72806115</span>cb<span class="hljs-number">5439345</span>d<span class="hljs-number">8</span>b<span class="hljs-number">014396</span>&#125;<br></code></pre></div></td></tr></table></figure><h2 id="wireshark"><a href="#wireshark" class="headerlink" title="wireshark"></a>wireshark</h2><h3 id="题解：-7"><a href="#题解：-7" class="headerlink" title="题解："></a>题解：</h3><p><strong>由名字可得，这是一个流量分析题，用wireshark工具，管理员密码一般用POST请求，查找http.request.method==POST，追踪TCP流，得到flag。</strong></p><figure class="highlight apache"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs apache"><span class="hljs-attribute">flag</span>&#123;ffb<span class="hljs-number">7567</span>a<span class="hljs-number">1</span>d<span class="hljs-number">4</span>f<span class="hljs-number">4</span>abdffdb<span class="hljs-number">54</span>e<span class="hljs-number">022</span>f<span class="hljs-number">8</span>facd&#125;<br></code></pre></div></td></tr></table></figure><h2 id="LSB"><a href="#LSB" class="headerlink" title="LSB"></a>LSB</h2><h3 id="题解：-8"><a href="#题解：-8" class="headerlink" title="题解："></a>题解：</h3><p><strong>由题目可知，这是LSB隐写，用stegsolve打开，选通道0，发现是一张PNG图片，储存得到二维码，扫描得到flag</strong><br><img src="/img/LSB.png"><br><img src="/img/LSB1.png"></p><figure class="highlight dust"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs dust"><span class="xml">解码得到cumtctf</span><span class="hljs-template-variable">&#123;1sb_i4_s0_Ea4y&#125;</span><br></code></pre></div></td></tr></table></figure><h2 id="RAR"><a href="#RAR" class="headerlink" title="RAR"></a>RAR</h2><h3 id="题解：-9"><a href="#题解：-9" class="headerlink" title="题解："></a>题解：</h3><p><strong>由提示可知，直接用archpr破解，得到4位数密码8795，输入打开文件得到flag</strong></p><figure class="highlight apache"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs apache"><span class="hljs-attribute">flag</span>&#123;<span class="hljs-number">1773</span>c<span class="hljs-number">5</span>da<span class="hljs-number">790</span>bd<span class="hljs-number">3</span>caff<span class="hljs-number">38</span>e<span class="hljs-number">3</span>decd<span class="hljs-number">180</span>eb<span class="hljs-number">7</span>&#125;<br></code></pre></div></td></tr></table></figure><h2 id="zip伪加密"><a href="#zip伪加密" class="headerlink" title="zip伪加密"></a>zip伪加密</h2><h3 id="题解：-10"><a href="#题解：-10" class="headerlink" title="题解："></a>题解：</h3><p><strong>由名字可知，这是伪加密，查询伪加密的知识点，把09 改为00，打开文件得到flag</strong><br><img src="/img/%E4%BC%AA%E5%8A%A0%E5%AF%86.png"></p><figure class="highlight apache"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs apache"><span class="hljs-attribute">flag</span>&#123;Adm<span class="hljs-number">1</span>N-B<span class="hljs-number">2</span>G-kU-SZIP&#125;<br></code></pre></div></td></tr></table></figure><h2 id="qr"><a href="#qr" class="headerlink" title="qr"></a>qr</h2><h3 id="题解：-11"><a href="#题解：-11" class="headerlink" title="题解："></a>题解：</h3><p><strong>下载得到一张二维码，扫描得到flag</strong></p><figure class="highlight apache"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs apache"><span class="hljs-attribute">Flag</span>&#123;<span class="hljs-number">878865</span>ce<span class="hljs-number">73370</span>a<span class="hljs-number">4</span>ce<span class="hljs-number">607</span>d<span class="hljs-number">21</span>ca<span class="hljs-number">01</span>b<span class="hljs-number">5</span>e<span class="hljs-number">59</span>&#125;<br></code></pre></div></td></tr></table></figure><h2 id="被嗅探的流量"><a href="#被嗅探的流量" class="headerlink" title="被嗅探的流量"></a>被嗅探的流量</h2><h3 id="题解：-12"><a href="#题解：-12" class="headerlink" title="题解："></a>题解：</h3><p>** 传输数据一般用POST，直接搜索 http.request.method==POST，追踪TCP流，查询flag，得到flag**</p><figure class="highlight apache"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs apache"><span class="hljs-attribute">flag</span>&#123;da<span class="hljs-number">73</span>d<span class="hljs-number">88936010</span>da<span class="hljs-number">1</span>eeeb<span class="hljs-number">36</span>e<span class="hljs-number">945</span>ec<span class="hljs-number">4</span>b<span class="hljs-number">97</span>&#125;<br></code></pre></div></td></tr></table></figure><h2 id="镜子里面的世界"><a href="#镜子里面的世界" class="headerlink" title="镜子里面的世界"></a>镜子里面的世界</h2><h3 id="题解：-13"><a href="#题解：-13" class="headerlink" title="题解："></a>题解：</h3><p><strong>用stegsolve打开，通道都选0，得到flag</strong></p><figure class="highlight apache"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs apache"><span class="hljs-attribute">flag</span>&#123;st<span class="hljs-number">3</span>g<span class="hljs-number">0</span>_ saurus_wr<span class="hljs-number">3</span>cks&#125;<br></code></pre></div></td></tr></table></figure><h2 id="ningen"><a href="#ningen" class="headerlink" title="ningen"></a>ningen</h2><h3 id="题解：-14"><a href="#题解：-14" class="headerlink" title="题解："></a>题解：</h3><p><strong>下载给一张图片，却提示有4位数密码，想到里面应该隐藏的有文件，用VMware分离文件，得到一个文件，里面有一个压缩包，需要密码，用archpr得到密码8368，打开得到flag</strong></p><figure class="highlight apache"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs apache"><span class="hljs-attribute">flag</span>&#123;b<span class="hljs-number">025</span>fc<span class="hljs-number">9</span>ca<span class="hljs-number">797</span>a<span class="hljs-number">67</span>d<span class="hljs-number">2103</span>bfbc<span class="hljs-number">407</span>a<span class="hljs-number">6</span>d<span class="hljs-number">5</span>f&#125;<br></code></pre></div></td></tr></table></figure><h2 id="小明的保险箱"><a href="#小明的保险箱" class="headerlink" title="小明的保险箱"></a>小明的保险箱</h2><h3 id="题解：-15"><a href="#题解：-15" class="headerlink" title="题解："></a>题解：</h3><p><strong>由题目可知，里面有隐藏的文件，用VMWare中的binwalk分离，得到一个压缩包再用archpr破解密码 7869，得到flag</strong></p><figure class="highlight apache"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs apache"><span class="hljs-attribute">flag</span>&#123;<span class="hljs-number">75</span>a<span class="hljs-number">3</span>d<span class="hljs-number">68</span>bf<span class="hljs-number">071</span>ee<span class="hljs-number">188</span>c<span class="hljs-number">418</span>ea<span class="hljs-number">6</span>cf<span class="hljs-number">0</span>bb<span class="hljs-number">043</span>&#125;<br></code></pre></div></td></tr></table></figure><h2 id="爱因斯坦"><a href="#爱因斯坦" class="headerlink" title="爱因斯坦"></a>爱因斯坦</h2><h3 id="题解：-16"><a href="#题解：-16" class="headerlink" title="题解："></a>题解：</h3><p><strong>查看属性，详细信息，备注中有个 this_is_not_password ，这应该是个钥匙，那就要有文件，用VMWare binwalk分离，打开文件，输入密码得到flag</strong></p><figure class="highlight apache"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs apache"><span class="hljs-attribute">flag</span>&#123;dd<span class="hljs-number">22</span>a<span class="hljs-number">92</span>bf<span class="hljs-number">2</span>cceb<span class="hljs-number">6</span>c<span class="hljs-number">0</span>cd<span class="hljs-number">0</span>d<span class="hljs-number">6</span>b<span class="hljs-number">83</span>ff<span class="hljs-number">51606</span>&#125;<br></code></pre></div></td></tr></table></figure><h2 id="easycap"><a href="#easycap" class="headerlink" title="easycap"></a>easycap</h2><h3 id="题解：-17"><a href="#题解：-17" class="headerlink" title="题解："></a>题解：</h3><p><strong>根据文件格式可知，这是一个文件分析题，用wireshark打开，直接追踪TCP流，打开得到flag</strong></p><figure class="highlight apache"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs apache"><span class="hljs-attribute">FLAG</span>:<span class="hljs-number">385</span>b<span class="hljs-number">87</span>afc<span class="hljs-number">8671</span>dee<span class="hljs-number">07550290</span>d<span class="hljs-number">16</span>a<span class="hljs-number">8071</span><br></code></pre></div></td></tr></table></figure><h2 id="隐藏的钥匙"><a href="#隐藏的钥匙" class="headerlink" title="隐藏的钥匙"></a>隐藏的钥匙</h2><h3 id="题解：-18"><a href="#题解：-18" class="headerlink" title="题解："></a>题解：</h3><p><strong>用notepad++打开，搜索flag，得到一个base64编码的flag，base解码，得到flag</strong></p><figure class="highlight apache"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs apache"><span class="hljs-attribute">flag</span>&#123;<span class="hljs-number">377</span>cbadda<span class="hljs-number">1</span>eca<span class="hljs-number">2</span>f<span class="hljs-number">2</span>f<span class="hljs-number">73</span>d<span class="hljs-number">36277781</span>f<span class="hljs-number">00</span>a&#125;<br></code></pre></div></td></tr></table></figure><h2 id="另外一个世界"><a href="#另外一个世界" class="headerlink" title="另外一个世界"></a>另外一个世界</h2><h3 id="题解：-19"><a href="#题解：-19" class="headerlink" title="题解："></a>题解：</h3><p><strong>用notepad++打开，拉到最后一行，看到01组成的数字，用二进制转换为16进制，得到flag</strong></p><figure class="highlight apache"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs apache"><span class="hljs-attribute">flag</span>&#123;koekj<span class="hljs-number">3</span>s&#125;<br></code></pre></div></td></tr></table></figure><h2 id="神秘龙卷风"><a href="#神秘龙卷风" class="headerlink" title="神秘龙卷风"></a>神秘龙卷风</h2><h3 id="题解：-20"><a href="#题解：-20" class="headerlink" title="题解："></a>题解：</h3><p><strong>由提示可知，该文件密码为4位数的密码，用archpr破解，得到密码 5463，打开文件，为+&gt;.组成的字符串，查询编码可知，该编码为brainfuck编码，解码得到flag</strong></p><figure class="highlight apache"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs apache"><span class="hljs-attribute">flag</span>&#123;e<span class="hljs-number">4</span>bbef<span class="hljs-number">8</span>bdf<span class="hljs-number">9743</span>f<span class="hljs-number">8</span>bf<span class="hljs-number">5</span>b<span class="hljs-number">727</span>a<span class="hljs-number">9</span>f<span class="hljs-number">6332</span>a<span class="hljs-number">8</span>&#125;<br></code></pre></div></td></tr></table></figure><h2 id="FLAG"><a href="#FLAG" class="headerlink" title="FLAG"></a>FLAG</h2><h3 id="题解：-21"><a href="#题解：-21" class="headerlink" title="题解："></a>题解：</h3><p><strong>用stegsolve打开，都选通道0，发现是个zip形式文件，保存，解压，里面有一个1文件，用notepad++打开发现是个ELF文件，查询可知，用IDA打开，得到flag</strong></p><figure class="highlight apache"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs apache"><span class="hljs-attribute">hctf</span>&#123;dd<span class="hljs-number">0</span>gf<span class="hljs-number">4</span>c<span class="hljs-number">3</span>tok<span class="hljs-number">3</span>yb<span class="hljs-number">0</span>ard<span class="hljs-number">4</span>g<span class="hljs-number">41</span>n~~~&#125;<br></code></pre></div></td></tr></table></figure><h2 id="假如给我三天光明"><a href="#假如给我三天光明" class="headerlink" title="假如给我三天光明"></a>假如给我三天光明</h2><h3 id="题解：-22"><a href="#题解：-22" class="headerlink" title="题解："></a>题解：</h3><p><strong>下载文件后，得到一张图片和一个压缩包，压缩包里面含有文件，但是有密码，图片里根据信息提示，假如给我三天光明，看着像盲文，对比盲文表得到密码：kmdonowg，打开压缩包，用audacity打开，看着长短的音频，有点像摩斯密码，翻译为摩斯密码得到flag：CTFWPEI08732?23DZ</strong><br><img src="/img/%E7%9B%B2%E6%96%87.png"></p><figure class="highlight apache"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs apache"><span class="hljs-attribute">flag</span>&#123;wpei<span class="hljs-number">08732</span>?<span class="hljs-number">23</span>dz&#125;<br></code></pre></div></td></tr></table></figure><h2 id="后门查杀"><a href="#后门查杀" class="headerlink" title="后门查杀"></a>后门查杀</h2><h3 id="题解：-23"><a href="#题解：-23" class="headerlink" title="题解："></a>题解：</h3><p><strong>下载文件，得到很多东西，这个webshell之前没了解过，不太会，在网上看大佬的题解，说用D盾，下了个D盾，文件拖进去，扫描一下，标红的右键查看文件，得到MD5加密的flag</strong><br><img src="/img/webshell.png"><br><img src="/img/webshellanswer.png"></p><figure class="highlight apache"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs apache"><span class="hljs-attribute">flag</span>&#123;<span class="hljs-number">6</span>ac<span class="hljs-number">45</span>fb<span class="hljs-number">83</span>b<span class="hljs-number">3</span>bc<span class="hljs-number">355</span>c<span class="hljs-number">024</span>f<span class="hljs-number">5034</span>b<span class="hljs-number">947</span>dd<span class="hljs-number">3</span>&#125;<br></code></pre></div></td></tr></table></figure><h2 id="数据包中的线索"><a href="#数据包中的线索" class="headerlink" title="数据包中的线索"></a>数据包中的线索</h2><h3 id="题解：-24"><a href="#题解：-24" class="headerlink" title="题解："></a>题解：</h3><p><strong>下载文件，得到一个pcapng文件，用wireshark打开，过滤http，追踪最后一个文件，得到base64编码，解码得到一张图片，图片里有flag</strong><br><img src="/img/%E6%95%B0%E6%8D%AE%E6%B5%81%E9%87%8F.png"><br><img src="/img/%E6%95%B0%E6%8D%AE%E6%B5%81%E9%87%8F1.png"><br><img src="/img/%E6%95%B0%E6%8D%AE%E6%B5%81%E9%87%8F2.png"></p><figure class="highlight apache"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs apache"><span class="hljs-attribute">flag</span>&#123;<span class="hljs-number">209</span>acebf<span class="hljs-number">6324</span>a<span class="hljs-number">09671</span>abc<span class="hljs-number">31</span>c<span class="hljs-number">869</span>de<span class="hljs-number">72</span>c&#125;<br></code></pre></div></td></tr></table></figure><h2 id="荷兰宽带数据泄露"><a href="#荷兰宽带数据泄露" class="headerlink" title="荷兰宽带数据泄露"></a>荷兰宽带数据泄露</h2><h3 id="题解：-25"><a href="#题解：-25" class="headerlink" title="题解："></a>题解：</h3><p><strong>下载文件后，得到一个bin文件，这个文件没见过，在网上查询可知，用RouterPassView打开，数据泄露，应该是账号密码泄露，查询密码，输入不对，又试试账号，输入正确，得到flag</strong><br><img src="/img/%E6%95%B0%E6%8D%AE%E6%B3%84%E9%9C%B2.png"></p><figure class="highlight apache"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs apache"><span class="hljs-attribute">flag</span>&#123;<span class="hljs-number">053700357621</span>&#125;<br></code></pre></div></td></tr></table></figure><h2 id="来首歌吧"><a href="#来首歌吧" class="headerlink" title="来首歌吧"></a>来首歌吧</h2><h3 id="题解：-26"><a href="#题解：-26" class="headerlink" title="题解："></a>题解：</h3><p><strong>下载文件后，得到一个音乐文件，用audacity打开，放大之后，有长长短短的线条，很规律，盲猜是摩斯密码，输入破解得到flag</strong><br><img src="/img/%E6%9D%A5%E9%A6%96%E6%AD%8C%E5%90%A7.png"></p><figure class="highlight jboss-cli"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs jboss-cli"><span class="hljs-string">.....</span> -<span class="hljs-string">...</span> -<span class="hljs-string">.-.</span> <span class="hljs-params">----</span>. <span class="hljs-string">..---</span> <span class="hljs-string">.....</span> -<span class="hljs-string">....</span> <span class="hljs-string">....-</span> <span class="hljs-params">----</span>. -<span class="hljs-string">.-.</span> -<span class="hljs-string">...</span> <span class="hljs-params">-----</span> <span class="hljs-string">.----</span> <span class="hljs-params">---</span><span class="hljs-string">..</span> <span class="hljs-params">---</span><span class="hljs-string">..</span> <span class="hljs-string">..-.</span> <span class="hljs-string">.....</span> <span class="hljs-string">..---</span> . -<span class="hljs-string">....</span> <span class="hljs-string">.----</span> --<span class="hljs-string">...</span> -<span class="hljs-string">..</span> --<span class="hljs-string">...</span> <span class="hljs-params">-----</span> <span class="hljs-params">----</span>. <span class="hljs-string">..---</span> <span class="hljs-params">----</span>. <span class="hljs-string">.----</span> <span class="hljs-params">----</span>. <span class="hljs-string">.----</span> -<span class="hljs-string">.-.</span><br><br>flag&#123;5BC925649CB0188F52E617D70929191C&#125;<br></code></pre></div></td></tr></table></figure><h2 id="webshell后门"><a href="#webshell后门" class="headerlink" title="webshell后门"></a>webshell后门</h2><h3 id="题解：-27"><a href="#题解：-27" class="headerlink" title="题解："></a>题解：</h3><p><strong>下载文件后，得到很多文件，又是webshell后门，用D盾打开，查看文件，发现第一个文件有password，提交直接对了。。。</strong><br><img src="/img/webshell%E5%90%8E%E9%97%A8.png"></p><figure class="highlight apache"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs apache"><span class="hljs-attribute">flag</span>&#123;ba<span class="hljs-number">8</span>e<span class="hljs-number">6</span>c<span class="hljs-number">6</span>f<span class="hljs-number">35</span>a<span class="hljs-number">53933</span>b<span class="hljs-number">871480</span>bb<span class="hljs-number">9</span>a<span class="hljs-number">9545</span>c&#125;<br></code></pre></div></td></tr></table></figure><h2 id="面具下的flag"><a href="#面具下的flag" class="headerlink" title="面具下的flag"></a>面具下的flag</h2><h3 id="题解：-28"><a href="#题解：-28" class="headerlink" title="题解："></a>题解：</h3><p><strong>下载文件后，得到一张图片，查看信息属性，没有什么有用的信息，拖入winhex里，发现里面有隐藏的压缩文件，用虚拟机分离文件，得到一个vmdk的文件，没见过</strong><br><img src="/img/%E9%9D%A2%E5%85%B7%E4%B8%8B%E7%9A%84flag.png"></p><figure class="highlight clean"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs clean">```<br><br>## 九连环<br>### 题解：<br>**下载文件后，得到一张图片，查看信息属性，没有什么有用的信息，拖入winhex里，发现里面有隐藏的压缩文件，用虚拟机分离文件，得到一个vmdk的文件，没见过**<br>![](/img/面具下的flag.png)<br></code></pre></div></td></tr></table></figure><div class="hljs code-wrapper"><pre><code></code></pre></div>]]></content>
    
    
    <categories>
      
      <category>CTF-Misc</category>
      
    </categories>
    
    
    <tags>
      
      <tag>BUUCTF</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>蓝桥杯基础练习</title>
    <link href="/2022/01/25/%E8%93%9D%E6%A1%A5%E6%9D%AF/"/>
    <url>/2022/01/25/%E8%93%9D%E6%A1%A5%E6%9D%AF/</url>
    
    <content type="html"><![CDATA[<h1 id="A-B问题"><a href="#A-B问题" class="headerlink" title="A+B问题"></a>A+B问题</h1><h2 id="问题描述"><a href="#问题描述" class="headerlink" title="问题描述"></a>问题描述</h2><p> <strong>输入A、B，输出A+B。</strong></p><h2 id="输入格式"><a href="#输入格式" class="headerlink" title="输入格式"></a>输入格式</h2><p><strong>输入的第一行包括两个整数，由空格分隔，分别表示A、B。</strong></p><h2 id="输出格式"><a href="#输出格式" class="headerlink" title="输出格式"></a>输出格式</h2><p><strong>输出一行，包括一个整数，表示A+B的值。</strong></p><h2 id="题解"><a href="#题解" class="headerlink" title="题解"></a>题解</h2><p>  <strong>无</strong></p><figure class="highlight java"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs java"><span class="hljs-keyword">import</span> java.util.*;<br><br><span class="hljs-keyword">public</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Main</span></span>&#123;<br><span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title">main</span><span class="hljs-params">(String []args)</span></span><br><span class="hljs-function"></span>&#123;Scanner sc=<span class="hljs-keyword">new</span> Scanner(System.in);<br> <span class="hljs-keyword">int</span> a=sc.nextInt();<br> <span class="hljs-keyword">int</span> b=sc.nextInt();<br> System.out.println(a+b);<br>&#125;<br>&#125;<br></code></pre></div></td></tr></table></figure><h1 id="数列排序"><a href="#数列排序" class="headerlink" title="数列排序"></a>数列排序</h1><h2 id="问题描述-1"><a href="#问题描述-1" class="headerlink" title="问题描述"></a>问题描述</h2><p>  <strong>给定一个长度为n的数列，将这个数列按从小到大的顺序排列。1&lt;=n&lt;=200</strong></p><h2 id="输入格式-1"><a href="#输入格式-1" class="headerlink" title="输入格式"></a>输入格式</h2><p> <strong>第一行为一个整数n。<br>  第二行包含n个整数，为待排序的数，每个整数的绝对值小于10000。</strong></p><h2 id="输出格式-1"><a href="#输出格式-1" class="headerlink" title="输出格式"></a>输出格式</h2><p>  <strong>输出一行，按从小到大的顺序输出排序后的数列。</strong></p><h2 id="题解-1"><a href="#题解-1" class="headerlink" title="题解"></a>题解</h2><p>  <strong>看到排序，首先想到的sort函数，接下来就简单了，代码如下:</strong></p><figure class="highlight java"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs java"><span class="hljs-keyword">import</span> java.util.*;<br><span class="hljs-keyword">import</span> java.io.*;<br><br><span class="hljs-keyword">public</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Main</span> </span>&#123;<br><span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title">main</span><span class="hljs-params">(String [] args)</span> </span>&#123;<br>Scanner s=<span class="hljs-keyword">new</span> Scanner(System.in);<br><span class="hljs-keyword">int</span> n=s.nextInt();<br><span class="hljs-keyword">int</span> a[]=<span class="hljs-keyword">new</span> <span class="hljs-keyword">int</span> [<span class="hljs-number">205</span>];<br><span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> i=<span class="hljs-number">0</span>;i&lt;n;i++) &#123;<br>a[i]=s.nextInt();<br><br>&#125;<br>Arrays.sort(a,<span class="hljs-number">0</span>,n);<br><span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> i=<span class="hljs-number">0</span>;i&lt;n;i++) &#123;<br>System.out.print(a[i]+<span class="hljs-string">&quot; &quot;</span>);<br><br>&#125;<br><br>&#125;<br><br>&#125;<br></code></pre></div></td></tr></table></figure><h1 id="十六进制转八进制"><a href="#十六进制转八进制" class="headerlink" title="十六进制转八进制"></a>十六进制转八进制</h1><h2 id="问题描述-2"><a href="#问题描述-2" class="headerlink" title="问题描述"></a>问题描述</h2><p>  <strong>给定n个十六进制正整数，输出它们对应的八进制数。</strong></p><h2 id="输入格式-2"><a href="#输入格式-2" class="headerlink" title="输入格式"></a>输入格式</h2><p>  <strong>输入的第一行为一个正整数n （1&lt;=n&lt;=10）。<br>  接下来n行，每行一个由0<del>9、大写字母A</del>F组成的字符串，表示要转换的十六进制正整数，每个十六进制数长度不超过100000。</strong></p><h2 id="输出格式-2"><a href="#输出格式-2" class="headerlink" title="输出格式"></a>输出格式</h2><p>  <strong>输出n行，每行为输入对应的八进制正整数。</strong></p><p>　　<strong>【注意】</strong><br>　　<strong>输入的十六进制数不会有前导0，比如012A。<br>　　输出的八进制数也不能有前导0。</strong></p><h2 id="题解-2"><a href="#题解-2" class="headerlink" title="题解"></a>题解</h2><p>  <strong>看到进制转换，想到内置的进制转换函数，提交不对，又回来看下题，看到长度不超过100000，而不是数值。想到先把16进制转换为2进制，再把2进制转换为8进制。</strong></p><p>  <strong>未通过代码</strong></p><figure class="highlight reasonml"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs reasonml">package test;<br><br>import java.util.*;<br><br>public <span class="hljs-keyword">class</span> Main &#123;<br>public static void main(String<span class="hljs-literal">[]</span> args) &#123;<br>String s1, s2;<br>Scanner s = <span class="hljs-keyword">new</span> <span class="hljs-constructor">Scanner(System.<span class="hljs-params">in</span>)</span>;<br>String a = s.next<span class="hljs-literal">()</span>;<br><span class="hljs-built_in">int</span> b = <span class="hljs-module-access"><span class="hljs-module"><span class="hljs-identifier">Integer</span>.</span></span>parse<span class="hljs-constructor">Int(<span class="hljs-params">a</span>, 16)</span>;<span class="hljs-comment">//将16进制转换为10进制</span><br><span class="hljs-module-access"><span class="hljs-module"><span class="hljs-identifier">System</span>.</span></span>out.println(b);<br>String ss = <span class="hljs-module-access"><span class="hljs-module"><span class="hljs-identifier">Integer</span>.</span></span><span class="hljs-keyword">to</span><span class="hljs-constructor">String(<span class="hljs-params">b</span>, 8)</span>;<span class="hljs-comment">//将10进制转化为8进制</span><br><span class="hljs-module-access"><span class="hljs-module"><span class="hljs-identifier">System</span>.</span></span>out.println(ss);<br><br>&#125;<br>&#125;<br><br></code></pre></div></td></tr></table></figure><p><strong>AC代码</strong></p><figure class="highlight reasonml"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs reasonml">package test;<br>import java.util.*;<br>public <span class="hljs-keyword">class</span> Main &#123;<br>public static void main(String <span class="hljs-literal">[]</span> args) &#123;<br>Scanner cin=<span class="hljs-keyword">new</span> <span class="hljs-constructor">Scanner(System.<span class="hljs-params">in</span>)</span>;<br><span class="hljs-built_in">int</span> n=cin.next<span class="hljs-constructor">Int()</span>;<br>String <span class="hljs-literal">[]</span> s1=<span class="hljs-keyword">new</span> String <span class="hljs-literal">[<span class="hljs-number">11</span>]</span>;  <br>String <span class="hljs-literal">[]</span> Bin= &#123;<span class="hljs-string">&quot;0000&quot;</span>,<span class="hljs-string">&quot;0001&quot;</span>,<span class="hljs-string">&quot;0010&quot;</span>,<span class="hljs-string">&quot;0011&quot;</span>,<span class="hljs-string">&quot;0100&quot;</span>,<span class="hljs-string">&quot;0101&quot;</span>,<span class="hljs-string">&quot;0110&quot;</span>,<span class="hljs-string">&quot;0111&quot;</span>,<br><span class="hljs-string">&quot;1000&quot;</span>,<span class="hljs-string">&quot;1001&quot;</span>,<span class="hljs-string">&quot;1010&quot;</span>,<span class="hljs-string">&quot;1011&quot;</span>,<span class="hljs-string">&quot;1100&quot;</span>,<span class="hljs-string">&quot;1101&quot;</span>,<span class="hljs-string">&quot;1110&quot;</span>,<span class="hljs-string">&quot;1111&quot;</span>&#125;;<br>String <span class="hljs-literal">[]</span> Oct= &#123;<span class="hljs-string">&quot;0&quot;</span>,<span class="hljs-string">&quot;1&quot;</span>,<span class="hljs-string">&quot;2&quot;</span>,<span class="hljs-string">&quot;3&quot;</span>,<span class="hljs-string">&quot;4&quot;</span>,<span class="hljs-string">&quot;5&quot;</span>,<span class="hljs-string">&quot;6&quot;</span>,<span class="hljs-string">&quot;7&quot;</span>&#125;;<br>String <span class="hljs-literal">[]</span>Hex= &#123;<span class="hljs-string">&quot;0&quot;</span>,<span class="hljs-string">&quot;1&quot;</span>,<span class="hljs-string">&quot;2&quot;</span>,<span class="hljs-string">&quot;3&quot;</span>,<span class="hljs-string">&quot;4&quot;</span>,<span class="hljs-string">&quot;5&quot;</span>,<span class="hljs-string">&quot;6&quot;</span>,<span class="hljs-string">&quot;7&quot;</span>,<span class="hljs-string">&quot;8&quot;</span>,<br><span class="hljs-string">&quot;9&quot;</span>,<span class="hljs-string">&quot;A&quot;</span>,<span class="hljs-string">&quot;B&quot;</span>,<span class="hljs-string">&quot;C&quot;</span>,<span class="hljs-string">&quot;D&quot;</span>,<span class="hljs-string">&quot;E&quot;</span>,<span class="hljs-string">&quot;F&quot;</span>&#125;;<br><span class="hljs-keyword">for</span>(<span class="hljs-built_in">int</span> i=<span class="hljs-number">0</span>;i&lt;n;i++) &#123;<br> s1<span class="hljs-literal">[<span class="hljs-identifier">i</span>]</span>=cin.next<span class="hljs-literal">()</span>;<br> String len=s1<span class="hljs-literal">[<span class="hljs-identifier">i</span>]</span>;<br> StringBuffer sbBin=<span class="hljs-keyword">new</span> <span class="hljs-constructor">StringBuffer()</span>;<br> StringBuffer sbOct=<span class="hljs-keyword">new</span> <span class="hljs-constructor">StringBuffer()</span>;<br> <span class="hljs-keyword">for</span>(<span class="hljs-built_in">int</span> j=<span class="hljs-number">0</span>;j&lt;len.length<span class="hljs-literal">()</span>;j++) &#123;<br> String c=<span class="hljs-module-access"><span class="hljs-module"><span class="hljs-identifier">Character</span>.</span></span><span class="hljs-keyword">to</span><span class="hljs-constructor">String(<span class="hljs-params">len</span>.<span class="hljs-params">charAt</span>(<span class="hljs-params">j</span>)</span>);<br> <span class="hljs-built_in">int</span> index=<span class="hljs-module-access"><span class="hljs-module"><span class="hljs-identifier">Arrays</span>.</span></span>binary<span class="hljs-constructor">Search(Hex, <span class="hljs-params">c</span>)</span>;<span class="hljs-comment">//返回下标位置</span><br> sbBin.append(Bin<span class="hljs-literal">[<span class="hljs-identifier">index</span>]</span>);<br> &#125;<br> <span class="hljs-keyword">while</span>(sbBin.length<span class="hljs-literal">()</span>%<span class="hljs-number">3</span>!=<span class="hljs-number">0</span>) &#123;<br> sbBin.insert(<span class="hljs-number">0</span>, <span class="hljs-string">&quot;0&quot;</span>);<span class="hljs-comment">//第一个0表示位置；</span><br> &#125;<br> <span class="hljs-built_in">int</span> len2=sbBin.length<span class="hljs-literal">()</span>/<span class="hljs-number">3</span>;<br> <span class="hljs-keyword">for</span>(<span class="hljs-built_in">int</span> j=<span class="hljs-number">0</span>;j&lt;len2;j++) &#123;<br> String span=sbBin.substring(<span class="hljs-number">3</span>*j,<span class="hljs-number">3</span>*j+<span class="hljs-number">3</span>);<br> <span class="hljs-built_in">int</span> index=<span class="hljs-module-access"><span class="hljs-module"><span class="hljs-identifier">Arrays</span>.</span></span>binary<span class="hljs-constructor">Search(Bin, <span class="hljs-string">&quot;0&quot;</span>+<span class="hljs-params">span</span>)</span>;<br> sbOct.append(Oct<span class="hljs-literal">[<span class="hljs-identifier">index</span>]</span>);<br> &#125;<br> <span class="hljs-keyword">while</span>(sbOct.<span class="hljs-built_in">char</span><span class="hljs-constructor">At(0)</span>==<span class="hljs-character">&#x27;0&#x27;</span>) &#123;<br> sbOct.delete(<span class="hljs-number">0</span>, <span class="hljs-number">1</span>);<br> &#125;<br> <span class="hljs-module-access"><span class="hljs-module"><span class="hljs-identifier">System</span>.</span></span>out.println(sbOct.<span class="hljs-keyword">to</span><span class="hljs-constructor">String()</span>);<br> <br>&#125;<br><br><br>&#125;<br><br>&#125;<br><br></code></pre></div></td></tr></table></figure><h1 id="十六进制转十进制"><a href="#十六进制转十进制" class="headerlink" title="十六进制转十进制"></a>十六进制转十进制</h1><h2 id="问题描述-3"><a href="#问题描述-3" class="headerlink" title="问题描述"></a>问题描述</h2><p>  <strong>从键盘输入一个不超过8位的正的十六进制数字符串，将它转换为正的十进制数后输出。<br>　　注：十六进制数中的10~15分别用大写的英文字母A、B、C、D、E、F表示。</strong></p><h2 id="题解-3"><a href="#题解-3" class="headerlink" title="题解"></a>题解</h2><p>  <strong>看到进制转换，想到内置的进制转换函数，首先用int类型，提交正确率75%，查询之后，又换成BigInteger函数。</strong></p><p><strong>75%通过代码</strong></p><figure class="highlight arduino"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs arduino"><span class="hljs-keyword">import</span> java.util.*;<br><br><span class="hljs-keyword">public</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Main</span> &#123;</span><br><span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title">main</span><span class="hljs-params">(<span class="hljs-keyword">String</span>[] args)</span> </span>&#123;<br>Scanner s = <span class="hljs-keyword">new</span> <span class="hljs-built_in">Scanner</span>(System.in);<br><span class="hljs-keyword">String</span> a = s.<span class="hljs-built_in">next</span>();<br><span class="hljs-keyword">int</span> b = Integer.<span class="hljs-built_in">parseInt</span>(a, <span class="hljs-number">16</span>);<br>System.out.<span class="hljs-built_in">println</span>(b);<br><br>&#125;<br>&#125;<br></code></pre></div></td></tr></table></figure><p><strong>AC代码</strong></p><figure class="highlight java"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs java"><span class="hljs-keyword">import</span> java.math.BigInteger;<br><span class="hljs-keyword">import</span> java.util.*;<br><br><span class="hljs-keyword">public</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Main</span> </span>&#123;<br><span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title">main</span><span class="hljs-params">(String[] args)</span> </span>&#123;<br>Scanner s = <span class="hljs-keyword">new</span> Scanner(System.in);<br>String a = s.next();<br>BigInteger b = <span class="hljs-keyword">new</span> BigInteger(a,<span class="hljs-number">16</span>);<br>System.out.println(b);<br><br>&#125;<br>&#125;<br></code></pre></div></td></tr></table></figure><h1 id="十进制转十六进制"><a href="#十进制转十六进制" class="headerlink" title="十进制转十六进制"></a>十进制转十六进制</h1><h2 id="问题描述-4"><a href="#问题描述-4" class="headerlink" title="问题描述"></a>问题描述</h2><p>  <strong>十六进制数是在程序设计时经常要使用到的一种整数的表示方式。它有0,1,2,3,4,5,6,7,8,9,A,B,C,D,E,F共16个符号，分别表示十进制数的0至15。十六进制的计数方法是满16进1，所以十进制数16在十六进制中是10，而十进制的17在十六进制中是11，以此类推，十进制的30在十六进制中是1E。</strong></p><h2 id="输入格式-3"><a href="#输入格式-3" class="headerlink" title="输入格式"></a>输入格式</h2><p>  <strong>输入包含一个非负整数a，表示要转换的数。0&lt;=a&lt;=2147483647</strong></p><h2 id="输出格式-3"><a href="#输出格式-3" class="headerlink" title="输出格式"></a>输出格式</h2><p>  <strong>输出这个整数的16进制表示</strong></p><h2 id="题解-4"><a href="#题解-4" class="headerlink" title="题解"></a>题解</h2><p>  <strong>10进制转换为16进制，数比较小，可以直接用int类型数据储存，每次把输入的10进制的数取模，留下最低位，倒序输出。</strong></p><p> <strong>AC代码</strong></p><figure class="highlight java"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs java"><span class="hljs-keyword">package</span> test;<br><br><span class="hljs-keyword">import</span> java.util.*;<br><br><span class="hljs-keyword">public</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Main</span> </span>&#123;<br><span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title">main</span><span class="hljs-params">(String[] args)</span> </span>&#123;<br>Scanner s = <span class="hljs-keyword">new</span> Scanner(System.in);<br><span class="hljs-keyword">int</span> a = s.nextInt();<br><span class="hljs-keyword">int</span> i=<span class="hljs-number">0</span>;<br><span class="hljs-keyword">char</span> s1[]=<span class="hljs-keyword">new</span> <span class="hljs-keyword">char</span> [<span class="hljs-number">10000</span>];<br><span class="hljs-keyword">if</span>(a==<span class="hljs-number">0</span>)System.out.println(<span class="hljs-number">0</span>);<br><span class="hljs-keyword">while</span>(a!=<span class="hljs-number">0</span>) &#123;<br><span class="hljs-keyword">int</span> t=(<span class="hljs-keyword">int</span>)(a%<span class="hljs-number">16</span>);<br><span class="hljs-keyword">if</span>(t&gt;=<span class="hljs-number">0</span>&amp;&amp;t&lt;=<span class="hljs-number">9</span>) &#123;<br>s1[i++]=(<span class="hljs-keyword">char</span>)(<span class="hljs-string">&#x27;0&#x27;</span>+t);<br>&#125;<br><span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(t&gt;=<span class="hljs-number">10</span>&amp;&amp;t&lt;=<span class="hljs-number">15</span>)&#123;<br>s1[i++]=(<span class="hljs-keyword">char</span>)(<span class="hljs-string">&#x27;A&#x27;</span>+t-<span class="hljs-number">10</span>);<br>&#125;<br>a/=<span class="hljs-number">16</span>;<br>&#125;<br><span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> j=i-<span class="hljs-number">1</span>;j&gt;=<span class="hljs-number">0</span>;j--) &#123;<br>System.out.print(s1[j]);<br>&#125;<br><br><br>&#125;<br>&#125;<br></code></pre></div></td></tr></table></figure><h1 id="特殊回文数"><a href="#特殊回文数" class="headerlink" title="特殊回文数"></a>特殊回文数</h1><h2 id="问题描述-5"><a href="#问题描述-5" class="headerlink" title="问题描述"></a>问题描述</h2><p>  <strong>123321是一个非常特殊的数，它从左边读和从右边读是一样的。</strong><br><strong>输入一个正整数n， 编程求所有这样的五位和六位十进制数，满足各位数字之和等于n 。</strong></p><h2 id="输入格式-4"><a href="#输入格式-4" class="headerlink" title="输入格式"></a>输入格式</h2><p>  <strong>输入一行，包含一个正整数n。</strong></p><h2 id="输出格式-4"><a href="#输出格式-4" class="headerlink" title="输出格式"></a>输出格式</h2><p>  <strong>按从小到大的顺序输出满足条件的整数，每个整数占一行。</strong></p><h2 id="题解-5"><a href="#题解-5" class="headerlink" title="题解"></a>题解</h2><p>  <strong>看到5 6位回文数，直接用三重for循环，i,j,k表示前三位，5位数后两位与前两位一样，k单独输出，六位数前三位和后三位一样，题目是要求从小到大输出，可以写一次循环，判断两次，用数组存一下，也可以写两次循环，这里我为了省事，就直接复制第一次循环代码，改下循环条件</strong></p><p> <strong>AC代码</strong></p><figure class="highlight routeros"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs routeros">package test;<br><br>import java.util.*;<br><br>public class Main &#123;<br>public static void main(String[] args) &#123;<br>Scanner cin = new Scanner(System.<span class="hljs-keyword">in</span>);<br>int n = cin.nextInt();<br><span class="hljs-keyword">for</span>(int <span class="hljs-attribute">i</span>=1;i&lt;=9;i++) &#123;<br><span class="hljs-keyword">for</span>(int <span class="hljs-attribute">j</span>=0;j&lt;=9;j++)<br>&#123;<br><span class="hljs-keyword">for</span>(int <span class="hljs-attribute">k</span>=0;k&lt;=9;k++) &#123;<br><br> <span class="hljs-keyword">if</span>((i+j)<span class="hljs-number">*2</span>+<span class="hljs-attribute">k</span>==n) &#123;<br>System.out.println(i<span class="hljs-number">*10000</span>+j<span class="hljs-number">*1000</span>+k<span class="hljs-number">*100</span>+10*j+i);<br><br>&#125;<br>&#125;<br>&#125;<br>&#125;<br><span class="hljs-keyword">for</span>(int <span class="hljs-attribute">i</span>=1;i&lt;=9;i++) &#123;<br><span class="hljs-keyword">for</span>(int <span class="hljs-attribute">j</span>=0;j&lt;=9;j++)<br>&#123;<br><span class="hljs-keyword">for</span>(int <span class="hljs-attribute">k</span>=0;k&lt;=9;k++) &#123;<br><span class="hljs-keyword">if</span>((i+j+k)<span class="hljs-number">*2</span>==n) &#123;<br>System.out.println(i<span class="hljs-number">*100000</span>+j<span class="hljs-number">*10000</span>+k<span class="hljs-number">*1000</span>+k<span class="hljs-number">*100</span>+j<span class="hljs-number">*10</span>+i);<br><br>&#125;<br><br>&#125;<br>&#125;<br>&#125;<br><br>&#125;<br>&#125;<br><br></code></pre></div></td></tr></table></figure><h1 id="回文数"><a href="#回文数" class="headerlink" title="回文数"></a>回文数</h1><h2 id="问题描述-6"><a href="#问题描述-6" class="headerlink" title="问题描述"></a>问题描述</h2><p>  <strong>1221是一个非常特殊的数，它从左边读和从右边读是一样的，编程求所有这样的四位十进制数。</strong></p><h2 id="输出格式-5"><a href="#输出格式-5" class="headerlink" title="输出格式"></a>输出格式</h2><p>  <strong>按从小到大的顺序输出满足条件的四位十进制数。</strong></p><h2 id="题解-6"><a href="#题解-6" class="headerlink" title="题解"></a>题解</h2><p>  <strong>看到4位回文，直接写i，j两层循环，</strong></p><p> <strong>AC代码</strong></p><figure class="highlight java"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs java"><span class="hljs-keyword">package</span> test;<br><br><span class="hljs-keyword">import</span> java.util.*;<br><br><span class="hljs-keyword">public</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Main</span> </span>&#123;<br><span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title">main</span><span class="hljs-params">(String[] args)</span> </span>&#123;<br>Scanner cin=<span class="hljs-keyword">new</span> Scanner(System.in);<br><br><span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> i=<span class="hljs-number">1</span>;i&lt;=<span class="hljs-number">9</span>;i++) &#123;<br><span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> j=<span class="hljs-number">0</span>;j&lt;=<span class="hljs-number">9</span>;j++)<br>&#123;<br>System.out.println(i*<span class="hljs-number">1000</span>+j*<span class="hljs-number">100</span>+j*<span class="hljs-number">10</span>+i);<br><br>&#125;<br>&#125;<br>&#125;<br>&#125;<br></code></pre></div></td></tr></table></figure><h1 id="特殊的数字"><a href="#特殊的数字" class="headerlink" title="特殊的数字"></a>特殊的数字</h1><h2 id="问题描述-7"><a href="#问题描述-7" class="headerlink" title="问题描述"></a>问题描述</h2><p> <strong>153是一个非常特殊的数，它等于它的每位数字的立方和，即153=1<em>1</em>1+5<em>5</em>5+3<em>3</em>3。编程求所有满足这种条件的三位十进制数。</strong></p><h2 id="输出格式-6"><a href="#输出格式-6" class="headerlink" title="输出格式"></a>输出格式</h2><p>  <strong>按从小到大的顺序输出满足条件的三位十进制数，每个数占一行。</strong></p><h2 id="题解-7"><a href="#题解-7" class="headerlink" title="题解"></a>题解</h2><p>  <strong>写三重for循环，根据条件直接判断即可</strong></p><p> <strong>AC代码</strong></p><figure class="highlight java"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs java"><span class="hljs-keyword">package</span> test;<br><br><span class="hljs-keyword">import</span> java.util.*;<br><br><span class="hljs-keyword">public</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Main</span> </span>&#123;<br><span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title">main</span><span class="hljs-params">(String[] args)</span> </span>&#123;<br>Scanner cin=<span class="hljs-keyword">new</span> Scanner(System.in);<br> <span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> i=<span class="hljs-number">1</span>;i&lt;<span class="hljs-number">10</span>;i++) &#123;<br> <span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> j=<span class="hljs-number">0</span>;j&lt;<span class="hljs-number">10</span>;j++) &#123;<br> <span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> k=<span class="hljs-number">0</span>;k&lt;<span class="hljs-number">10</span>;k++) &#123;<br> <span class="hljs-keyword">if</span>(i*i*i+j*j*j+k*k*k==i*<span class="hljs-number">100</span>+j*<span class="hljs-number">10</span>+k) &#123;<br> System.out.println(i*<span class="hljs-number">100</span>+j*<span class="hljs-number">10</span>+k);<br> &#125;<br> &#125;<br> &#125;<br> &#125;<br><br>&#125;<br>&#125;<br></code></pre></div></td></tr></table></figure><h1 id="杨辉三角形"><a href="#杨辉三角形" class="headerlink" title="杨辉三角形"></a>杨辉三角形</h1><h2 id="问题描述-8"><a href="#问题描述-8" class="headerlink" title="问题描述"></a>问题描述</h2><p>  <strong>杨辉三角形又称Pascal三角形，它的第i+1行是(a+b)i的展开式的系数。<br>　　<br>它的一个重要性质是：三角形中的每个数字等于它两肩上的数字相加。<br>　<br>下面给出了杨辉三角形的前4行：　<br>   1　<br>  1 1　<br> 1 2 1　<br>1 3 3 1　<br>给出n，输出它的前n行。</strong></p><h2 id="输入格式-5"><a href="#输入格式-5" class="headerlink" title="输入格式"></a>输入格式</h2><p><strong>输入包含一个数n。</strong></p><h2 id="输出格式-7"><a href="#输出格式-7" class="headerlink" title="输出格式"></a>输出格式</h2><p>  <strong>输出杨辉三角形的前n行。每一行从这一行的第一个数开始依次输出，中间使用一个空格分隔。请不要在前面输出多余的空格。</strong></p><h2 id="数据规模与约定"><a href="#数据规模与约定" class="headerlink" title="数据规模与约定"></a>数据规模与约定</h2><p><strong>1 &lt;= n &lt;= 34。</strong></p><h2 id="题解-8"><a href="#题解-8" class="headerlink" title="题解"></a>题解</h2><p>  <strong>建立二维数组，根据提示相加得下一个数值。</strong></p><p> <strong>AC代码</strong></p><figure class="highlight arduino"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs arduino">package test;<br><br><span class="hljs-keyword">import</span> java.util.*;<br><br><span class="hljs-keyword">public</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Main</span> &#123;</span><br><span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title">main</span><span class="hljs-params">(<span class="hljs-keyword">String</span>[] args)</span> </span>&#123;<br>Scanner cin=<span class="hljs-keyword">new</span> <span class="hljs-built_in">Scanner</span>(System.in);<br><span class="hljs-keyword">int</span> n=cin.<span class="hljs-built_in">nextInt</span>();<br><span class="hljs-keyword">int</span> a[][]=<span class="hljs-keyword">new</span> <span class="hljs-keyword">int</span> [<span class="hljs-number">40</span>][<span class="hljs-number">40</span>];<br>a[<span class="hljs-number">1</span>][<span class="hljs-number">1</span>]=<span class="hljs-number">1</span>;<br>System.out.<span class="hljs-built_in">println</span>(a[<span class="hljs-number">1</span>][<span class="hljs-number">1</span>]);<br><span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> i=<span class="hljs-number">2</span>;i&lt;=n;i++) &#123;<br><span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> j=<span class="hljs-number">1</span>;j&lt;=i;j++) &#123;<br>a[i][j]=a[i<span class="hljs-number">-1</span>][j]+a[i<span class="hljs-number">-1</span>][j<span class="hljs-number">-1</span>];<br>System.out.<span class="hljs-built_in">print</span>(a[i][j]+<span class="hljs-string">&quot; &quot;</span>);<br>&#125;<br>System.out.<span class="hljs-built_in">println</span>(<span class="hljs-string">&quot;&quot;</span>);<br>&#125;<br><br>&#125;<br>&#125;<br></code></pre></div></td></tr></table></figure><h1 id="查找整数"><a href="#查找整数" class="headerlink" title="查找整数"></a>查找整数</h1><h2 id="问题描述-9"><a href="#问题描述-9" class="headerlink" title="问题描述"></a>问题描述</h2><p>  <strong>给出一个包含n个整数的数列，问整数a在数列中的第一次出现是第几个。</strong></p><h2 id="输入格式-6"><a href="#输入格式-6" class="headerlink" title="输入格式"></a>输入格式</h2><p><strong>第一行包含一个整数n。<br>第二行包含n个非负整数，为给定的数列，数列中的每个数都不大于10000。<br>第三行包含一个整数a，为待查找的数。</strong></p><h2 id="输出格式-8"><a href="#输出格式-8" class="headerlink" title="输出格式"></a>输出格式</h2><p>  <strong>如果a在数列中出现了，输出它第一次出现的位置(位置从1开始编号)，否则输出-1。</strong></p><h2 id="题解-9"><a href="#题解-9" class="headerlink" title="题解"></a>题解</h2><p>  <strong>建立函数直接查找，注意找不到输出-1</strong></p><p> <strong>AC代码</strong></p><figure class="highlight arduino"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs arduino">package test;<br><br><span class="hljs-keyword">import</span> java.util.*;<br><br><span class="hljs-keyword">public</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Main</span> &#123;</span><br><span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title">main</span><span class="hljs-params">(<span class="hljs-keyword">String</span>[] args)</span> </span>&#123;<br>Scanner cin=<span class="hljs-keyword">new</span> <span class="hljs-built_in">Scanner</span>(System.in);<br><span class="hljs-keyword">int</span> n=cin.<span class="hljs-built_in">nextInt</span>();<br><br><span class="hljs-keyword">int</span> [] a=<span class="hljs-keyword">new</span> <span class="hljs-keyword">int</span> [<span class="hljs-number">1005</span>];<br><span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> i=<span class="hljs-number">0</span>;i&lt;n;i++) &#123;<br>a[i]=cin.<span class="hljs-built_in">nextInt</span>();<br>&#125;<br><span class="hljs-keyword">int</span> flag=<span class="hljs-number">0</span>;<br><span class="hljs-keyword">int</span> find=cin.<span class="hljs-built_in">nextInt</span>();<br><span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> i=<span class="hljs-number">0</span>;i&lt;n;i++) &#123;<br><span class="hljs-keyword">if</span>(a[i]==find) &#123;<br>System.out.<span class="hljs-built_in">println</span>(i+<span class="hljs-number">1</span>);<br>flag=<span class="hljs-number">1</span>;<br><span class="hljs-keyword">break</span>;<br>&#125;<br>&#125;<br><span class="hljs-keyword">if</span>(flag==<span class="hljs-number">0</span>)System.out.<span class="hljs-built_in">println</span>(<span class="hljs-number">-1</span>);<br>  &#125;<br>&#125;<br></code></pre></div></td></tr></table></figure><h1 id="数列特征"><a href="#数列特征" class="headerlink" title="数列特征"></a>数列特征</h1><h2 id="问题描述-10"><a href="#问题描述-10" class="headerlink" title="问题描述"></a>问题描述</h2><p>  <strong>给出n个数，找出这n个数的最大值，最小值，和。</strong></p><h2 id="输入格式-7"><a href="#输入格式-7" class="headerlink" title="输入格式"></a>输入格式</h2><p><strong>第一行为整数n，表示数的个数。<br>第二行有n个数，为给定的n个数，每个数的绝对值都小于10000。</strong></p><h2 id="输出格式-9"><a href="#输出格式-9" class="headerlink" title="输出格式"></a>输出格式</h2><p>  <strong>输出三行，每行一个整数。第一行表示这些数中的最大值，第二行表示这些数中的最小值，第三行表示这些数的和。</strong></p><h2 id="题解-10"><a href="#题解-10" class="headerlink" title="题解"></a>题解</h2><p>  <strong>不需要建立数组，在输入的时候就可以判断，相加</strong></p><p> <strong>AC代码</strong></p><figure class="highlight arduino"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs arduino">package test;<br><br><span class="hljs-keyword">import</span> java.math.BigInteger;<br><span class="hljs-keyword">import</span> java.util.*;<br><br><span class="hljs-keyword">public</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Main</span> &#123;</span><br><span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title">main</span><span class="hljs-params">(<span class="hljs-keyword">String</span>[] args)</span> </span>&#123;<br>Scanner cin=<span class="hljs-keyword">new</span> <span class="hljs-built_in">Scanner</span>(System.in);<br><span class="hljs-keyword">int</span> n=cin.<span class="hljs-built_in">nextInt</span>();<br><span class="hljs-keyword">int</span> max=<span class="hljs-number">-10000</span>,min=<span class="hljs-number">10000</span>;<br><span class="hljs-keyword">long</span>  sum=<span class="hljs-number">0</span>;<br><span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> i=<span class="hljs-number">0</span>;i&lt;n;i++) &#123;<br><span class="hljs-keyword">int</span> s=cin.<span class="hljs-built_in">nextInt</span>();<br>sum+=s;<br><span class="hljs-keyword">if</span>(s&gt;max)max=s;<br><span class="hljs-keyword">if</span>(s&lt;min)min=s;<br><br>&#125;<br>System.out.<span class="hljs-built_in">println</span>(max);<br>System.out.<span class="hljs-built_in">println</span>(min);<br>System.out.<span class="hljs-built_in">println</span>(sum);<br>  &#125;<br>&#125;<br></code></pre></div></td></tr></table></figure><h1 id="字母图形"><a href="#字母图形" class="headerlink" title="字母图形"></a>字母图形</h1><h2 id="问题描述-11"><a href="#问题描述-11" class="headerlink" title="问题描述"></a>问题描述</h2><p><strong>利用字母可以组成一些美丽的图形，下面给出了一个例子：</strong><br>ABCDEFG<br>BABCDEF<br>CBABCDE<br>DCBABCD<br>EDCBABC<br><strong>这是一个5行7列的图形，请找出这个图形的规律，并输出一个n行m列的图形。</strong></p><h2 id="输入格式-8"><a href="#输入格式-8" class="headerlink" title="输入格式"></a>输入格式</h2><p><strong>输入一行，包含两个整数n和m，分别表示你要输出的图形的行数的列数。</strong></p><h2 id="输出格式-10"><a href="#输出格式-10" class="headerlink" title="输出格式"></a>输出格式</h2><p>  <strong>输出n行，每个m个字符，为你的图形。</strong></p><h2 id="题解-11"><a href="#题解-11" class="headerlink" title="题解"></a>题解</h2><p>  <strong>就是找规律的题，找出i和j的关系，第一次找错了，得到70分</strong></p><p> <strong>70分代码</strong></p><figure class="highlight arduino"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs arduino"><span class="hljs-keyword">import</span> java.util.*;<br><br><span class="hljs-keyword">public</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Main</span> &#123;</span><br><span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title">main</span><span class="hljs-params">(<span class="hljs-keyword">String</span>[] args)</span> </span>&#123;<br>Scanner cin=<span class="hljs-keyword">new</span> <span class="hljs-built_in">Scanner</span>(System.in);<br><span class="hljs-keyword">int</span> n=cin.<span class="hljs-built_in">nextInt</span>();<br><span class="hljs-keyword">int</span> m=cin.<span class="hljs-built_in">nextInt</span>();<br><span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> i=<span class="hljs-number">0</span>;i&lt;n;i++) &#123;<br><span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> j=<span class="hljs-number">0</span>;j&lt;i;j++) &#123;<br><span class="hljs-keyword">char</span> s=(<span class="hljs-keyword">char</span>) (<span class="hljs-string">&#x27;A&#x27;</span>+i-j);<br>System.out.<span class="hljs-built_in">print</span>(s);<br><br>&#125;<br><span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> j=<span class="hljs-number">0</span>;j&lt;m-i;j++) &#123;<br><span class="hljs-keyword">char</span> s=(<span class="hljs-keyword">char</span>) (<span class="hljs-string">&#x27;A&#x27;</span>+j);<br>System.out.<span class="hljs-built_in">print</span>(s);<br><br>&#125;<br>System.out.<span class="hljs-built_in">println</span>(<span class="hljs-string">&quot;&quot;</span>);<br>&#125;<br>  &#125;<br>&#125;<br></code></pre></div></td></tr></table></figure><p><strong>AC代码</strong></p><figure class="highlight arduino"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs arduino"><span class="hljs-keyword">import</span> java.util.*;<br><br><span class="hljs-keyword">public</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Main</span> &#123;</span><br><span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title">main</span><span class="hljs-params">(<span class="hljs-keyword">String</span>[] args)</span> </span>&#123;<br>Scanner cin=<span class="hljs-keyword">new</span> <span class="hljs-built_in">Scanner</span>(System.in);<br><span class="hljs-keyword">int</span> n=cin.<span class="hljs-built_in">nextInt</span>();<br><span class="hljs-keyword">int</span> m=cin.<span class="hljs-built_in">nextInt</span>();<br><span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> i=<span class="hljs-number">0</span>;i&lt;n;i++) &#123;<br><span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> j=<span class="hljs-number">0</span>;j&lt;m;j++) &#123;<br><span class="hljs-keyword">char</span> s=(<span class="hljs-keyword">char</span>) (<span class="hljs-string">&#x27;A&#x27;</span>+Math.<span class="hljs-built_in">abs</span>(i-j));<br>System.out.<span class="hljs-built_in">print</span>(s);<br><br>&#125;<br>System.out.<span class="hljs-built_in">println</span>(<span class="hljs-string">&quot;&quot;</span>);<br>&#125;<br>  &#125;<br>&#125;<br></code></pre></div></td></tr></table></figure><h1 id="01字串"><a href="#01字串" class="headerlink" title="01字串"></a>01字串</h1><h2 id="问题描述-12"><a href="#问题描述-12" class="headerlink" title="问题描述"></a>问题描述</h2><p><strong>对于长度为5位的一个01串，每一位都可能是0或1，一共有32种可能。它们的前几个是：</strong></p><p>00000</p><p>00001</p><p>00010</p><p>00011</p><p>00100</p><p><strong>请按从小到大的顺序输出这32种01串。</strong></p><h2 id="输入格式-9"><a href="#输入格式-9" class="headerlink" title="输入格式"></a>输入格式</h2><p><strong>本试题没有输入。</strong></p><h2 id="输出格式-11"><a href="#输出格式-11" class="headerlink" title="输出格式"></a>输出格式</h2><p>  <strong>输出32行，按从小到大的顺序每行一个长度为5的01串。</strong></p><h2 id="题解-12"><a href="#题解-12" class="headerlink" title="题解"></a>题解</h2><p>  <strong>写出5层for循环或者打表</strong></p><p><strong>AC代码</strong></p><figure class="highlight pgsql"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs pgsql">package test;<br><br><span class="hljs-keyword">import</span> java.util.*;<br><br><span class="hljs-built_in">public</span> <span class="hljs-keyword">class</span> Main &#123;<br><span class="hljs-built_in">public</span> static <span class="hljs-type">void</span> main(String[] args) &#123;<br>Scanner cin=<span class="hljs-built_in">new</span> Scanner(<span class="hljs-keyword">System</span>.<span class="hljs-keyword">in</span>);<br><span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">0</span>;i&lt;<span class="hljs-number">2</span>;i++) <br><span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> j=<span class="hljs-number">0</span>;j&lt;<span class="hljs-number">2</span>;j++)<br><span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> k=<span class="hljs-number">0</span>;k&lt;<span class="hljs-number">2</span>;k++)<br><span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> n=<span class="hljs-number">0</span>;n&lt;<span class="hljs-number">2</span>;n++)<br><span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> m=<span class="hljs-number">0</span>;m&lt;<span class="hljs-number">2</span>;m++) &#123;<br><span class="hljs-keyword">System</span>.<span class="hljs-keyword">out</span>.print(i);<br><span class="hljs-keyword">System</span>.<span class="hljs-keyword">out</span>.print(j);<br><span class="hljs-keyword">System</span>.<span class="hljs-keyword">out</span>.print(k);<br><span class="hljs-keyword">System</span>.<span class="hljs-keyword">out</span>.print(n);<br><span class="hljs-keyword">System</span>.<span class="hljs-keyword">out</span>.println(m);<br><br>&#125;<br><br>   <br> &#125;<br>&#125;<br></code></pre></div></td></tr></table></figure><h1 id="闰年判断"><a href="#闰年判断" class="headerlink" title="闰年判断"></a>闰年判断</h1><h2 id="问题描述-13"><a href="#问题描述-13" class="headerlink" title="问题描述"></a>问题描述</h2><p><strong>给定一个年份，判断这一年是不是闰年。</strong><br><strong>当以下情况之一满足时，这一年是闰年：</strong></p><ol><li>年份是4的倍数而不是100的倍数；</li><li>年份是400的倍数。<br>其他的年份都不是闰年.</li></ol><h2 id="输入格式-10"><a href="#输入格式-10" class="headerlink" title="输入格式"></a>输入格式</h2><p><strong>输入包含一个整数y，表示当前的年份。</strong></p><h2 id="输出格式-12"><a href="#输出格式-12" class="headerlink" title="输出格式"></a>输出格式</h2><p>  <strong>输出一行，如果给定的年份是闰年，则输出yes，否则输出no。</strong></p><h2 id="题解-13"><a href="#题解-13" class="headerlink" title="题解"></a>题解</h2><p>  <strong>简单的条件判断</strong></p><p><strong>AC代码</strong></p><figure class="highlight arduino"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs arduino">package test;<br><br><span class="hljs-keyword">import</span> java.util.*;<br><br><span class="hljs-keyword">public</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Main</span> &#123;</span><br><span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title">main</span><span class="hljs-params">(<span class="hljs-keyword">String</span>[] args)</span> </span>&#123;<br>Scanner cin=<span class="hljs-keyword">new</span> <span class="hljs-built_in">Scanner</span>(System.in);<br><span class="hljs-keyword">int</span> y=cin.<span class="hljs-built_in">nextInt</span>();<br><span class="hljs-keyword">if</span>(y%<span class="hljs-number">4</span>==<span class="hljs-number">0</span>&amp;&amp;y%<span class="hljs-number">100</span>!=<span class="hljs-number">0</span>||y%<span class="hljs-number">400</span>==<span class="hljs-number">0</span>) &#123;<br>System.out.<span class="hljs-built_in">println</span>(<span class="hljs-string">&quot;yes&quot;</span>);<br>&#125;<br><span class="hljs-keyword">else</span> System.out.<span class="hljs-built_in">println</span>(<span class="hljs-string">&quot;no&quot;</span>);<br>   <br> &#125;<br>&#125;<br></code></pre></div></td></tr></table></figure><h1 id="Fibonacci数列"><a href="#Fibonacci数列" class="headerlink" title="Fibonacci数列"></a>Fibonacci数列</h1><h2 id="问题描述-14"><a href="#问题描述-14" class="headerlink" title="问题描述"></a>问题描述</h2><p><strong>Fibonacci数列的递推公式为：Fn=Fn-1+Fn-2，其中F1=F2=1。<br>当n比较大时，Fn也非常大，现在我们想知道，Fn除以10007的余数是多少。</strong></p><h2 id="输入格式-11"><a href="#输入格式-11" class="headerlink" title="输入格式"></a>输入格式</h2><p><strong>输入包含一个整数n。</strong></p><h2 id="输出格式-13"><a href="#输出格式-13" class="headerlink" title="输出格式"></a>输出格式</h2><p>  <strong>输出一行，包含一个整数，表示Fn除以10007的余数。</strong></p><h2 id="题解-14"><a href="#题解-14" class="headerlink" title="题解"></a>题解</h2><p>  <strong>定义3个数，循环相加取模即可,注意当n取1或n取2时要特殊判断</strong></p><p><strong>AC代码</strong></p><figure class="highlight java"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs java"><span class="hljs-keyword">package</span> test;<br><br><span class="hljs-keyword">import</span> java.util.*;<br><br><span class="hljs-keyword">public</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Main</span> </span>&#123;<br><span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title">main</span><span class="hljs-params">(String[] args)</span> </span>&#123;<br>Scanner sc=<span class="hljs-keyword">new</span> Scanner(System.in);<br><span class="hljs-keyword">int</span> n=sc.nextInt();<br><span class="hljs-keyword">int</span> a=<span class="hljs-number">1</span>,b=<span class="hljs-number">1</span>,c = <span class="hljs-number">0</span>;<br><span class="hljs-keyword">if</span>(n==<span class="hljs-number">1</span>||n==<span class="hljs-number">2</span>) &#123;System.out.println(<span class="hljs-number">1</span>);&#125;<br><span class="hljs-keyword">else</span> &#123;<br><span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> i=<span class="hljs-number">0</span>;i&lt;n-<span class="hljs-number">2</span>;i++) &#123;<br>c=(a+b)%<span class="hljs-number">10007</span>;<br>a=b%<span class="hljs-number">10007</span>;<br>b=c%<span class="hljs-number">10007</span>;<br>&#125;<br>System.out.println(c);<br>&#125;<br><br>&#125;<br>&#125;<br></code></pre></div></td></tr></table></figure><h1 id="圆的面积"><a href="#圆的面积" class="headerlink" title="圆的面积"></a>圆的面积</h1><h2 id="问题描述-15"><a href="#问题描述-15" class="headerlink" title="问题描述"></a>问题描述</h2><p><strong>给定圆的半径r，求圆的面积。</strong></p><h2 id="输入格式-12"><a href="#输入格式-12" class="headerlink" title="输入格式"></a>输入格式</h2><p><strong>输入包含一个整数r，表示圆的半径。</strong></p><h2 id="输出格式-14"><a href="#输出格式-14" class="headerlink" title="输出格式"></a>输出格式</h2><p>  <strong>输出一行，包含一个实数，四舍五入保留小数点后7位，表示圆的面积。</strong><br>说明：在本题中，输入是一个整数，但是输出是一个实数。</p><p>对于实数输出的问题，请一定看清楚实数输出的要求，比如本题中要求保留小数点后7位，则你的程序必须严格的输出7位小数，输出过多或者过少的小数位数都是不行的，都会被认为错误。</p><p>实数输出的问题如果没有特别说明，舍入都是按四舍五入进行。</p><h2 id="题解-15"><a href="#题解-15" class="headerlink" title="题解"></a>题解</h2><p>  <strong>值非常好求，但是难的是保留小数，在网上查了几种保留小数的方法，就一种能用</strong></p><p><strong>AC代码</strong></p><figure class="highlight java"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs java"><span class="hljs-keyword">import</span> java.text.DecimalFormat;<br><span class="hljs-keyword">import</span> java.util.*;<br><br><span class="hljs-keyword">public</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Main</span> </span>&#123;<br><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">double</span> PI=<span class="hljs-number">3.14159265358979323</span>;<br><span class="hljs-keyword">static</span> DecimalFormat df = <span class="hljs-keyword">new</span> DecimalFormat(<span class="hljs-string">&quot;.0000000&quot;</span>);   <br><span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title">main</span><span class="hljs-params">(String[] args)</span></span>&#123;<br>Scanner input=<span class="hljs-keyword">new</span> Scanner(System.in);<br><span class="hljs-keyword">int</span> r=input.nextInt();<br><span class="hljs-keyword">double</span> s=PI*r*r;<br>System.out.println(df.format(s));<br>&#125;<br>&#125;<br></code></pre></div></td></tr></table></figure><h1 id="序列求和"><a href="#序列求和" class="headerlink" title="序列求和"></a>序列求和</h1><h2 id="问题描述-16"><a href="#问题描述-16" class="headerlink" title="问题描述"></a>问题描述</h2><p><strong>求1+2+3+…+n的值。</strong></p><h2 id="输入格式-13"><a href="#输入格式-13" class="headerlink" title="输入格式"></a>输入格式</h2><p><strong>输入包括一个整数n。。</strong></p><h2 id="输出格式-15"><a href="#输出格式-15" class="headerlink" title="输出格式"></a>输出格式</h2><p>  <strong>输出一行，包括一个整数，表示1+2+3+…+n的值。</strong></p><h2 id="题解-16"><a href="#题解-16" class="headerlink" title="题解"></a>题解</h2><p>  <strong>很容易就能看出求和公式，直接输出公式，注意用long类型来存数据。</strong><br><strong>AC代码</strong></p><figure class="highlight java"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs java"><span class="hljs-keyword">import</span> java.util.*;<br><span class="hljs-keyword">public</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Main</span> </span>&#123;  <br><span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title">main</span><span class="hljs-params">(String[] args)</span></span>&#123;<br>Scanner sc=<span class="hljs-keyword">new</span> Scanner(System.in);<br><span class="hljs-keyword">long</span> n=sc.nextInt();<br>System.out.println(n*(n+<span class="hljs-number">1</span>)/<span class="hljs-number">2</span>);<br><br>&#125;<br>&#125;<br></code></pre></div></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>蓝桥杯</category>
      
    </categories>
    
    
    <tags>
      
      <tag>蓝桥杯java组</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>攻防世界新手练习村</title>
    <link href="/2021/12/06/%E6%94%BB%E9%98%B2%E4%B8%96%E7%95%8C%E6%96%B0%E6%89%8B%E7%BB%83%E4%B9%A0%E6%9D%91/"/>
    <url>/2021/12/06/%E6%94%BB%E9%98%B2%E4%B8%96%E7%95%8C%E6%96%B0%E6%89%8B%E7%BB%83%E4%B9%A0%E6%9D%91/</url>
    
    <content type="html"><![CDATA[<h2 id="如来十三掌"><a href="#如来十三掌" class="headerlink" title="如来十三掌"></a>如来十三掌</h2><figure class="highlight makefile"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs makefile">下载文件得到<br>夜哆悉諳多苦奢陀奢諦冥神哆盧穆皤三侄三即諸諳即冥迦冥隸數顛耶迦奢若<br>吉怯陀諳怖奢智侄諸若奢數菩奢集遠俱老竟寫明奢若梵等盧皤豆蒙密離怯婆<br>皤礙他哆提哆多缽以南哆心曰姪罰蒙呐神。舍切真怯勝呐得俱沙罰娑是怯遠<br>得呐數罰輸哆遠薩得槃漫夢盧皤亦醯呐娑皤瑟輸諳尼摩罰薩冥大倒參夢侄阿<br>心罰等奢大度地冥殿皤沙蘇輸奢恐豆侄得罰提哆伽諳沙楞缽三死怯摩大蘇者<br>數一遮<br><span class="hljs-section">前面得到的信息要加上佛曰:</span><br><span class="hljs-section">用与佛论禅解密得到:</span><br>MzkuM3gvMUAwnzuvn3cgozMlMTuvqzAenJchMUAeqzWenzEmLJW9<br><span class="hljs-section">再根据提示用rot13解密得到:</span><br>ZmxhZ3tiZHNjamhia3ptbmZyZGhidmNraWpuZHNrdmJramRzYWJ9<br>再用base64解密得到flag<br>flag&#123;bdscjhbkzmnfrdhbvckijndskvbkjdsab&#125;<br></code></pre></div></td></tr></table></figure><h2 id="give-you-flag"><a href="#give-you-flag" class="headerlink" title="give_you_flag"></a>give_you_flag</h2><figure class="highlight sqf"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs sqf">下载文件得到一张图片，打开一看是动图<br><br>想到用stagesolve一帧一帧的看<br><br>得到一张残缺的二维码图片<br><br>补齐之后扫码得到<span class="hljs-built_in">flag</span><br></code></pre></div></td></tr></table></figure><p><img src="/img/frame50.bmp"></p><h2 id="stegano"><a href="#stegano" class="headerlink" title="stegano"></a>stegano</h2><figure class="highlight css"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs css">下载文件打开是pdf文件，全选文件复制到新建text中<br>发现顶部有BABA的东西，这里应该就是flag<br>想想怎么解码<br><br>就两个字母，首先想到的是敲击码<br>但是不对，又想到摩斯密码也是两个<br>尝试一下第一个 -表示<span class="hljs-selector-tag">B</span> .表示<span class="hljs-selector-tag">A</span> 得到字母C<br>手动替换<br>是不可能的 <br>用txt把<span class="hljs-selector-tag">A</span> 全部替换为.<br>把<span class="hljs-selector-tag">B</span>全部替换为-<br>解码得到:<br>CONGRATULATIONS,FLAG:<span class="hljs-number">1</span>NV151BL3M3554G3<br>根据提示再替换大小写<br>flag&#123;<span class="hljs-number">1</span>nv151bl3m3554g3&#125;<br></code></pre></div></td></tr></table></figure><h2 id="坚持60s"><a href="#坚持60s" class="headerlink" title="坚持60s"></a>坚持60s</h2><figure class="highlight mipsasm"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs mipsasm">下载文件得到 <span class="hljs-keyword">jar文件，打开发现是个游戏。</span><br><span class="hljs-keyword"></span>用上下左右控制发现坚持<span class="hljs-number">60</span>s比较困难，<br>用 <span class="hljs-keyword">jd-gui工具打开，搜索flag</span><br><span class="hljs-keyword"></span>在cn.<span class="hljs-keyword">bjsxt.plane.PlaneGameFrame中得到</span><br><span class="hljs-keyword"></span>flag&#123;RGFqaURhbGlfSmlud<span class="hljs-symbol">2F</span>uQ2hpamk=&#125;<br>猜测是<span class="hljs-keyword">base64编码</span><br><span class="hljs-keyword"></span>解码得到flag&#123;DajiDali_JinwanChiji&#125;<br></code></pre></div></td></tr></table></figure><p><img src="/img/60s.png"></p><h2 id="gif"><a href="#gif" class="headerlink" title="gif"></a>gif</h2><p><strong>下载文件得到黑白图片，猜测是二进制<br>写python脚本转化</strong></p><figure class="highlight python"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs python"> flag_dic = <span class="hljs-string">&quot;&quot;</span><br>  <br> white = <span class="hljs-built_in">open</span>(<span class="hljs-string">r&quot;D:\攻防世界\Misc\gif\gif\0.jpg&quot;</span>,<span class="hljs-string">&quot;rb&quot;</span>).read() <br> black = <span class="hljs-built_in">open</span>(<span class="hljs-string">r&quot;D:\攻防世界\Misc\gif\gif\1.jpg&quot;</span>,<span class="hljs-string">&quot;rb&quot;</span>).read()<br> <span class="hljs-comment">#上面两句用于为下面的图片识别做个实例，定义什么图片是白色，什么是黑色</span><br>  <br> <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">104</span>):<br>     <span class="hljs-keyword">with</span> <span class="hljs-built_in">open</span>(<span class="hljs-string">r&quot;D:\攻防世界\Misc\gif\gif\%d.jpg&quot;</span>%i,<span class="hljs-string">&quot;rb&quot;</span>) <span class="hljs-keyword">as</span> f:<br>         <span class="hljs-keyword">if</span> f.read() == white:<br>             flag_dic += <span class="hljs-string">&quot;0&quot;</span><br>         <span class="hljs-keyword">else</span>:<br>             flag_dic += <span class="hljs-string">&quot;1&quot;</span><br> <span class="hljs-comment">#上面循环语句用于识别D:\攻防世界\Misc\gif\gif\%d.jpg路径下的104</span><br>张图片的颜色，并给白色附值为<span class="hljs-number">0</span>，黑色赋值为<span class="hljs-number">1</span><br> <br> <span class="hljs-comment">#print (flag_dic)</span><br> <span class="hljs-comment">#用于测试打印识别后的二进制</span><br> <br> flag = <span class="hljs-string">&quot;&quot;</span><br>      <br> <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-built_in">len</span>(flag_dic)//<span class="hljs-number">8</span>):<br>     flag += <span class="hljs-built_in">chr</span>(<span class="hljs-built_in">int</span>(flag_dic[i*<span class="hljs-number">8</span>:(i+<span class="hljs-number">1</span>)*<span class="hljs-number">8</span>],<span class="hljs-number">2</span>))<br>      <br> <span class="hljs-built_in">print</span>(flag)<br> <span class="hljs-comment">#将二进制转化为字符串</span><br></code></pre></div></td></tr></table></figure><p><strong>运行脚本得到flag{FuN_giF}</strong></p><h2 id="掀桌子"><a href="#掀桌子" class="headerlink" title="掀桌子"></a>掀桌子</h2><p><strong>观察到里面所有数据均为16进制，考虑到ASCII码，两个数转化为一个字节，<br>注意到2个数大于128进制，但ASCII是0-127，所以进行取余操作。<br>写python脚本</strong></p><figure class="highlight apache"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs apache"><span class="hljs-attribute">flag</span> = &#x27;&#x27;<br><span class="hljs-attribute">s</span>=&#x27;c<span class="hljs-number">8</span>e<span class="hljs-number">9</span>aca<span class="hljs-number">0</span>c<span class="hljs-number">6</span>f<span class="hljs-number">2</span>e<span class="hljs-number">5</span>f<span class="hljs-number">3</span>e<span class="hljs-number">8</span>c<span class="hljs-number">4</span>efe<span class="hljs-number">7</span>a<span class="hljs-number">1</span>a<span class="hljs-number">0</span>d<span class="hljs-number">4</span>e<span class="hljs-number">8</span>e<span class="hljs-number">5</span>a<span class="hljs-number">0</span>e<span class="hljs-number">6</span>ece<span class="hljs-number">1</span>e<span class="hljs-number">7</span>a<span class="hljs-number">0</span>e<span class="hljs-number">9</span>f<span class="hljs-number">3</span>baa<span class="hljs-number">0</span>e<span class="hljs-number">8</span>eafae<span class="hljs-number">3</span>f<span class="hljs-number">9</span>e<span class="hljs-number">4</span>eafae<span class="hljs-number">2</span>eae<span class="hljs-number">4</span>e<span class="hljs-number">3</span>eaebfaebe<span class="hljs-number">3</span>f<span class="hljs-number">5</span>e<span class="hljs-number">7</span>e<span class="hljs-number">9</span>f<span class="hljs-number">3</span>e<span class="hljs-number">4</span>e<span class="hljs-number">3</span>e<span class="hljs-number">8</span>eaf<span class="hljs-number">9</span>eaf<span class="hljs-number">3</span>e<span class="hljs-number">2</span>e<span class="hljs-number">4</span>e<span class="hljs-number">6</span>f<span class="hljs-number">2</span>&#x27;<br><span class="hljs-attribute">l</span> = len(s)//<span class="hljs-number">2</span><br><span class="hljs-attribute">for</span> i in range(l):<br>    <span class="hljs-attribute">flag</span> += chr(int(s[i*<span class="hljs-number">2</span>:(i+<span class="hljs-number">1</span>)*<span class="hljs-number">2</span>], <span class="hljs-number">16</span>) % <span class="hljs-number">128</span>)<br><span class="hljs-attribute">print</span>(flag, end=&#x27;&#x27;)<br></code></pre></div></td></tr></table></figure><p><strong>运行得到Hi, FreshDog! The flag is: hjzcydjzbjdcjkzkcugisdchjyjsbdfr</strong></p><h2 id="ext3"><a href="#ext3" class="headerlink" title="ext3"></a>ext3</h2><figure class="highlight sqf"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs sqf">这个关于linux的暂时不太会，在网上看大佬题解，不用linux也能做，用<br>Winhex 打开搜索<span class="hljs-built_in">flag</span>，然后用<span class="hljs-number">360</span>压缩，打开<span class="hljs-built_in">flag</span>.txt<br>得到一个base64的编码：<br>ZmxhZ3tzYWpiY2lienNrampjbmJoc2J2Y2pianN6Y3N6Ymt6an0= <br>解码得到lag&#123;sajbcibzskjjcnbhsbvcjbjszcszbkzj&#125;<br></code></pre></div></td></tr></table></figure><h2 id="SimpleRAR"><a href="#SimpleRAR" class="headerlink" title="SimpleRAR"></a>SimpleRAR</h2><p><strong>下载得到一个rar压缩包，解压得到一个flag.txt，但是flag不在这。<br>用WinHex打开,发现一个secret.png文件,查询rar的文件头，把7A改为74<br>如下图：</strong></p><p><img src="/img/rar.png"></p><h3 id="rar的知识点："><a href="#rar的知识点：" class="headerlink" title="rar的知识点："></a>rar的知识点：</h3><p><img src="/img/rar2.png"></p><p><strong>再解压得到一个图片，用stagsolve打开，点向左的按钮，得到半张二维码，再用Analyse中的Frame Browser ，发现有两张图片，保存第二章，用相同的方法，得到另半张，再用画图工具补全二维码，我这里用的是电脑自带的3D画图，感觉挺好用的，得到flag<br>二维码如下图：</strong></p><p><img src="/img/simple.png"></p><h2 id="base64stego"><a href="#base64stego" class="headerlink" title="base64stego"></a>base64stego</h2><p><strong>下载得到一个压缩包，打开有个txt文件，需要密码<br>用WinHex打开<br>压缩源文件目录区：<br>50 4B 01 02：目录中文件文件头标记<br>3F 00：压缩使用的 pkware 版本<br>14 00：解压文件所需 pkware 版本<br>00 00：全局方式位标记（有无加密，这个更改这里进行伪加密，改为09<br>00打开就会提示有密码了）<br>压缩源文件目录结束标志 ：50<br>4B 05 06：目录结束标记<br>把09 00改写成00 00就可以成功打开文件了<br>根据base64隐写<br>在网上查看大佬脚本(自己还不会写)</strong></p><figure class="highlight css"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs css"># -*- coding: cp936 -*-<br>import base64<br>b64chars = <span class="hljs-string">&#x27;ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/&#x27;</span><br>with <span class="hljs-built_in">open</span>(<span class="hljs-string">&#x27;C:\\Users\\zzh\Desktop\\base64\\stego.txt&#x27;</span>, <span class="hljs-string">&#x27;rb&#x27;</span>) as f:<br>    bin_str = <span class="hljs-string">&#x27;&#x27;</span><br>    for line in f.<span class="hljs-built_in">readlines</span>():<br>        stegb64 = <span class="hljs-built_in">str</span>(line, <span class="hljs-string">&quot;utf-8&quot;</span>).<span class="hljs-built_in">strip</span>(<span class="hljs-string">&quot;\n&quot;</span>)<br>        rowb64 =  <span class="hljs-built_in">str</span>(base64.<span class="hljs-built_in">b64encode</span>(base64.<span class="hljs-built_in">b64decode</span>(stegb64)), <span class="hljs-string">&quot;utf-8&quot;</span>).<span class="hljs-built_in">strip</span>(<span class="hljs-string">&quot;\n&quot;</span>)<br>        offset = <span class="hljs-built_in">abs</span>(b64chars.<span class="hljs-built_in">index</span>(stegb64.<span class="hljs-built_in">replace</span>(<span class="hljs-string">&#x27;=&#x27;</span>,<span class="hljs-string">&#x27;&#x27;</span>)[-<span class="hljs-number">1</span>])-b64chars.<span class="hljs-built_in">index</span>(rowb64.<span class="hljs-built_in">replace</span>(<span class="hljs-string">&#x27;=&#x27;</span>,<span class="hljs-string">&#x27;&#x27;</span>)[-<span class="hljs-number">1</span>]))<br>        equalnum = stegb64.<span class="hljs-built_in">count</span>(<span class="hljs-string">&#x27;=&#x27;</span>) #no equalnum no offset<br>        if equalnum:<br>            bin_str += <span class="hljs-built_in">bin</span>(offset)[<span class="hljs-number">2</span>:].<span class="hljs-built_in">zfill</span>(equalnum * <span class="hljs-number">2</span>)<br>    b=<span class="hljs-string">&#x27;&#x27;</span>.<span class="hljs-built_in">join</span>([<span class="hljs-built_in">chr</span>(<span class="hljs-built_in">int</span>(bin_str[i:i + <span class="hljs-number">8</span>], <span class="hljs-number">2</span>)) for i in <span class="hljs-built_in">range</span>(<span class="hljs-number">0</span>, <span class="hljs-built_in">len</span>(bin_str), <span class="hljs-number">8</span>)]) #<span class="hljs-number">8</span> 位一组<br>    data=<span class="hljs-string">&quot;&quot;</span><br>    m=<span class="hljs-string">&quot;flag&#123;&quot;</span>+b+<span class="hljs-string">&quot;&#125;&quot;</span><br>    m = m.<span class="hljs-built_in">replace</span>(<span class="hljs-string">&quot;\x00&quot;</span>, <span class="hljs-string">&quot;&quot;</span>)<br>    <span class="hljs-built_in">print</span>(m)<br></code></pre></div></td></tr></table></figure><p><strong>运行得到flag{Base_sixty_four_point_five}</strong></p>]]></content>
    
    
    <categories>
      
      <category>CTF-Misc</category>
      
    </categories>
    
    
    <tags>
      
      <tag>攻防世界</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>高清壁纸网站</title>
    <link href="/2021/12/05/%E9%AB%98%E6%B8%85%E5%A3%81%E7%BA%B8%E7%BD%91%E7%AB%99/"/>
    <url>/2021/12/05/%E9%AB%98%E6%B8%85%E5%A3%81%E7%BA%B8%E7%BD%91%E7%AB%99/</url>
    
    <content type="html"><![CDATA[<h1 id="高清壁纸网站"><a href="#高清壁纸网站" class="headerlink" title="高清壁纸网站"></a>高清壁纸网站</h1><ul><li>1: <a href="https://wallpaperhub.app/">https://wallpaperhub.app/</a></li><li>2: <a href="https://wallhaven.cc/">https://wallhaven.cc/</a></li><li>3: <a href="https://unsplash.com/">https://unsplash.com/</a></li></ul>]]></content>
    
    
    
    <tags>
      
      <tag>杂七杂八</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>CTF-misc-常见编码</title>
    <link href="/2021/12/05/CTF-misc-%E5%B8%B8%E8%A7%81%E7%BC%96%E7%A0%81/"/>
    <url>/2021/12/05/CTF-misc-%E5%B8%B8%E8%A7%81%E7%BC%96%E7%A0%81/</url>
    
    <content type="html"><![CDATA[<h1 id="常见CTF编码及加解密"><a href="#常见CTF编码及加解密" class="headerlink" title="常见CTF编码及加解密"></a>常见CTF编码及加解密</h1><h2 id="ASCLL"><a href="#ASCLL" class="headerlink" title="ASCLL"></a>ASCLL</h2><h3 id="简述："><a href="#简述：" class="headerlink" title="简述："></a>简述：</h3><p>ASCII 码是对英语字符与二进制位之间的关系，做了统一规定。</p><p>基本的 ASCII 字符集共有 128 个字符，其中有 96 个可打印字符，包括常用的字母、数字、标点符号等，</p><p>​ 如：空格SPACE 是32（二进制：00100000）；</p><p>​ 数字0 是48(二进制：00110000)；</p><p>​ 大写字母A 是65（二进制：01000001）。</p><p>另外还有 32 个控制字符（不能打印出来）。</p><p>这128个符号，只占用了一个字节的后面7位，最前面的一位统一规定为0。</p><h3 id="特征："><a href="#特征：" class="headerlink" title="特征："></a>特征：</h3><ul><li><p>0-9, 49-57</p></li><li><p>A-Z, 65-90</p></li><li><p>a-z, 97-122</p></li></ul><h3 id="举例："><a href="#举例：" class="headerlink" title="举例："></a>举例：</h3><figure class="highlight llvm"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs llvm">明文：hello<span class="hljs-punctuation">,</span>world.     <br>十六进制：<span class="hljs-number">0x680</span><span class="hljs-keyword">x</span><span class="hljs-number">650</span><span class="hljs-keyword">x</span><span class="hljs-number">6</span><span class="hljs-keyword">c</span><span class="hljs-number">0x6c0</span><span class="hljs-keyword">x</span><span class="hljs-number">6</span>f<span class="hljs-number">0xff0c0</span><span class="hljs-keyword">x</span><span class="hljs-number">770</span><span class="hljs-keyword">x</span><span class="hljs-number">6</span>f<span class="hljs-number">0x720</span><span class="hljs-keyword">x</span><span class="hljs-number">6</span><span class="hljs-keyword">c</span><span class="hljs-number">0x640</span><span class="hljs-keyword">x</span><span class="hljs-number">2</span>e  <br>十进制：<span class="hljs-number">1041011081081112551211911111410810046</span> <br>二进制：<span class="hljs-number">0110100001100101011011000110110001101111</span>   <br><span class="hljs-number">00101100011101110110111101110010011011000110010000101110</span>   <br></code></pre></div></td></tr></table></figure><h3 id="在线解码"><a href="#在线解码" class="headerlink" title="在线解码:"></a>在线解码:</h3><p>1: <a href="https://www.107000.com/T-Ascii">https://www.107000.com/T-Ascii</a><br>2: <a href="http://www.ab126.com/goju/1711.html">http://www.ab126.com/goju/1711.html</a></p><h2 id="base-家族编码"><a href="#base-家族编码" class="headerlink" title="base 家族编码:"></a>base 家族编码:</h2><figure class="highlight apache"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs apache"><span class="hljs-attribute">base16</span> / base<span class="hljs-number">32</span> / base<span class="hljs-number">64</span> / base<span class="hljs-number">58</span> / base<span class="hljs-number">85</span> / base <span class="hljs-number">100</span><br></code></pre></div></td></tr></table></figure><h3 id="简述"><a href="#简述" class="headerlink" title="简述:"></a>简述:</h3><ul><li><p>Base16编码是将二进制文件转换成由16个字符组成的文本。</p></li><li><p>base32的编码表是由（A-Z、2-7）32个可见字符构成，“=”符号用作后缀填充。</p></li><li><p>base64的编码表是由（A-Z、a-z、0-9、+、/）64个可见字符构成，“=”符号用作后缀填充。</p></li><li><p>base58的编码表相比base64少了数字0，大写字母I，O，小写字母 l (这个是L），以及符号‘+’和‘/’。</p></li><li><p>base91的密文由91个字符（0-9，a-z，A-Z,!#$%&amp;()*+,./:;&lt;=&gt;?@[]^_`{|}~”）组成。</p></li><li><p>Base100编码/解码工具（又名：Emoji表情符号编码/解码），可将文本内容编码为Emoji表情符号；同时也可以将编码后的Emoji表情符号内容解码为文本。 </p></li></ul><h3 id="举例"><a href="#举例" class="headerlink" title="举例:"></a>举例:</h3><figure class="highlight"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs">明文：hello，world.123456 <br></code></pre></div></td></tr></table></figure><figure class="highlight gcode"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs gcode">base<span class="hljs-number">32</span>: <span class="hljs-symbol">NBSWY3</span>DPFR<span class="hljs-number">3</span>W<span class="hljs-number">64</span>TMMQXDCMRTGQ<span class="hljs-number">3</span>DK===    <br>特征：大写字母<span class="hljs-comment">(A-Z)</span>和数字<span class="hljs-comment">(2-7)</span>，不满<span class="hljs-number">5</span>的倍数，用‘=’补齐。 <br></code></pre></div></td></tr></table></figure><figure class="highlight gcode"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs gcode">base<span class="hljs-number">64</span>: aG<span class="hljs-attr">VsbG8</span>sd<span class="hljs-number">29</span>ybGQuMTIz<span class="hljs-symbol">NDY1</span>    <br>特征：大小写字母（A-Z，a-z）和数字（<span class="hljs-number">0</span><span class="hljs-number">-9</span>）以及特殊字符‘+’，‘/’，不满<span class="hljs-number">3</span>的倍数，用‘=’补齐。<br></code></pre></div></td></tr></table></figure><figure class="highlight avrasm"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs avrasm"><span class="hljs-symbol">base58:</span> <span class="hljs-number">2</span>smDFYXWKE8vc8XA8dadEYcSqcQb    <br>特征：相比Base64，Base58不使用数字<span class="hljs-string">&quot;0&quot;</span>，字母大写<span class="hljs-string">&quot;O&quot;</span>，字母大写<span class="hljs-string">&quot;I&quot;</span>，和字母小写<span class="hljs-string">&quot;l&quot;</span>，以及<span class="hljs-string">&quot;+&quot;</span>和<span class="hljs-string">&quot;/&quot;</span>符号，最主要的是后面不会出现<span class="hljs-string">&#x27;=&#x27;</span>。  <br></code></pre></div></td></tr></table></figure><figure class="highlight mipsasm"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs mipsasm"><span class="hljs-keyword">base85: </span><span class="hljs-keyword">BOu!rDst&gt;tGAhM&lt;A1fSl1GgsI </span>  <br>特征：特点是奇怪的字符比较多，但是很难出现等号。 <br></code></pre></div></td></tr></table></figure><figure class="highlight erlang-repl"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs erlang-repl">明文：hello,world.<span class="hljs-number">123456</span>   <br>base91: TPwJh&gt;go2Tv!_,aRA2IbLmA   <br>特征：由<span class="hljs-number">91</span>个字符（<span class="hljs-number">0</span>-<span class="hljs-number">9</span>，a-z，A-Z,!#$<span class="hljs-comment">%&amp;()*+,./:;&lt;=&gt;?@[]^_`&#123;|&#125;~”）组成   </span><br>不支持中文。 <br></code></pre></div></td></tr></table></figure><figure class="highlight avrasm"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs avrasm"><span class="hljs-symbol">base100:</span> 👟👜👣👣👦📦💳💃👮👦👩👣👛🐥🐨🐩🐪🐫🐬🐭<br>特征：就是一堆Emoji表情  <br></code></pre></div></td></tr></table></figure><h3 id="在线解码-1"><a href="#在线解码-1" class="headerlink" title="在线解码:"></a>在线解码:</h3><p><a href="https://www.qqxiuzi.cn/bianma/base64.htm">base16 / base32 / base64</a><br><a href="http://www.jsons.cn/img2base64/">图片base64编码</a><br><a href="http://www.atoolbox.net/Tool.php?Id=932">base58</a><br><a href="http://www.atoolbox.net/Tool.php?Id=934">base85</a><br><a href="https://www.ruovea.com/base91.html">base91</a><br><a href="http://www.atoolbox.net/Tool.php?Id=936">base100</a>   </p><h2 id="MD5、SHA1、HMAC、NTLM等类似加密型"><a href="#MD5、SHA1、HMAC、NTLM等类似加密型" class="headerlink" title="MD5、SHA1、HMAC、NTLM等类似加密型"></a>MD5、SHA1、HMAC、NTLM等类似加密型</h2><h3 id="1、MD5"><a href="#1、MD5" class="headerlink" title="1、MD5"></a>1、MD5</h3><h4 id="简述-1"><a href="#简述-1" class="headerlink" title="简述:"></a>简述:</h4><p>一般MD5值是32位由数字“0-9”和字母“a-f”所组成的字符串，字母大小写统一；如果出现这个范围以外的字符说明这可能是个错误的md5值，就没必要再拿去解密了。<br>​16位值是取的是8~24位   </p><h4 id="特征"><a href="#特征" class="headerlink" title="特征:"></a>特征:</h4><p>有固定长度，一般是32位或者16位<br>​由数字“0-9”和字母“a-f”组成   </p><h4 id="举例-1"><a href="#举例-1" class="headerlink" title="举例:"></a>举例:</h4><figure class="highlight stylus"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs stylus">明文：hello，world.<span class="hljs-number">123456</span>   <br><span class="hljs-function"><span class="hljs-title">md5</span><span class="hljs-params">(hello，world.<span class="hljs-number">123456</span>,<span class="hljs-number">32</span>)</span></span> = <span class="hljs-number">5189503</span>aae1b1c0a6fbf7ea9e3128ab0   <br><span class="hljs-function"><span class="hljs-title">md5</span><span class="hljs-params">(hello，world.<span class="hljs-number">123456</span>,<span class="hljs-number">16</span>)</span></span> = ae1b1c0a6fbf7ea9   <br></code></pre></div></td></tr></table></figure><h4 id="在线加解密"><a href="#在线加解密" class="headerlink" title="在线加解密"></a>在线加解密</h4><p><a href="http://www.ttmd5.com/">MD5解密1</a><br><a href="https://www.cmd5.com/">MD5解密2</a></p><h3 id="2、SHA1"><a href="#2、SHA1" class="headerlink" title="2、SHA1"></a>2、SHA1</h3><h4 id="简述-2"><a href="#简述-2" class="headerlink" title="简述"></a>简述</h4><p>SHA1是一种密码散列函数，SHA1可以生成一个被称为消息摘要的160位，20字节的散列值，散列值通常的呈现形式为40位十六进制数。这种加密和MD5类似。   </p><h4 id="特征-1"><a href="#特征-1" class="headerlink" title="特征"></a>特征</h4><p>有固定长度，为40位的字符串</p><h4 id="举例-2"><a href="#举例-2" class="headerlink" title="举例"></a>举例</h4><figure class="highlight dns"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs dns">明文：hello，world.<span class="hljs-number">123456</span>    <br>sha1（hello，world.<span class="hljs-number">123456</span>)=<span class="hljs-number">0179303</span>b8f08fbc3d16cd23a4be58<span class="hljs-number">28790e12375</span><br></code></pre></div></td></tr></table></figure><h4 id="在线加解密-1"><a href="#在线加解密-1" class="headerlink" title="在线加解密"></a>在线加解密</h4><p><a href="http://www.ttmd5.com/hash.php?type=5">SHA1加解密1</a><br><a href="https://tool.oschina.net/encrypt?type=2">SHA1加解密2</a></p><h3 id="3、HMAC"><a href="#3、HMAC" class="headerlink" title="3、HMAC"></a>3、HMAC</h3><h4 id="简述-3"><a href="#简述-3" class="headerlink" title="简述:"></a>简述:</h4><p>HMAC (Hash-based Message Authentication Code) 常用于接口签名验证，这种算法就是在前两种加密的基础上引入了秘钥，而秘钥又只有传输双方才知道，所以基本上是破解不了的 。</p><h4 id="特征-2"><a href="#特征-2" class="headerlink" title="特征:"></a>特征:</h4><p>​和MD5类似，但是有秘钥。</p><h4 id="在线加解密-2"><a href="#在线加解密-2" class="headerlink" title="在线加解密:"></a>在线加解密:</h4><p><a href="http://encode.chahuo.com/">HAMC加解密</a></p><h3 id="4、NTLM"><a href="#4、NTLM" class="headerlink" title="4、NTLM"></a>4、NTLM</h3><h4 id="简述-4"><a href="#简述-4" class="headerlink" title="简述:"></a>简述:</h4><p>​这种加密是Windows的哈希密码，是 Windows NT 早期版本的标准安全协议。与它相同的还有Domain Cached Credentials（域哈希）。</p><h4 id="在线解密"><a href="#在线解密" class="headerlink" title="在线解密:"></a>在线解密:</h4><p><a href="https://www.jisuan.mobi/p11BbzHum6b3uyJW.html">NTML加解密</a></p><h3 id="5、类似加密穷举"><a href="#5、类似加密穷举" class="headerlink" title="5、类似加密穷举"></a>5、类似加密穷举</h3><table><thead><tr><th align="center">#</th><th align="center">算法</th><th align="center">长度</th></tr></thead><tbody><tr><td align="center">1</td><td align="center">md5</td><td align="center">32/16</td></tr><tr><td align="center">2</td><td align="center">sha1</td><td align="center">40</td></tr><tr><td align="center">3</td><td align="center">sha256</td><td align="center">64</td></tr><tr><td align="center">4</td><td align="center">sha512</td><td align="center">128</td></tr><tr><td align="center">5</td><td align="center">adler32</td><td align="center">8</td></tr><tr><td align="center">6</td><td align="center">crc32</td><td align="center">8</td></tr><tr><td align="center">7</td><td align="center">crc32b</td><td align="center">8</td></tr><tr><td align="center">8</td><td align="center">fnv132</td><td align="center">8</td></tr><tr><td align="center">9</td><td align="center">fnv164</td><td align="center">16</td></tr><tr><td align="center">10</td><td align="center">fnv1a32</td><td align="center">8</td></tr><tr><td align="center">11</td><td align="center">fnv1a64</td><td align="center">16</td></tr><tr><td align="center">12</td><td align="center">gost</td><td align="center">64</td></tr><tr><td align="center">13</td><td align="center">gost-crypto</td><td align="center">64</td></tr><tr><td align="center">14</td><td align="center">haval128,3</td><td align="center">32</td></tr><tr><td align="center">15</td><td align="center">haval128,4</td><td align="center">32</td></tr><tr><td align="center">16</td><td align="center">haval128,5</td><td align="center">32</td></tr><tr><td align="center">17</td><td align="center">haval160,3</td><td align="center">40</td></tr><tr><td align="center">18</td><td align="center">haval160,4</td><td align="center">40</td></tr><tr><td align="center">19</td><td align="center">haval160,5</td><td align="center">40</td></tr><tr><td align="center">20</td><td align="center">haval192,3</td><td align="center">48</td></tr><tr><td align="center">21</td><td align="center">haval192,4</td><td align="center">48</td></tr><tr><td align="center">22</td><td align="center">haval192,5</td><td align="center">48</td></tr><tr><td align="center">23</td><td align="center">haval224,3</td><td align="center">56</td></tr><tr><td align="center">24</td><td align="center">haval224,4</td><td align="center">56</td></tr><tr><td align="center">25</td><td align="center">haval224,5</td><td align="center">56</td></tr><tr><td align="center">26</td><td align="center">haval256,3</td><td align="center">64</td></tr><tr><td align="center">27</td><td align="center">haval256,4</td><td align="center">64</td></tr><tr><td align="center">28</td><td align="center">haval256,5</td><td align="center">64</td></tr><tr><td align="center">29</td><td align="center">joaat</td><td align="center">8</td></tr><tr><td align="center">30</td><td align="center">md2</td><td align="center">32</td></tr><tr><td align="center">31</td><td align="center">md4</td><td align="center">32</td></tr><tr><td align="center">32</td><td align="center">ripemd128</td><td align="center">32</td></tr><tr><td align="center">33</td><td align="center">ripemd160</td><td align="center">40</td></tr><tr><td align="center">34</td><td align="center">ripemd256</td><td align="center">64</td></tr><tr><td align="center">35</td><td align="center">ripemd320</td><td align="center">80</td></tr><tr><td align="center">36</td><td align="center">sha224</td><td align="center">56</td></tr><tr><td align="center">37</td><td align="center">sha3-224</td><td align="center">56</td></tr><tr><td align="center">38</td><td align="center">sha3-256</td><td align="center">64</td></tr><tr><td align="center">39</td><td align="center">sha3-384</td><td align="center">96</td></tr><tr><td align="center">40</td><td align="center">sha3-512</td><td align="center">128</td></tr><tr><td align="center">41</td><td align="center">sha384</td><td align="center">96</td></tr><tr><td align="center">42</td><td align="center">sha512/224</td><td align="center">56</td></tr><tr><td align="center">43</td><td align="center">sha512/256</td><td align="center">64</td></tr><tr><td align="center">44</td><td align="center">snefru</td><td align="center">64</td></tr><tr><td align="center">45</td><td align="center">snefru256</td><td align="center">64</td></tr><tr><td align="center">46</td><td align="center">tiger128,3</td><td align="center">32</td></tr><tr><td align="center">47</td><td align="center">tiger128,4</td><td align="center">32</td></tr><tr><td align="center">48</td><td align="center">tiger160,3</td><td align="center">40</td></tr><tr><td align="center">49</td><td align="center">tiger160,4</td><td align="center">40</td></tr><tr><td align="center">50</td><td align="center">tiger192,3</td><td align="center">48</td></tr><tr><td align="center">51</td><td align="center">tiger192,4</td><td align="center">48</td></tr><tr><td align="center">52</td><td align="center">whirlpool</td><td align="center">128</td></tr><tr><td align="center">53</td><td align="center">mysql</td><td align="center">老MYSQL数据库用的，16位，且第1位和第7位必须为0-8</td></tr><tr><td align="center">54</td><td align="center">mysql5</td><td align="center">40</td></tr><tr><td align="center">55</td><td align="center">NTLM</td><td align="center">32</td></tr><tr><td align="center">56</td><td align="center">Domain</td><td align="center">Cached Credentials    32</td></tr></tbody></table><h2 id="AES、DES、RC4、Rabbit、3DES型加密"><a href="#AES、DES、RC4、Rabbit、3DES型加密" class="headerlink" title="AES、DES、RC4、Rabbit、3DES型加密"></a>AES、DES、RC4、Rabbit、3DES型加密</h2><h3 id="简述-5"><a href="#简述-5" class="headerlink" title="简述:"></a>简述:</h3><p>以上都是非对称性加密算法，就是引入了密钥，密文特征与Base64类似.</p><h3 id="在线解密-1"><a href="#在线解密-1" class="headerlink" title="在线解密:"></a>在线解密:</h3><p><a href="https://www.sojson.com/encrypt_aes.html">非对称加密</a></p><h2 id="Unicode编码"><a href="#Unicode编码" class="headerlink" title="Unicode编码"></a>Unicode编码</h2><h3 id="简述-6"><a href="#简述-6" class="headerlink" title="简述:"></a>简述:</h3><p>Unicode（统一码、万国码、单一码）是一种在计算机上使用的字符编码。<br>它用两个字节来编码一个字符,字符编码一般用十六进制来表示.</p><h3 id="举例-3"><a href="#举例-3" class="headerlink" title="举例:"></a>举例:</h3><p>Unicode有以下四种编码方式：</p><figure class="highlight less"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs less">明文：<span class="hljs-selector-tag">hello</span>，<span class="hljs-selector-tag">world</span>.<br><br><span class="hljs-selector-tag">&amp;</span><span class="hljs-selector-id">#x</span> <span class="hljs-selector-attr">[hex]</span>：<span class="hljs-selector-tag">&amp;</span><span class="hljs-selector-id">#x0068</span>;<span class="hljs-selector-tag">&amp;</span><span class="hljs-selector-id">#x0065</span>;<span class="hljs-selector-tag">&amp;</span><span class="hljs-selector-id">#x006C</span>;<span class="hljs-selector-tag">&amp;</span><span class="hljs-selector-id">#x006C</span>;<span class="hljs-selector-tag">&amp;</span><span class="hljs-selector-id">#x006F</span>;<span class="hljs-selector-tag">&amp;</span><span class="hljs-selector-id">#xFF0C</span>;<span class="hljs-selector-tag">&amp;</span><span class="hljs-selector-id">#x0077</span>;<span class="hljs-selector-tag">&amp;</span><span class="hljs-selector-id">#x006F</span>;<span class="hljs-selector-tag">&amp;</span><span class="hljs-selector-id">#x0072</span>;<span class="hljs-selector-tag">&amp;</span><span class="hljs-selector-id">#x006C</span>;<span class="hljs-selector-tag">&amp;</span><span class="hljs-selector-id">#x0064</span>;<span class="hljs-selector-tag">&amp;</span><span class="hljs-selector-id">#x002E</span>;<br><br><span class="hljs-selector-tag">&amp;</span># <span class="hljs-selector-attr">[hex]</span>：<span class="hljs-selector-tag">&amp;</span><span class="hljs-selector-id">#00104</span>;<span class="hljs-selector-tag">&amp;</span><span class="hljs-selector-id">#00101</span>;<span class="hljs-selector-tag">&amp;</span><span class="hljs-selector-id">#00108</span>;<span class="hljs-selector-tag">&amp;</span><span class="hljs-selector-id">#00108</span>;<span class="hljs-selector-tag">&amp;</span><span class="hljs-selector-id">#00111</span>;<span class="hljs-selector-tag">&amp;</span><span class="hljs-selector-id">#65292</span>;<span class="hljs-selector-tag">&amp;</span><span class="hljs-selector-id">#00119</span>;<span class="hljs-selector-tag">&amp;</span><span class="hljs-selector-id">#00111</span>;<span class="hljs-selector-tag">&amp;</span><span class="hljs-selector-id">#00114</span>;<span class="hljs-selector-tag">&amp;</span><span class="hljs-selector-id">#00108</span>;<span class="hljs-selector-tag">&amp;</span><span class="hljs-selector-id">#00100</span>;<span class="hljs-selector-tag">&amp;</span><span class="hljs-selector-id">#00046</span>;<br><br>\<span class="hljs-selector-tag">u</span> <span class="hljs-selector-attr">[hex]</span>：\<span class="hljs-selector-tag">U0068</span>\<span class="hljs-selector-tag">U0065</span>\<span class="hljs-selector-tag">U006C</span>\<span class="hljs-selector-tag">U006C</span>\<span class="hljs-selector-tag">U006F</span>\<span class="hljs-selector-tag">U002C</span>\<span class="hljs-selector-tag">U0077</span>\<span class="hljs-selector-tag">U006F</span>\<span class="hljs-selector-tag">U0072</span>\<span class="hljs-selector-tag">U006C</span>\<span class="hljs-selector-tag">U0064</span>\<span class="hljs-selector-tag">U002E</span><br><br>\<span class="hljs-selector-tag">u</span>+ <span class="hljs-selector-attr">[hex]</span>：\<span class="hljs-selector-tag">U</span>+<span class="hljs-selector-tag">0068</span>\<span class="hljs-selector-tag">U</span>+<span class="hljs-selector-tag">0065</span>\<span class="hljs-selector-tag">U</span>+<span class="hljs-selector-tag">006C</span>\<span class="hljs-selector-tag">U</span>+<span class="hljs-selector-tag">006C</span>\<span class="hljs-selector-tag">U</span>+<span class="hljs-selector-tag">006F</span>\<span class="hljs-selector-tag">U</span>+<span class="hljs-selector-tag">FF0C</span>\<span class="hljs-selector-tag">U</span>+<span class="hljs-selector-tag">0077</span>\<span class="hljs-selector-tag">U</span>+<span class="hljs-selector-tag">006F</span>\<span class="hljs-selector-tag">U</span>+<span class="hljs-selector-tag">0072</span>\<span class="hljs-selector-tag">U</span>+<span class="hljs-selector-tag">006C</span>\<span class="hljs-selector-tag">U</span>+<span class="hljs-selector-tag">0064</span>\<span class="hljs-selector-tag">U</span>+<span class="hljs-selector-tag">002E</span><br><br></code></pre></div></td></tr></table></figure><h3 id="在线编码"><a href="#在线编码" class="headerlink" title="在线编码:"></a>在线编码:</h3><p><a href="http://www.mxcz.net/tools/Unicode.aspx">四种方式都有</a><br><a href="http://www.msxindl.com/tools/unicode16.asp">unicode16进制</a><br><a href="https://www.sojson.com/unicode.html">unicode</a><br><a href="http://tool.chinaz.com/tools/unicode.aspx">常见\u方式</a></p><h2 id="HTML实体编码"><a href="#HTML实体编码" class="headerlink" title="HTML实体编码"></a>HTML实体编码</h2><h3 id="简述-7"><a href="#简述-7" class="headerlink" title="简述:"></a>简述:</h3><p>字符实体是用一个编号写入HTML代码中来代替一个字符，在使用浏览器访问网页时会将这个编号解析还原为字符以供阅读。</p><h3 id="举例：-1"><a href="#举例：-1" class="headerlink" title="举例："></a>举例：</h3><figure class="highlight xml"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs xml">明文：hello，world.<br>十进制：<span class="hljs-symbol">&amp;#104;</span><span class="hljs-symbol">&amp;#101;</span><span class="hljs-symbol">&amp;#108;</span><span class="hljs-symbol">&amp;#108;</span><span class="hljs-symbol">&amp;#111;</span><span class="hljs-symbol">&amp;#65292;</span><span class="hljs-symbol">&amp;#119;</span><span class="hljs-symbol">&amp;#111;</span><span class="hljs-symbol">&amp;#114;</span><span class="hljs-symbol">&amp;#108;</span><span class="hljs-symbol">&amp;#100;</span><span class="hljs-symbol">&amp;#46;</span><br>十六进制：<span class="hljs-symbol">&amp;#x68;</span><span class="hljs-symbol">&amp;#x65;</span><span class="hljs-symbol">&amp;#x6C;</span><span class="hljs-symbol">&amp;#x6C;</span><span class="hljs-symbol">&amp;#x6F;</span><span class="hljs-symbol">&amp;#xFF0C;</span><span class="hljs-symbol">&amp;#x77;</span><span class="hljs-symbol">&amp;#x6F;</span><span class="hljs-symbol">&amp;#x72;</span><span class="hljs-symbol">&amp;#x6C;</span><span class="hljs-symbol">&amp;#x64;</span><span class="hljs-symbol">&amp;#x2E;</span><br></code></pre></div></td></tr></table></figure><h3 id="在线加解密-3"><a href="#在线加解密-3" class="headerlink" title="在线加解密:"></a>在线加解密:</h3><p><a href="https://www.toolzl.com/tools/htmlende.html">HTML实体加解密</a><br><a href="https://www.qqxiuzi.cn/bianma/zifushiti.php">HTML实体加解密2</a></p><h2 id="Escape、Unescape编码（-u"><a href="#Escape、Unescape编码（-u" class="headerlink" title="Escape、Unescape编码（%u)"></a>Escape、Unescape编码（%u)</h2><h3 id="简述-8"><a href="#简述-8" class="headerlink" title="简述:"></a>简述:</h3><p>Escape/Unescape加密解码/编码解码,又叫%u编码，其实就是字符对应UTF-16 16进制表示方式前面加%u。Unescape解码/解密，就是去掉”%u”后，将16进制字符还原后，由utf-16转码到自己目标字符。如：字符“中”，UTF-16BE是：“6d93”，因此Escape是“%u6d93”，反之也一样！</p><h3 id="举例-4"><a href="#举例-4" class="headerlink" title="举例:"></a>举例:</h3><figure class="highlight cos"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs cos">明文：hello，world.<br>密文：<span class="hljs-built_in">%u</span>0068<span class="hljs-built_in">%u</span>0065<span class="hljs-built_in">%u</span>006c<span class="hljs-built_in">%u</span>006c<span class="hljs-built_in">%u</span>006f<span class="hljs-built_in">%uff</span>0c<span class="hljs-built_in">%u</span>0077<span class="hljs-built_in">%u</span>006f<span class="hljs-built_in">%u</span>0072<span class="hljs-built_in">%u</span>006c<span class="hljs-built_in">%u</span>0064<span class="hljs-built_in">%u</span>002e<br></code></pre></div></td></tr></table></figure><h3 id="在线加解密-4"><a href="#在线加解密-4" class="headerlink" title="在线加解密:"></a>在线加解密:</h3><p><a href="http://web.chacuo.net/charsetescape/">Escape编码/解码</a></p><h2 id="URL编码"><a href="#URL编码" class="headerlink" title="URL编码"></a>URL编码</h2><h3 id="简述-9"><a href="#简述-9" class="headerlink" title="简述:"></a>简述:</h3><p>url编码又叫百分号编码，是统一资源定位(URL)编码方式。URL地址（常说网址）规定了常用地数字，字母可以直接使用，另外一批作为特殊用户字符也可以直接用（/,:@等），剩下的其它所有字符必须通过%xx编码处理。 现在已经成为一种规范了，基本所有程序语言都有这种编码，如js：有encodeURI、encodeURIComponent，PHP有 urlencode、urldecode等。编码方法很简单，在该字节ascii码的的16进制字符前面加%. 如 空格字符，ascii码是32，对应16进制是’20’，那么urlencode编码结果是:%20。</p><h3 id="特征-3"><a href="#特征-3" class="headerlink" title="特征:"></a>特征:</h3><p>编码前面都有%.</p><h3 id="在线加解密-5"><a href="#在线加解密-5" class="headerlink" title="在线加解密:"></a>在线加解密:</h3><p><a href="http://web.chacuo.net/charseturlencode">URL加解密</a></p><h2 id="Hex编码"><a href="#Hex编码" class="headerlink" title="Hex编码"></a>Hex编码</h2><h3 id="简述-10"><a href="#简述-10" class="headerlink" title="简述:"></a>简述:</h3><p>Hex 全称 是Intel HEX。Hex文件是由一行行符合Intel HEX文件格式的文本所构成的ASCII文本文件。在Intel HEX文件中，每一行包含一个HEX记录。这些记录由对应机器语言码和/或常量数据的十六进制编码数字组成。</p><h3 id="特征-4"><a href="#特征-4" class="headerlink" title="特征:"></a>特征:</h3><ul><li><p>十六进制（Hexadecimal）</p></li><li><p>它是计算机中数据的一种表示方法，由0-9，A-F组 成，字母不区分大小写。</p></li><li><p>与10进制的对应关系是：0-9不变，A-F对应10-15。</p></li></ul><h3 id="举例-5"><a href="#举例-5" class="headerlink" title="举例:"></a>举例:</h3><figure class="highlight llvm"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs llvm">明文：hello，world.<br>密文（带%）：<span class="hljs-variable">%68</span><span class="hljs-variable">%65</span><span class="hljs-variable">%6</span><span class="hljs-keyword">c</span><span class="hljs-variable">%6</span><span class="hljs-keyword">c</span><span class="hljs-variable">%6</span>f<span class="hljs-variable">%ef</span><span class="hljs-variable">%bc</span><span class="hljs-variable">%8</span><span class="hljs-keyword">c</span><span class="hljs-variable">%77</span><span class="hljs-variable">%6</span>f<span class="hljs-variable">%72</span><span class="hljs-variable">%6</span><span class="hljs-keyword">c</span><span class="hljs-variable">%64</span><span class="hljs-variable">%2</span>e<br>密文（不带%）：<span class="hljs-number">68656</span>C<span class="hljs-number">6</span>C<span class="hljs-number">6</span>FEFBC<span class="hljs-number">8</span>C<span class="hljs-number">776</span>F<span class="hljs-number">726</span>C<span class="hljs-number">642</span>E<br></code></pre></div></td></tr></table></figure><h3 id="在线加解密-6"><a href="#在线加解密-6" class="headerlink" title="在线加解密:"></a>在线加解密:</h3><p><a href="https://www.107000.com/T-Hex">不带%</a><br><a href="http://stool.chinaz.com/hex">带%</a></p><h2 id="js专用加密"><a href="#js专用加密" class="headerlink" title="js专用加密"></a>js专用加密</h2><h3 id="1、JS颜文字加密"><a href="#1、JS颜文字加密" class="headerlink" title="1、JS颜文字加密"></a>1、JS颜文字加密</h3><h4 id="特征-5"><a href="#特征-5" class="headerlink" title="特征:"></a>特征:</h4><p>一堆颜文字构成的js代码，在F12中可直接解密执行</p><h4 id="在线加密"><a href="#在线加密" class="headerlink" title="在线加密:"></a>在线加密:</h4><p><a href="https://utf-8.jp/public/aaencode.html">JS颜文字加密</a><br>解密在F12的console中</p><h3 id="2、Jother编码"><a href="#2、Jother编码" class="headerlink" title="2、Jother编码"></a>2、Jother编码</h3><h4 id="简述-11"><a href="#简述-11" class="headerlink" title="简述:"></a>简述:</h4><p>jother是一种运用于javascript语言中利用少量字符构造精简的匿名函数方法对于字符串进行的编码方式。</p><h4 id="特征-6"><a href="#特征-6" class="headerlink" title="特征:"></a>特征:</h4><p>只用 ! + ( ) [ ] { } 这八个字符就能完成对任意字符串的编码。可在F12中解密执行</p><h4 id="在线解密-2"><a href="#在线解密-2" class="headerlink" title="在线解密:"></a>在线解密:</h4><p><a href="http://tmxk.org/jother/">Jother</a></p><ul><li><p>一堆<a href=""></a>+!的东西就用jother解码</p></li><li><p>可以打开谷歌浏览器 按F12</p></li><li><p>然后console将那堆解码的东西复制过去 按回车即可解码</p></li></ul><h3 id="3、JSFuck编码"><a href="#3、JSFuck编码" class="headerlink" title="3、JSFuck编码"></a>3、JSFuck编码</h3><h4 id="特征-7"><a href="#特征-7" class="headerlink" title="特征:"></a>特征:</h4><p>与jother很像，只是少了{ }</p><h4 id="在线加密-1"><a href="#在线加密-1" class="headerlink" title="在线加密:"></a>在线加密:</h4><p><a href="http://www.jsfuck.com/">JSFuck加密</a><br>解密在F12的console中</p><h2 id="Quoted-printable编码"><a href="#Quoted-printable编码" class="headerlink" title="Quoted-printable编码"></a>Quoted-printable编码</h2><h3 id="简述-12"><a href="#简述-12" class="headerlink" title="简述:"></a>简述:</h3><p>它是多用途互联网邮件扩展（MIME) 一种实现方式。有时候我们可以邮件头里面能够看到这样的编码；</p><h3 id="特征-8"><a href="#特征-8" class="headerlink" title="特征:"></a>特征:</h3><p>任何一个8位的字节值可编码为3个字符：一个等号”=”后跟随两个十六进制数字(0–9或A–F)表示该字节的数值.</p><h3 id="举例-6"><a href="#举例-6" class="headerlink" title="举例:"></a>举例:</h3><figure class="highlight mathematica"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs mathematica">明文：天上掉下了个猪八戒<br>密文：<span class="hljs-operator">=</span><span class="hljs-variable">E5</span><span class="hljs-operator">=</span><span class="hljs-variable">A4</span><span class="hljs-operator">=</span><span class="hljs-variable">A9</span><span class="hljs-operator">=</span><span class="hljs-variable">E4</span><span class="hljs-operator">=</span><span class="hljs-variable">B8</span><span class="hljs-operator">=</span><span class="hljs-number">8</span><span class="hljs-variable">A</span><span class="hljs-operator">=</span><span class="hljs-variable">E6</span><span class="hljs-operator">=</span><span class="hljs-number">8</span><span class="hljs-built_in">E</span><span class="hljs-operator">=</span><span class="hljs-number">89</span><span class="hljs-operator">=</span><span class="hljs-variable">E4</span><span class="hljs-operator">=</span><span class="hljs-variable">B8</span><span class="hljs-operator">=</span><span class="hljs-number">8</span><span class="hljs-variable">B</span><span class="hljs-operator">=</span><span class="hljs-variable">E4</span><span class="hljs-operator">=</span><span class="hljs-variable">BA</span><span class="hljs-operator">=</span><span class="hljs-number">86</span><span class="hljs-operator">=</span><span class="hljs-variable">E4</span><span class="hljs-operator">=</span><span class="hljs-variable">B8</span><span class="hljs-operator">=</span><span class="hljs-variable">AA</span><span class="hljs-operator">=</span><span class="hljs-variable">E7</span><span class="hljs-operator">=</span><span class="hljs-number">8</span><span class="hljs-built_in">C</span><span class="hljs-operator">=</span><span class="hljs-variable">AA</span><span class="hljs-operator">=</span><span class="hljs-variable">E5</span><span class="hljs-operator">=</span><span class="hljs-number">85</span><span class="hljs-operator">=</span><span class="hljs-variable">AB</span><span class="hljs-operator">=</span><span class="hljs-variable">E6</span><span class="hljs-operator">=</span><span class="hljs-number">88</span><span class="hljs-operator">=</span><span class="hljs-number">92</span><br></code></pre></div></td></tr></table></figure><h3 id="在线编码-1"><a href="#在线编码-1" class="headerlink" title="在线编码:"></a>在线编码:</h3><p><a href="http://www.mxcz.net/tools/QuotedPrintable.aspx">在线编码</a></p><h2 id="XXencode"><a href="#XXencode" class="headerlink" title="XXencode"></a>XXencode</h2><h3 id="简述-13"><a href="#简述-13" class="headerlink" title="简述:"></a>简述:</h3><p>​ XXencode将输入文本以每三个字节为单位进行编码。如果最后剩下的资料少于三个字节，不够的部份用零补齐。这三个字节共有24个Bit，以6bit为单位分为4个组，每个组以十进制来表示所出现的数值只会落在0到63之间。以所对应值的位置字符代替。</p><h3 id="特征-9"><a href="#特征-9" class="headerlink" title="特征:"></a>特征:</h3><p>字符范围是：</p><p>0-9，A-Z，a-z，</p><p>一共64个字符。跟base64打印字符相比，就是UUencode多一个“-” 字符，少一个”/” 字符。</p><h3 id="举例-7"><a href="#举例-7" class="headerlink" title="举例:"></a>举例:</h3><figure class="highlight brainfuck"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs brainfuck"><span class="hljs-comment">明文：hello，world</span><span class="hljs-string">.</span><br><span class="hljs-comment">密文：BO4JgP4yXf5RjQalY9U</span>++<br></code></pre></div></td></tr></table></figure><h3 id="在线加解密-7"><a href="#在线加解密-7" class="headerlink" title="在线加解密:"></a>在线加解密:</h3><p><a href="http://web.chacuo.net/charsetxxencode">UUencode加解密</a></p><h2 id="UUencode"><a href="#UUencode" class="headerlink" title="UUencode"></a>UUencode</h2><h3 id="简述-14"><a href="#简述-14" class="headerlink" title="简述:"></a>简述:</h3><p>​ UUencode是一种二进制到文字的编码，最早在unix邮件系统中使用，全称：Unix-to-Unix encoding，UUencode将输入文本以每三个字节为单位进行编码，如果最后剩下的资料少于三个字节，不够的部份用零补齐。三个字节共有24个Bit，以6-bit为单位分为4个组，每个组以十进制来表示所出现的字节的数值。这个数值只会落在0到63之间。然后将每个数加上32，所产生的结果刚好落在ASCII字符集中可打印字符（32-空白…95-底线）的范围之中。</p><h3 id="举例-8"><a href="#举例-8" class="headerlink" title="举例:"></a>举例:</h3><figure class="highlight dts"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs dts">明文：hello,world.<br>密文：,:<span class="hljs-variable">&amp;</span><span class="hljs-number">5L</span>;&amp;\L=V]R;<span class="hljs-variable">&amp;</span><span class="hljs-number">0</span>N<br></code></pre></div></td></tr></table></figure><h3 id="在线解密工具"><a href="#在线解密工具" class="headerlink" title="在线解密工具"></a>在线解密工具</h3><p><a href="http://web.chacuo.net/charsetuuencode">UUencode1</a><br><a href="https://www.qqxiuzi.cn/bianma/uuencode.php">UUencode2</a></p><h2 id="aaencode编码"><a href="#aaencode编码" class="headerlink" title="aaencode编码"></a>aaencode编码</h2><h3 id="特征-10"><a href="#特征-10" class="headerlink" title="特征:"></a>特征:</h3><p>将JS代码转换成常用的网络表情</p><h3 id="在线加解密-8"><a href="#在线加解密-8" class="headerlink" title="在线加解密:"></a>在线加解密:</h3><p><a href="http://www.atoolbox.net/Tool.php?Id=703">aaencode1</a><br><a href="https://www.qtool.net/decode">aaencode2</a><br><a href="https://utf-8.jp/public/aaencode.html">aaencode3</a></p><h2 id="jjencode编码"><a href="#jjencode编码" class="headerlink" title="jjencode编码"></a>jjencode编码</h2><h3 id="特征-11"><a href="#特征-11" class="headerlink" title="特征:"></a>特征:</h3><p>将JS代码转换成只有符号的字符串</p><h3 id="在线加解密-9"><a href="#在线加解密-9" class="headerlink" title="在线加解密"></a>在线加解密</h3><p><a href="http://www.atoolbox.net/Tool.php?Id=704">jjencode加密</a><br><a href="https://www.qtool.net/decode">jjencode解密</a></p><h2 id="brainfuck编码"><a href="#brainfuck编码" class="headerlink" title="brainfuck编码"></a>brainfuck编码</h2><h3 id="简述-15"><a href="#简述-15" class="headerlink" title="简述:"></a>简述:</h3><p>Brainfuck是一种极小化的计算机语言，按照”Turing complete（完整图灵机）”思想设计的语言，它的主要设计思路是：用最小的概念实现一种“简单”的语言。</p><h3 id="特征-12"><a href="#特征-12" class="headerlink" title="特征:"></a>特征:</h3><p>BrainFuck 语言只有八种符号，所有的操作都由这八种符号 (&gt; &lt; + - . , [ ]) 的组合来完成。</p><h3 id="举例-9"><a href="#举例-9" class="headerlink" title="举例:"></a>举例:</h3><figure class="highlight brainfuck"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs brainfuck"><span class="hljs-comment">明文：hello</span><span class="hljs-string">,</span><span class="hljs-comment">world</span><span class="hljs-string">.</span><br><span class="hljs-comment">密文：</span>++<span class="hljs-literal">+</span><span class="hljs-literal">+</span><span class="hljs-literal">+</span> ++<span class="hljs-literal">+</span><span class="hljs-literal">+</span><span class="hljs-literal">+</span> <span class="hljs-title">[</span><span class="hljs-literal">-</span>&gt;++ ++<span class="hljs-literal">+</span><span class="hljs-literal">+</span><span class="hljs-literal">+</span> ++<span class="hljs-literal">+</span>&lt;<span class="hljs-title">]</span> &gt;++<span class="hljs-literal">+</span><span class="hljs-literal">+</span> <span class="hljs-string">.</span>--<span class="hljs-literal">-</span><span class="hljs-string">.</span> ++<span class="hljs-literal">+</span><span class="hljs-literal">+</span><span class="hljs-literal">+</span> ++<span class="hljs-string">.</span><span class="hljs-string">.</span><span class="hljs-literal">+</span> ++<span class="hljs-string">.</span>&lt;<span class="hljs-literal">+</span> ++<span class="hljs-literal">+</span><span class="hljs-literal">+</span><span class="hljs-literal">+</span> ++<span class="hljs-title">[</span><span class="hljs-literal">-</span>&gt;<br>--<span class="hljs-literal">-</span><span class="hljs-literal">-</span><span class="hljs-literal">-</span> --<span class="hljs-literal">-</span>&lt;<span class="hljs-title">]</span> &gt;--<span class="hljs-literal">-</span><span class="hljs-string">.</span> &lt;++<span class="hljs-literal">+</span><span class="hljs-literal">+</span> ++<span class="hljs-literal">+</span><span class="hljs-literal">+</span><span class="hljs-title">[</span> <span class="hljs-literal">-</span>&gt;++<span class="hljs-literal">+</span> ++<span class="hljs-literal">+</span><span class="hljs-literal">+</span><span class="hljs-literal">+</span> &lt;<span class="hljs-title">]</span>&gt;++ ++<span class="hljs-literal">+</span><span class="hljs-literal">+</span><span class="hljs-literal">+</span> ++<span class="hljs-literal">+</span><span class="hljs-literal">+</span><span class="hljs-string">.</span> --<span class="hljs-literal">-</span><span class="hljs-literal">-</span><span class="hljs-literal">-</span> --<span class="hljs-literal">-</span><span class="hljs-string">.</span><span class="hljs-literal">+</span><br>++<span class="hljs-string">.</span>-- --<span class="hljs-literal">-</span><span class="hljs-literal">-</span><span class="hljs-string">.</span> --<span class="hljs-literal">-</span><span class="hljs-literal">-</span><span class="hljs-literal">-</span> --<span class="hljs-literal">-</span><span class="hljs-string">.</span>&lt; ++<span class="hljs-literal">+</span><span class="hljs-literal">+</span><span class="hljs-literal">+</span> ++<span class="hljs-title">[</span><span class="hljs-literal">-</span>&gt; --<span class="hljs-literal">-</span><span class="hljs-literal">-</span><span class="hljs-literal">-</span> --&lt;<span class="hljs-title">]</span>&gt; --<span class="hljs-literal">-</span><span class="hljs-literal">-</span><span class="hljs-literal">-</span> <span class="hljs-string">.</span>&lt;<br></code></pre></div></td></tr></table></figure><h3 id="在线加解密-10"><a href="#在线加解密-10" class="headerlink" title="在线加解密:"></a>在线加解密:</h3><p><a href="https://www.splitbrain.org/services/ook">Brainfuck1</a><br><a href="https://www.nayuki.io/page/brainfuck-interpreter-javascript">Brainfuck2</a></p><h2 id="摩尔斯电码"><a href="#摩尔斯电码" class="headerlink" title="摩尔斯电码"></a>摩尔斯电码</h2><h3 id="简述-16"><a href="#简述-16" class="headerlink" title="简述:"></a>简述:</h3><p>​ 摩尔斯电码(Morse Code)是由美国人萨缪尔·摩尔斯在1836年发明的一种时通时断的且通过不同的排列顺序来表达不同英文字母、数字和标点符号的信号代码，摩尔斯电码主要由以下5种它的代码组成：</p><ul><li>点（.）</li><li>划（-）</li><li>每个字符间短的停顿（通常用空格表示停顿）</li><li>每个词之间中等的停顿（通常用 / 划分）</li><li>以及句子之间长的停顿</li><li>莫尔斯电码对应表：</li></ul><table><thead><tr><th align="center">A .-</th><th align="center">B -…</th><th align="center">C -.-.</th><th align="center">D -..</th><th align="center">E .</th><th align="center">F ..-.</th><th align="center">G –.</th><th align="center">H ….</th><th align="center">I ..</th><th align="center">J .—</th></tr></thead><tbody><tr><td align="center">K -.-</td><td align="center">L .-..</td><td align="center">M –</td><td align="center">N -.</td><td align="center">O —</td><td align="center">P .–.</td><td align="center">Q –.-</td><td align="center">R .-.</td><td align="center">S …</td><td align="center">T -</td></tr><tr><td align="center">U ..-</td><td align="center">V …-</td><td align="center">W .–</td><td align="center">X -..-</td><td align="center">Y -.–</td><td align="center">Z –..</td><td align="center">0 —–</td><td align="center">1 .—-</td><td align="center">2 ..—</td><td align="center">3 …–</td></tr><tr><td align="center">4 ….-</td><td align="center">5 …..</td><td align="center">6 -….</td><td align="center">7 –…</td><td align="center">8 —..</td><td align="center">9 —-.</td><td align="center">. .-.-.-</td><td align="center">, –..–</td><td align="center">? ..–..</td><td align="center">- -….-</td></tr><tr><td align="center">= -…-</td><td align="center">: —…</td><td align="center">; -.-.-.</td><td align="center">( -.–.</td><td align="center">) -.–.-</td><td align="center">/ -..-.</td><td align="center">“ .-..-.</td><td align="center">$ …-..-</td><td align="center">‘ .—-.</td><td align="center">¶ .-.-..</td></tr><tr><td align="center">_ ..–.-</td><td align="center">@ .–.-.</td><td align="center">! —.</td><td align="center">! -.-.–</td><td align="center">+ .-.-.</td><td align="center">~ .-…</td><td align="center"># …-.-</td><td align="center">&amp; . …</td><td align="center">⁄ -..-.</td><td align="center"></td></tr></tbody></table><h3 id="特征-13"><a href="#特征-13" class="headerlink" title="特征:"></a>特征:</h3><p>由 . - “空格” / 表示。</p><h3 id="在线加解密-11"><a href="#在线加解密-11" class="headerlink" title="在线加解密:"></a>在线加解密:</h3><p><a href="http://rumkin.com/tools/cipher/morse.php">莫斯电码1</a></p><h2 id="社会主义编码"><a href="#社会主义编码" class="headerlink" title="社会主义编码"></a>社会主义编码</h2><h3 id="特征-14"><a href="#特征-14" class="headerlink" title="特征:"></a>特征:</h3><p>字符全部是社会主义核心价值观。</p><h3 id="在线加解密-12"><a href="#在线加解密-12" class="headerlink" title="在线加解密:"></a>在线加解密:</h3><p><a href="https://sym233.github.io/core-values-encoder/">社会主义编码</a></p><h2 id="与佛论禅"><a href="#与佛论禅" class="headerlink" title="与佛论禅"></a>与佛论禅</h2><h3 id="特征-15"><a href="#特征-15" class="headerlink" title="特征:"></a>特征:</h3><p>密文以”佛曰：如是我闻：”开头，密文一般是与关佛经的汉字.</p><h3 id="在线工具"><a href="#在线工具" class="headerlink" title="在线工具:"></a>在线工具:</h3><p><a href="https://www.keyfc.net/bbs/tools/tudoucode.aspx">与佛论禅</a></p><h2 id="兽音译者"><a href="#兽音译者" class="headerlink" title="兽音译者"></a>兽音译者</h2><h3 id="特征-16"><a href="#特征-16" class="headerlink" title="特征:"></a>特征:</h3><p>~ 呜嗷嗷嗷嗷呜啊嗷啊 ~</p><h3 id="举例-10"><a href="#举例-10" class="headerlink" title="举例:"></a>举例:</h3><figure class="highlight haml"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs haml">hello world<br>~呜嗷嗷嗷嗷呜啊嗷啊~呜嗷呜呜~嗷~嗷啊嗷啊呜嗷嗷呜~~嗷~呜呜嗷啊~嗷嗷嗷呜啊嗷嗷啊呜嗷呜呜啊嗷呜~啊嗷啊呜嗷呜嗷啊~嗷~呜呜嗷~啊嗷嗷嗷呜啊呜呜呜呜嗷呜呜~嗷嗷~啊嗷啊呜嗷嗷~~啊<br></code></pre></div></td></tr></table></figure><h3 id="在线解密-3"><a href="#在线解密-3" class="headerlink" title="在线解密:"></a>在线解密:</h3><p><a href="https://roar.iiilab.com/">兽语在线解密</a></p><h2 id="rabbit密码"><a href="#rabbit密码" class="headerlink" title="rabbit密码"></a>rabbit密码</h2><h3 id="举例-11"><a href="#举例-11" class="headerlink" title="举例:"></a>举例:</h3><figure class="highlight apache"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs apache"><span class="hljs-attribute">hello</span> world<br><span class="hljs-attribute">U2FsdGVkX1</span>/m<span class="hljs-number">3</span>oJAd<span class="hljs-number">3</span>oTJ<span class="hljs-number">1</span>WJCbsLcYvTxUNFug==<br><br></code></pre></div></td></tr></table></figure><h3 id="在线解密-4"><a href="#在线解密-4" class="headerlink" title="在线解密:"></a>在线解密:</h3><p><a href="https://www.sojson.com/encrypt_rabbit.html">rabbit密码解密</a></p><h2 id="栅栏密码加密解密"><a href="#栅栏密码加密解密" class="headerlink" title="栅栏密码加密解密"></a>栅栏密码加密解密</h2><h3 id="特征-17"><a href="#特征-17" class="headerlink" title="特征:"></a>特征:</h3><p>栅栏密码是一种简单的移动字符位置的加密方法，规则简单，容易破解。栅栏密码的加密方式：把文本按照一定的字数分成多个组，取每组第一个字连起来得到密文1，再取每组第二个字连起来得到密文2……最后把密文1、密文2……连成整段密文.</p><h3 id="举例-12"><a href="#举例-12" class="headerlink" title="举例:"></a>举例:</h3><figure class="highlight css"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs css">hello world<br>hlowrdel <span class="hljs-selector-tag">ol</span><br></code></pre></div></td></tr></table></figure><h3 id="在线解密-5"><a href="#在线解密-5" class="headerlink" title="在线解密:"></a>在线解密:</h3><p><a href="https://www.qqxiuzi.cn/bianma/zhalanmima.php">栅栏密码解密</a></p><h2 id="当铺密码"><a href="#当铺密码" class="headerlink" title="当铺密码"></a>当铺密码</h2><h3 id="特征-18"><a href="#特征-18" class="headerlink" title="特征:"></a>特征:</h3><p>当铺密码为简单加密法，加密方式以汉字出头的笔画来计数<br>例：“由”字有一笔出头，则为1</p><h3 id="举例-13"><a href="#举例-13" class="headerlink" title="举例:"></a>举例:</h3><figure class="highlight tap"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs tap">王夫 井工 夫口 由中人 井中 夫夫 由中大=67<span class="hljs-number"> 84 </span>70<span class="hljs-number"> 123 </span>82<span class="hljs-number"> 77 </span>125<br></code></pre></div></td></tr></table></figure><p>转换出来的数字多用于十进制转ascII</p><h3 id="在线解密-6"><a href="#在线解密-6" class="headerlink" title="在线解密:"></a>在线解密:</h3><p><a href="https://dsb.ink/ctf/dangpu.html">当铺密码</a></p><h2 id="猪圈密码"><a href="#猪圈密码" class="headerlink" title="猪圈密码"></a>猪圈密码</h2><h3 id="特征-19"><a href="#特征-19" class="headerlink" title="特征:"></a>特征:</h3><p>由以下符号组成:<br><img src="/img/pig.png"></p><h3 id="在线解密-7"><a href="#在线解密-7" class="headerlink" title="在线解密"></a>在线解密</h3><p><a href="http://www.metools.info/code/c90.html">猪圈密码在线解密</a></p><h2 id="rot13"><a href="#rot13" class="headerlink" title="rot13"></a>rot13</h2><h3 id="特征-20"><a href="#特征-20" class="headerlink" title="特征:"></a>特征:</h3><p>套用ROT13到一段文字上仅仅只需要检查字元字母顺序并取代它在13位之后的对应字母，有需要超过时则重新绕回26英文字母开头即可。A换成N、B换成O、依此类推到M换成Z，然后序列反转：N换成A、O换成B、最后Z换成M。只有这些出现在英文字母里头的字元受影响；数字、符号、空白字元以及所有其他字元都不变。不过它好像凯撒密码的变形版，凯撒密码是将明文的字母向后移动三位的到密文：</p><h3 id="在线解密-8"><a href="#在线解密-8" class="headerlink" title="在线解密"></a>在线解密</h3><p><a href="https://www.jisuan.mobi/puzzm6z1B1HH6yXW.html">rot13解密</a></p><h2 id="英文大小写替换"><a href="#英文大小写替换" class="headerlink" title="英文大小写替换"></a>英文大小写替换</h2><h3 id="在线替换"><a href="#在线替换" class="headerlink" title="在线替换"></a>在线替换</h3><p><a href="https://www.iamwawa.cn/daxiaoxie.html">英文字母大小写替换</a></p>]]></content>
    
    
    <categories>
      
      <category>CTF-Misc</category>
      
    </categories>
    
    
    <tags>
      
      <tag>编码查询</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>CTF-misc简介</title>
    <link href="/2021/12/05/CTF-misc%E7%AE%80%E4%BB%8B/"/>
    <url>/2021/12/05/CTF-misc%E7%AE%80%E4%BB%8B/</url>
    
    <content type="html"><![CDATA[<h2 id="Misc-简介"><a href="#Misc-简介" class="headerlink" title="Misc 简介"></a>Misc 简介</h2><p>Misc 是英文 Miscellaneous 的前四个字母，杂项、混合体、大杂烩的意思。</p><p>Misc 在国外的比赛中其实又被具体划分为各个小块，有</p><ul><li>Recon</li><li>Forensic</li><li>Stego</li><li>Misc</li><li>……<br>在国内的比赛中，被统一划分入 Misc 领域，有时 Crypto（尤其是古典密码）也被划入其中。</li></ul><p>在 Misc 这一章节中，将从以下几个方面介绍这一块的知识：</p><ul><li>Recon（信息搜集）</li></ul><p>主要介绍一些获取信息的渠道和一些利用百度、谷歌等搜索引擎的技巧</p><ul><li>Encode（编码转换）</li></ul><p>主要介绍在 CTF 比赛中一些常见的编码形式以及转换的技巧和常见方式</p><ul><li>Forensic &amp;&amp; Stego（数字取证 &amp;&amp; 隐写分析）</li></ul><p>隐写取证是 Misc 中最为重要的一块，包括文件分析、隐写、内存镜像分析和流量抓包分析等等，涉及巧妙的编码、隐藏数据、层层嵌套的文件中的文件，灵活利用搜索引擎获取所需要的信息等等。</p><p>CTF 中 Misc 与现实中的取证不同，现实中的取证很少会涉及巧妙的编码加密，数据隐藏，被分散嵌套在各处的文件字符串，或是其他脑洞类的 Challenge。很多时候是去精心恢复一个残损的文件，挖掘损坏硬盘中的蛛丝马迹, 或者从内存镜像中抽取有用的信息。</p><p>现实的取证需要从业者能够找出间接的恶意行为证据：攻击者攻击系统的痕迹，或是内部威胁行为的痕迹。实际工作中计算机取证大部分是从日志、内存、文件系统中找出犯罪线索，并找出与文件或文件系统中数据的关系。而流量取证比起内容数据的分析，更注重元数据的分析，也就是当前不同端点间常用 TLS 加密的网络会话。</p><p>Misc 是切入 CTF 竞赛领域、培养兴趣的最佳入口。Misc 考察基本知识，对安全技能的各个层面都有不同程度的涉及，可以在很大程度上启发思维。</p>]]></content>
    
    
    <categories>
      
      <category>CTF-Misc</category>
      
    </categories>
    
    
    <tags>
      
      <tag>简介</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Hexo d 错误</title>
    <link href="/2021/12/05/hexo-d/"/>
    <url>/2021/12/05/hexo-d/</url>
    
    <content type="html"><![CDATA[<h2 id="解决方式一："><a href="#解决方式一：" class="headerlink" title="解决方式一："></a>解决方式一：</h2><figure class="highlight bash"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs bash"><span class="hljs-comment">#删除git提交内容文件夹</span><br>rm -rf .deploy_git/<br><br><span class="hljs-comment">#执行</span><br>git config --global core.autocrlf <span class="hljs-literal">false</span><br><br><span class="hljs-comment">#最后</span><br>hexo clean &amp;&amp; hexo g &amp;&amp; hexo d<br></code></pre></div></td></tr></table></figure><h2 id="解决方式二：有可能是你的git-repo配置地址不正确-可以将http方式变更为ssh方式"><a href="#解决方式二：有可能是你的git-repo配置地址不正确-可以将http方式变更为ssh方式" class="headerlink" title="解决方式二：有可能是你的git repo配置地址不正确,可以将http方式变更为ssh方式"></a>解决方式二：有可能是你的git repo配置地址不正确,可以将http方式变更为ssh方式</h2><figure class="highlight bash"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs bash"><span class="hljs-comment">#进入站点根目录</span><br><span class="hljs-built_in">cd</span> /usr/<span class="hljs-built_in">local</span>/src/hexo/hanyubolg/<br><br><span class="hljs-comment">#删除git提交内容文件夹</span><br>vim _config.yml<br><br><span class="hljs-comment">#修改</span><br>deploy:<br><br><span class="hljs-built_in">type</span>: git<br><br>repo: https://github.com/yourname/yourname.github.io.git -&gt; git@github.com:a956551943/weixiaohui.github.io.git<br><br>branch: master<br><br><span class="hljs-comment">#最后</span><br>hexo clean &amp;&amp; hexo g &amp;&amp; hexo d<br><br></code></pre></div></td></tr></table></figure><h2 id="解决方式三：不建议"><a href="#解决方式三：不建议" class="headerlink" title="解决方式三：不建议"></a>解决方式三：不建议</h2><figure class="highlight bash"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs bash"><span class="hljs-comment">#进入站点根目录</span><br><span class="hljs-built_in">cd</span> /usr/<span class="hljs-built_in">local</span>/src/hexo/hanyubolg/<br><br><span class="hljs-comment">#进入depoly文件夹</span><br><span class="hljs-built_in">cd</span> .deploy_git/<br><br><span class="hljs-comment">#强制推送</span><br>git push -f<br></code></pre></div></td></tr></table></figure>]]></content>
    
    
    
    <tags>
      
      <tag>常见错误</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>CTF比赛简介</title>
    <link href="/2021/12/02/CTF%E6%AF%94%E8%B5%9B%E7%AE%80%E4%BB%8B/"/>
    <url>/2021/12/02/CTF%E6%AF%94%E8%B5%9B%E7%AE%80%E4%BB%8B/</url>
    
    <content type="html"><![CDATA[<h1 id="AwD-攻防模式"><a href="#AwD-攻防模式" class="headerlink" title="AwD-攻防模式"></a>AwD-攻防模式</h1><p>Attack with Defense(AwD)全称攻防模式，在攻防模式CTF赛制中，参赛队伍连接到同一个网络空间。主办方会预先为每个参赛队分配要防守的主机，该主机称之为GameBox，每个队伍之间的GameBox配置及漏洞是完全一致的，选手需要防护自己的GameBox不被攻击的同时挖掘漏洞并攻击对手服务来得分。在AwD中主办方会运行一个名为Checker的程序定时检测选手的GameBox的运行状态。若检测到状态不对则判定该GameBox宕机，按照规则扣除一定分数。攻防模式CTF赛制可以实时通过得分反映出比赛情况，最终也以得分直接分出胜负，是一种竞争激烈，具有很强观赏性和高度透明性的网络安全赛制。在这种赛制中，不仅仅是比参赛队员的智力和技术，也比体力（因为比赛一般都会持续24至48小时左右），同时也比团队之间的分工配合与合作。</p><p>AwD通常仅包含Web及Pwn两种类型的题目。每个队伍可能会分到多个GameBox，随着比赛的进行，最早的GameBox可能会下线，同时会上线新的GameBox。</p><h1 id="AWP-攻防增强"><a href="#AWP-攻防增强" class="headerlink" title="AWP-攻防增强"></a>AWP-攻防增强</h1><p>Attack Defense Plus(ADP)全称攻防增强模式，在该模式下中，参赛队伍连接到同一个网络空间。主办方会在平台上放置题目，选手需要登录到平台获得题目信息</p><p>攻击模式下，平台会给出题目的访问链接，选手按照解题模式做题提交flag即可完成攻击，当完成攻击后， 每轮计算分数时均会计算该题目的攻击得分。</p><p>防御模式下，选手需要自行挖掘题目的漏洞，并制作漏洞补丁包上传至平台，之后点击验证。验证时平台会新建一个完全干净的题目环境，使用预置的Exploit进行攻击，若攻击成功当验证通过之后（即已经完成修补），每轮计算分数均会认为该题目已防御。</p><p>也就是说，对于每个题目，仅需要攻击成功一次，防御成功一次，该题就可以认为已完成，后续无需进行关注。</p><p>ADP通常仅包含Web及Pwn两种类型的题目。随着比赛的进行，最早的题目可能会下线，后续也有可能会上线新的题目。</p><p>ADP相较于AwD来说，选手无须编写批量攻击脚本，也无需关注题目的环境是否被攻击，是否服务异常等等，要做的只是攻击一次，防御一次，选手可以有更多的时间聚焦于还未完成的题目。从主办方的角度来说，大大减轻了比赛的硬件成本和运维成本。</p><h1 id="RHG-自动化-AI自动化"><a href="#RHG-自动化-AI自动化" class="headerlink" title="RHG-自动化[ AI自动化]"></a>RHG-自动化[ AI自动化]</h1><p>Robo Hacking Game(RHG)该利用人工智能或是AI或是自动化攻击程序来全自动的挖掘并利用漏洞，考验选手对于漏洞理解以及工程化能力。比赛开始前(一般为1-4周左右)主办方会给出测试环境以及相关接口文档。选手需要编写自动化程序来请求接口获取题目相关信息，该类程序通常称之为bot，在程序中全自动访问并挖掘目标漏洞，完成利用漏洞攻击并获取flag的过程。获取到的flag也由程序自动化提交。RHG因为是由bot全自动进行工作，所以比赛开始即可视为结束。剩下的一切全看参赛选手编写的自动化bot的工作情况。</p><p>比赛过程中不允许选手对bot进行任何的操作(包括debug/patch等等)。选手仅能看到自己的bot完成了哪些题。目前的得分情况等等。</p><h1 id="RW-真实世界"><a href="#RW-真实世界" class="headerlink" title="RW-真实世界"></a>RW-真实世界</h1><p>Real World(RW) 首次于2018年长亭科技主办的RealWorldCTF中出现，该赛制着重考察选手在面对真实的环境下的漏洞挖掘与利用能力。通常RW模式出题也会围绕着能够应用于真实渗透攻击当中的漏洞，一般来说RW常见题型为VM/Docker逃逸、针对浏览器的攻击、针对IoT/Car等设备的攻击，Web类攻击等等 在RW赛制中会有一个Show Time，当选手认为自己已经可以完成题目时，选手可以在比赛平台上提交展示申请，由工作人员根据申请先后顺序进行展示排期。选手展示之前需要上台并连接相关网络，同时现场大屏会切换至目标的正常页面。选手确认连接并测试OK之后开始计时。一般情况下上台攻击的时间为5分钟，选手一旦完成攻击现场大屏幕会实时看到攻击的效果，此时裁判会根据效果是否符合题目要求来判定该题是否完成。如5在攻击时间内依然未能看到展示效果则认为本次攻击失败。现如今为了防止选手恶意排期。通常会有一个队伍总展示次数(例如在2019年数字经济云安全公测大赛中每个队伍只允许上台展示30次)，选手也需要尽可能保证上台之后攻击的成功率</p><p>举个例子。题目要求需要攻击位于比赛网络中的某个网站并将首页替换为包含队伍名称的页面。题目给出该网站的一些信息(源代码/数据库等等)，选手经过本地挖掘漏洞之后，提交展示申请，排期到了之后进行上台展示。注意，因为RW模式是以展示效果来作为题目是否完成的准则，所以在RW模式中并不存在Flag。</p><h1 id="KoH-抢占山头"><a href="#KoH-抢占山头" class="headerlink" title="KoH-抢占山头"></a>KoH-抢占山头</h1><p>King of Hill(KoH)是近些年新衍生的一种赛制。该赛制有点类似于AwD，但是又和AwD有些不一样。选手面对的是一个黑盒的目标，需要先挖掘漏洞并利用漏洞控制目标。将自己的队伍标识(队伍名称或是Token之类)写入到指定文件。随后在该主机上进行加固等操作防止其他队伍攻击，主办方会定期去检查标识文件，根据文件中的队伍标识来判定本回合分数给予哪个队伍。可以看出KoH也是一种对抗极为激烈的赛制，同时考察选手的渗透能力及防御加固能力。</p><h1 id="Mix"><a href="#Mix" class="headerlink" title="Mix"></a>Mix</h1><p>混合模式结合了以上多种模式，现如今单一的赛制已经无法满足比赛及选手的参赛需求，所以大部分比赛会同时以多个模式进行比赛。例如参赛队伍通过解题(Jeopardy)可以获取一些初始分数，然后通过攻防对抗(AwD)进行得分增减的零和游戏，最终以得分高低分出胜负。</p>]]></content>
    
    
    <categories>
      
      <category>CTF</category>
      
    </categories>
    
    
    <tags>
      
      <tag>简介</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Hello World</title>
    <link href="/2021/11/29/hello-world/"/>
    <url>/2021/11/29/hello-world/</url>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs bash">$ hexo new <span class="hljs-string">&quot;My New Post&quot;</span><br></code></pre></div></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs bash">$ hexo server<br></code></pre></div></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs bash">$ hexo generate<br></code></pre></div></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs bash">$ hexo deploy<br></code></pre></div></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
    
  </entry>
  
  
  
  
</search>
